//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.1433
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace VP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PRINTERDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PRINTERDataSet : global::System.Data.DataSet {
        
        private PrescriptionDataTable tablePrescription;
        
        private PrescriptionItemDataTable tablePrescriptionItem;
        
        private LayoutDataTable tableLayout;
        
        private LayoutItemDataTable tableLayoutItem;
        
        private DrugDataTable tableDrug;
        
        private TTPDataTable tableTTP;
        
        private PacketDataTable tablePacket;
        
        private PacketItemDataTable tablePacketItem;
        
        private ParameterDataTable tableParameter;
        
        private global::System.Data.DataRelation relationFK_Prescription_PrescriptionItem;
        
        private global::System.Data.DataRelation relationFK_Layout_LayoutItem;
        
        private global::System.Data.DataRelation relationFK_Prescription_Packet;
        
        private global::System.Data.DataRelation relationFK_Prescription_PacketItem;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRINTERDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PRINTERDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Prescription"] != null)) {
                    base.Tables.Add(new PrescriptionDataTable(ds.Tables["Prescription"]));
                }
                if ((ds.Tables["PrescriptionItem"] != null)) {
                    base.Tables.Add(new PrescriptionItemDataTable(ds.Tables["PrescriptionItem"]));
                }
                if ((ds.Tables["Layout"] != null)) {
                    base.Tables.Add(new LayoutDataTable(ds.Tables["Layout"]));
                }
                if ((ds.Tables["LayoutItem"] != null)) {
                    base.Tables.Add(new LayoutItemDataTable(ds.Tables["LayoutItem"]));
                }
                if ((ds.Tables["Drug"] != null)) {
                    base.Tables.Add(new DrugDataTable(ds.Tables["Drug"]));
                }
                if ((ds.Tables["TTP"] != null)) {
                    base.Tables.Add(new TTPDataTable(ds.Tables["TTP"]));
                }
                if ((ds.Tables["Packet"] != null)) {
                    base.Tables.Add(new PacketDataTable(ds.Tables["Packet"]));
                }
                if ((ds.Tables["PacketItem"] != null)) {
                    base.Tables.Add(new PacketItemDataTable(ds.Tables["PacketItem"]));
                }
                if ((ds.Tables["Parameter"] != null)) {
                    base.Tables.Add(new ParameterDataTable(ds.Tables["Parameter"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrescriptionDataTable Prescription {
            get {
                return this.tablePrescription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrescriptionItemDataTable PrescriptionItem {
            get {
                return this.tablePrescriptionItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LayoutDataTable Layout {
            get {
                return this.tableLayout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LayoutItemDataTable LayoutItem {
            get {
                return this.tableLayoutItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DrugDataTable Drug {
            get {
                return this.tableDrug;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TTPDataTable TTP {
            get {
                return this.tableTTP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PacketDataTable Packet {
            get {
                return this.tablePacket;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PacketItemDataTable PacketItem {
            get {
                return this.tablePacketItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParameterDataTable Parameter {
            get {
                return this.tableParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PRINTERDataSet cln = ((PRINTERDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Prescription"] != null)) {
                    base.Tables.Add(new PrescriptionDataTable(ds.Tables["Prescription"]));
                }
                if ((ds.Tables["PrescriptionItem"] != null)) {
                    base.Tables.Add(new PrescriptionItemDataTable(ds.Tables["PrescriptionItem"]));
                }
                if ((ds.Tables["Layout"] != null)) {
                    base.Tables.Add(new LayoutDataTable(ds.Tables["Layout"]));
                }
                if ((ds.Tables["LayoutItem"] != null)) {
                    base.Tables.Add(new LayoutItemDataTable(ds.Tables["LayoutItem"]));
                }
                if ((ds.Tables["Drug"] != null)) {
                    base.Tables.Add(new DrugDataTable(ds.Tables["Drug"]));
                }
                if ((ds.Tables["TTP"] != null)) {
                    base.Tables.Add(new TTPDataTable(ds.Tables["TTP"]));
                }
                if ((ds.Tables["Packet"] != null)) {
                    base.Tables.Add(new PacketDataTable(ds.Tables["Packet"]));
                }
                if ((ds.Tables["PacketItem"] != null)) {
                    base.Tables.Add(new PacketItemDataTable(ds.Tables["PacketItem"]));
                }
                if ((ds.Tables["Parameter"] != null)) {
                    base.Tables.Add(new ParameterDataTable(ds.Tables["Parameter"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePrescription = ((PrescriptionDataTable)(base.Tables["Prescription"]));
            if ((initTable == true)) {
                if ((this.tablePrescription != null)) {
                    this.tablePrescription.InitVars();
                }
            }
            this.tablePrescriptionItem = ((PrescriptionItemDataTable)(base.Tables["PrescriptionItem"]));
            if ((initTable == true)) {
                if ((this.tablePrescriptionItem != null)) {
                    this.tablePrescriptionItem.InitVars();
                }
            }
            this.tableLayout = ((LayoutDataTable)(base.Tables["Layout"]));
            if ((initTable == true)) {
                if ((this.tableLayout != null)) {
                    this.tableLayout.InitVars();
                }
            }
            this.tableLayoutItem = ((LayoutItemDataTable)(base.Tables["LayoutItem"]));
            if ((initTable == true)) {
                if ((this.tableLayoutItem != null)) {
                    this.tableLayoutItem.InitVars();
                }
            }
            this.tableDrug = ((DrugDataTable)(base.Tables["Drug"]));
            if ((initTable == true)) {
                if ((this.tableDrug != null)) {
                    this.tableDrug.InitVars();
                }
            }
            this.tableTTP = ((TTPDataTable)(base.Tables["TTP"]));
            if ((initTable == true)) {
                if ((this.tableTTP != null)) {
                    this.tableTTP.InitVars();
                }
            }
            this.tablePacket = ((PacketDataTable)(base.Tables["Packet"]));
            if ((initTable == true)) {
                if ((this.tablePacket != null)) {
                    this.tablePacket.InitVars();
                }
            }
            this.tablePacketItem = ((PacketItemDataTable)(base.Tables["PacketItem"]));
            if ((initTable == true)) {
                if ((this.tablePacketItem != null)) {
                    this.tablePacketItem.InitVars();
                }
            }
            this.tableParameter = ((ParameterDataTable)(base.Tables["Parameter"]));
            if ((initTable == true)) {
                if ((this.tableParameter != null)) {
                    this.tableParameter.InitVars();
                }
            }
            this.relationFK_Prescription_PrescriptionItem = this.Relations["FK_Prescription_PrescriptionItem"];
            this.relationFK_Layout_LayoutItem = this.Relations["FK_Layout_LayoutItem"];
            this.relationFK_Prescription_Packet = this.Relations["FK_Prescription_Packet"];
            this.relationFK_Prescription_PacketItem = this.Relations["FK_Prescription_PacketItem"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PRINTERDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PRINTERDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePrescription = new PrescriptionDataTable();
            base.Tables.Add(this.tablePrescription);
            this.tablePrescriptionItem = new PrescriptionItemDataTable();
            base.Tables.Add(this.tablePrescriptionItem);
            this.tableLayout = new LayoutDataTable();
            base.Tables.Add(this.tableLayout);
            this.tableLayoutItem = new LayoutItemDataTable();
            base.Tables.Add(this.tableLayoutItem);
            this.tableDrug = new DrugDataTable();
            base.Tables.Add(this.tableDrug);
            this.tableTTP = new TTPDataTable();
            base.Tables.Add(this.tableTTP);
            this.tablePacket = new PacketDataTable();
            base.Tables.Add(this.tablePacket);
            this.tablePacketItem = new PacketItemDataTable();
            base.Tables.Add(this.tablePacketItem);
            this.tableParameter = new ParameterDataTable();
            base.Tables.Add(this.tableParameter);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Prescription_PrescriptionItem", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePrescriptionItem.PKeyColumn});
            this.tablePrescriptionItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Layout_LayoutItem", new global::System.Data.DataColumn[] {
                        this.tableLayout.LayoutKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tableLayoutItem.LayoutKeyColumn});
            this.tableLayoutItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Prescription_Packet", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePacket.PKeyColumn});
            this.tablePacket.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Prescription_PacketItem", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePacketItem.PKeyColumn});
            this.tablePacketItem.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Prescription_PrescriptionItem = new global::System.Data.DataRelation("FK_Prescription_PrescriptionItem", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePrescriptionItem.PKeyColumn}, false);
            this.Relations.Add(this.relationFK_Prescription_PrescriptionItem);
            this.relationFK_Layout_LayoutItem = new global::System.Data.DataRelation("FK_Layout_LayoutItem", new global::System.Data.DataColumn[] {
                        this.tableLayout.LayoutKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tableLayoutItem.LayoutKeyColumn}, false);
            this.Relations.Add(this.relationFK_Layout_LayoutItem);
            this.relationFK_Prescription_Packet = new global::System.Data.DataRelation("FK_Prescription_Packet", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePacket.PKeyColumn}, false);
            this.Relations.Add(this.relationFK_Prescription_Packet);
            this.relationFK_Prescription_PacketItem = new global::System.Data.DataRelation("FK_Prescription_PacketItem", new global::System.Data.DataColumn[] {
                        this.tablePrescription.PKeyColumn}, new global::System.Data.DataColumn[] {
                        this.tablePacketItem.PKeyColumn}, false);
            this.Relations.Add(this.relationFK_Prescription_PacketItem);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrescription() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrescriptionItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLayout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLayoutItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDrug() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTTP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePacket() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePacketItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PRINTERDataSet ds = new PRINTERDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PrescriptionRowChangeEventHandler(object sender, PrescriptionRowChangeEvent e);
        
        public delegate void PrescriptionItemRowChangeEventHandler(object sender, PrescriptionItemRowChangeEvent e);
        
        public delegate void LayoutRowChangeEventHandler(object sender, LayoutRowChangeEvent e);
        
        public delegate void LayoutItemRowChangeEventHandler(object sender, LayoutItemRowChangeEvent e);
        
        public delegate void DrugRowChangeEventHandler(object sender, DrugRowChangeEvent e);
        
        public delegate void TTPRowChangeEventHandler(object sender, TTPRowChangeEvent e);
        
        public delegate void PacketRowChangeEventHandler(object sender, PacketRowChangeEvent e);
        
        public delegate void PacketItemRowChangeEventHandler(object sender, PacketItemRowChangeEvent e);
        
        public delegate void ParameterRowChangeEventHandler(object sender, ParameterRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrescriptionDataTable : global::System.Data.TypedTableBase<PrescriptionRow> {
            
            private global::System.Data.DataColumn columnPrescriptionKey;
            
            private global::System.Data.DataColumn columnPatientNo;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnPatientSex;
            
            private global::System.Data.DataColumn columnPatientBirthday;
            
            private global::System.Data.DataColumn columnPrescriptionNo;
            
            private global::System.Data.DataColumn columnPrescriptionType;
            
            private global::System.Data.DataColumn columnPrescriptionDateTime;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnPhysician;
            
            private global::System.Data.DataColumn columnTakeType;
            
            private global::System.Data.DataColumn columnPackNum;
            
            private global::System.Data.DataColumn columnIsPacked;
            
            private global::System.Data.DataColumn columnPackDateTime;
            
            private global::System.Data.DataColumn columnReceiveDateTime;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnPKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionDataTable() {
                this.TableName = "Prescription";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrescriptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PrescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionKeyColumn {
                get {
                    return this.columnPrescriptionKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatientNoColumn {
                get {
                    return this.columnPatientNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatientSexColumn {
                get {
                    return this.columnPatientSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatientBirthdayColumn {
                get {
                    return this.columnPatientBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionNoColumn {
                get {
                    return this.columnPrescriptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionTypeColumn {
                get {
                    return this.columnPrescriptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionDateTimeColumn {
                get {
                    return this.columnPrescriptionDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysicianColumn {
                get {
                    return this.columnPhysician;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakeTypeColumn {
                get {
                    return this.columnTakeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackNumColumn {
                get {
                    return this.columnPackNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPackedColumn {
                get {
                    return this.columnIsPacked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackDateTimeColumn {
                get {
                    return this.columnPackDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveDateTimeColumn {
                get {
                    return this.columnReceiveDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PKeyColumn {
                get {
                    return this.columnPKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow this[int index] {
                get {
                    return ((PrescriptionRow)(this.Rows[index]));
                }
            }
            
            public event PrescriptionRowChangeEventHandler PrescriptionRowChanging;
            
            public event PrescriptionRowChangeEventHandler PrescriptionRowChanged;
            
            public event PrescriptionRowChangeEventHandler PrescriptionRowDeleting;
            
            public event PrescriptionRowChangeEventHandler PrescriptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrescriptionRow(PrescriptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow AddPrescriptionRow(
                        string PatientNo, 
                        string PatientID, 
                        string PatientName, 
                        string PatientSex, 
                        System.DateTime PatientBirthday, 
                        string PrescriptionNo, 
                        string PrescriptionType, 
                        System.DateTime PrescriptionDateTime, 
                        string Department, 
                        string Physician, 
                        string TakeType, 
                        int PackNum, 
                        bool IsPacked, 
                        System.DateTime PackDateTime, 
                        System.DateTime ReceiveDateTime, 
                        string Memo, 
                        string PKey) {
                PrescriptionRow rowPrescriptionRow = ((PrescriptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PatientNo,
                        PatientID,
                        PatientName,
                        PatientSex,
                        PatientBirthday,
                        PrescriptionNo,
                        PrescriptionType,
                        PrescriptionDateTime,
                        Department,
                        Physician,
                        TakeType,
                        PackNum,
                        IsPacked,
                        PackDateTime,
                        ReceiveDateTime,
                        Memo,
                        PKey};
                rowPrescriptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrescriptionRow);
                return rowPrescriptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow FindByPrescriptionKey(int PrescriptionKey) {
                return ((PrescriptionRow)(this.Rows.Find(new object[] {
                            PrescriptionKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PrescriptionDataTable cln = ((PrescriptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrescriptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPrescriptionKey = base.Columns["PrescriptionKey"];
                this.columnPatientNo = base.Columns["PatientNo"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnPatientSex = base.Columns["PatientSex"];
                this.columnPatientBirthday = base.Columns["PatientBirthday"];
                this.columnPrescriptionNo = base.Columns["PrescriptionNo"];
                this.columnPrescriptionType = base.Columns["PrescriptionType"];
                this.columnPrescriptionDateTime = base.Columns["PrescriptionDateTime"];
                this.columnDepartment = base.Columns["Department"];
                this.columnPhysician = base.Columns["Physician"];
                this.columnTakeType = base.Columns["TakeType"];
                this.columnPackNum = base.Columns["PackNum"];
                this.columnIsPacked = base.Columns["IsPacked"];
                this.columnPackDateTime = base.Columns["PackDateTime"];
                this.columnReceiveDateTime = base.Columns["ReceiveDateTime"];
                this.columnMemo = base.Columns["Memo"];
                this.columnPKey = base.Columns["PKey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPrescriptionKey = new global::System.Data.DataColumn("PrescriptionKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionKey);
                this.columnPatientNo = new global::System.Data.DataColumn("PatientNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientNo);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnPatientSex = new global::System.Data.DataColumn("PatientSex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientSex);
                this.columnPatientBirthday = new global::System.Data.DataColumn("PatientBirthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBirthday);
                this.columnPrescriptionNo = new global::System.Data.DataColumn("PrescriptionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionNo);
                this.columnPrescriptionType = new global::System.Data.DataColumn("PrescriptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionType);
                this.columnPrescriptionDateTime = new global::System.Data.DataColumn("PrescriptionDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionDateTime);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnPhysician = new global::System.Data.DataColumn("Physician", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysician);
                this.columnTakeType = new global::System.Data.DataColumn("TakeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakeType);
                this.columnPackNum = new global::System.Data.DataColumn("PackNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackNum);
                this.columnIsPacked = new global::System.Data.DataColumn("IsPacked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPacked);
                this.columnPackDateTime = new global::System.Data.DataColumn("PackDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackDateTime);
                this.columnReceiveDateTime = new global::System.Data.DataColumn("ReceiveDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDateTime);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnPKey = new global::System.Data.DataColumn("PKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKey);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPrescriptionKey}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnPKey}, false));
                this.columnPrescriptionKey.AutoIncrement = true;
                this.columnPrescriptionKey.AutoIncrementSeed = -1;
                this.columnPrescriptionKey.AutoIncrementStep = -1;
                this.columnPrescriptionKey.AllowDBNull = false;
                this.columnPrescriptionKey.Unique = true;
                this.columnPatientNo.MaxLength = 50;
                this.columnPatientID.MaxLength = 13;
                this.columnPatientName.MaxLength = 50;
                this.columnPatientSex.MaxLength = 10;
                this.columnPrescriptionNo.MaxLength = 50;
                this.columnPrescriptionType.MaxLength = 20;
                this.columnDepartment.MaxLength = 50;
                this.columnPhysician.MaxLength = 50;
                this.columnTakeType.MaxLength = 20;
                this.columnMemo.MaxLength = 255;
                this.columnPKey.AllowDBNull = false;
                this.columnPKey.Unique = true;
                this.columnPKey.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow NewPrescriptionRow() {
                return ((PrescriptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrescriptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PrescriptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrescriptionRowChanged != null)) {
                    this.PrescriptionRowChanged(this, new PrescriptionRowChangeEvent(((PrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrescriptionRowChanging != null)) {
                    this.PrescriptionRowChanging(this, new PrescriptionRowChangeEvent(((PrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrescriptionRowDeleted != null)) {
                    this.PrescriptionRowDeleted(this, new PrescriptionRowChangeEvent(((PrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrescriptionRowDeleting != null)) {
                    this.PrescriptionRowDeleting(this, new PrescriptionRowChangeEvent(((PrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrescriptionRow(PrescriptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrescriptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrescriptionItemDataTable : global::System.Data.TypedTableBase<PrescriptionItemRow> {
            
            private global::System.Data.DataColumn columnPrescriptionKey;
            
            private global::System.Data.DataColumn columnDrugName;
            
            private global::System.Data.DataColumn columnDays;
            
            private global::System.Data.DataColumn columnIsPack;
            
            private global::System.Data.DataColumn columnPrescriptionItemKey;
            
            private global::System.Data.DataColumn columnTTP;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnPKey;
            
            private global::System.Data.DataColumn columnTimesQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemDataTable() {
                this.TableName = "PrescriptionItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrescriptionItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PrescriptionItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionKeyColumn {
                get {
                    return this.columnPrescriptionKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugNameColumn {
                get {
                    return this.columnDrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysColumn {
                get {
                    return this.columnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPackColumn {
                get {
                    return this.columnIsPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionItemKeyColumn {
                get {
                    return this.columnPrescriptionItemKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTPColumn {
                get {
                    return this.columnTTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PKeyColumn {
                get {
                    return this.columnPKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimesQtyColumn {
                get {
                    return this.columnTimesQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow this[int index] {
                get {
                    return ((PrescriptionItemRow)(this.Rows[index]));
                }
            }
            
            public event PrescriptionItemRowChangeEventHandler PrescriptionItemRowChanging;
            
            public event PrescriptionItemRowChangeEventHandler PrescriptionItemRowChanged;
            
            public event PrescriptionItemRowChangeEventHandler PrescriptionItemRowDeleting;
            
            public event PrescriptionItemRowChangeEventHandler PrescriptionItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrescriptionItemRow(PrescriptionItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow AddPrescriptionItemRow(int PrescriptionKey, string DrugName, short Days, bool IsPack, string TTP, float Total, PrescriptionRow parentPrescriptionRowByFK_Prescription_PrescriptionItem, float TimesQty) {
                PrescriptionItemRow rowPrescriptionItemRow = ((PrescriptionItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PrescriptionKey,
                        DrugName,
                        Days,
                        IsPack,
                        null,
                        TTP,
                        Total,
                        null,
                        TimesQty};
                if ((parentPrescriptionRowByFK_Prescription_PrescriptionItem != null)) {
                    columnValuesArray[7] = parentPrescriptionRowByFK_Prescription_PrescriptionItem[17];
                }
                rowPrescriptionItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrescriptionItemRow);
                return rowPrescriptionItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow FindByPrescriptionItemKey(int PrescriptionItemKey) {
                return ((PrescriptionItemRow)(this.Rows.Find(new object[] {
                            PrescriptionItemKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PrescriptionItemDataTable cln = ((PrescriptionItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrescriptionItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPrescriptionKey = base.Columns["PrescriptionKey"];
                this.columnDrugName = base.Columns["DrugName"];
                this.columnDays = base.Columns["Days"];
                this.columnIsPack = base.Columns["IsPack"];
                this.columnPrescriptionItemKey = base.Columns["PrescriptionItemKey"];
                this.columnTTP = base.Columns["TTP"];
                this.columnTotal = base.Columns["Total"];
                this.columnPKey = base.Columns["PKey"];
                this.columnTimesQty = base.Columns["TimesQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPrescriptionKey = new global::System.Data.DataColumn("PrescriptionKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionKey);
                this.columnDrugName = new global::System.Data.DataColumn("DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName);
                this.columnDays = new global::System.Data.DataColumn("Days", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDays);
                this.columnIsPack = new global::System.Data.DataColumn("IsPack", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPack);
                this.columnPrescriptionItemKey = new global::System.Data.DataColumn("PrescriptionItemKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionItemKey);
                this.columnTTP = new global::System.Data.DataColumn("TTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTP);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPKey = new global::System.Data.DataColumn("PKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKey);
                this.columnTimesQty = new global::System.Data.DataColumn("TimesQty", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesQty);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPrescriptionItemKey}, true));
                this.columnDrugName.MaxLength = 50;
                this.columnPrescriptionItemKey.AutoIncrement = true;
                this.columnPrescriptionItemKey.AutoIncrementSeed = -1;
                this.columnPrescriptionItemKey.AutoIncrementStep = -1;
                this.columnPrescriptionItemKey.AllowDBNull = false;
                this.columnPrescriptionItemKey.Unique = true;
                this.columnTTP.MaxLength = 50;
                this.columnPKey.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow NewPrescriptionItemRow() {
                return ((PrescriptionItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrescriptionItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PrescriptionItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrescriptionItemRowChanged != null)) {
                    this.PrescriptionItemRowChanged(this, new PrescriptionItemRowChangeEvent(((PrescriptionItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrescriptionItemRowChanging != null)) {
                    this.PrescriptionItemRowChanging(this, new PrescriptionItemRowChangeEvent(((PrescriptionItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrescriptionItemRowDeleted != null)) {
                    this.PrescriptionItemRowDeleted(this, new PrescriptionItemRowChangeEvent(((PrescriptionItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrescriptionItemRowDeleting != null)) {
                    this.PrescriptionItemRowDeleting(this, new PrescriptionItemRowChangeEvent(((PrescriptionItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrescriptionItemRow(PrescriptionItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrescriptionItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LayoutDataTable : global::System.Data.TypedTableBase<LayoutRow> {
            
            private global::System.Data.DataColumn columnLayoutKey;
            
            private global::System.Data.DataColumn columnLableDisplay;
            
            private global::System.Data.DataColumn columnLableType;
            
            private global::System.Data.DataColumn columnIsPrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutDataTable() {
                this.TableName = "Layout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LayoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LayoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayoutKeyColumn {
                get {
                    return this.columnLayoutKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LableDisplayColumn {
                get {
                    return this.columnLableDisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LableTypeColumn {
                get {
                    return this.columnLableType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrintColumn {
                get {
                    return this.columnIsPrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow this[int index] {
                get {
                    return ((LayoutRow)(this.Rows[index]));
                }
            }
            
            public event LayoutRowChangeEventHandler LayoutRowChanging;
            
            public event LayoutRowChangeEventHandler LayoutRowChanged;
            
            public event LayoutRowChangeEventHandler LayoutRowDeleting;
            
            public event LayoutRowChangeEventHandler LayoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLayoutRow(LayoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow AddLayoutRow(string LableDisplay, string LableType, bool IsPrint) {
                LayoutRow rowLayoutRow = ((LayoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LableDisplay,
                        LableType,
                        IsPrint};
                rowLayoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLayoutRow);
                return rowLayoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow FindByLayoutKey(int LayoutKey) {
                return ((LayoutRow)(this.Rows.Find(new object[] {
                            LayoutKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LayoutDataTable cln = ((LayoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LayoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLayoutKey = base.Columns["LayoutKey"];
                this.columnLableDisplay = base.Columns["LableDisplay"];
                this.columnLableType = base.Columns["LableType"];
                this.columnIsPrint = base.Columns["IsPrint"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLayoutKey = new global::System.Data.DataColumn("LayoutKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayoutKey);
                this.columnLableDisplay = new global::System.Data.DataColumn("LableDisplay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLableDisplay);
                this.columnLableType = new global::System.Data.DataColumn("LableType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLableType);
                this.columnIsPrint = new global::System.Data.DataColumn("IsPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrint);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLayoutKey}, true));
                this.columnLayoutKey.AutoIncrement = true;
                this.columnLayoutKey.AutoIncrementSeed = -1;
                this.columnLayoutKey.AutoIncrementStep = -1;
                this.columnLayoutKey.AllowDBNull = false;
                this.columnLayoutKey.Unique = true;
                this.columnLableDisplay.MaxLength = 50;
                this.columnLableType.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow NewLayoutRow() {
                return ((LayoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LayoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LayoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LayoutRowChanged != null)) {
                    this.LayoutRowChanged(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LayoutRowChanging != null)) {
                    this.LayoutRowChanging(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LayoutRowDeleted != null)) {
                    this.LayoutRowDeleted(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LayoutRowDeleting != null)) {
                    this.LayoutRowDeleting(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLayoutRow(LayoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LayoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LayoutItemDataTable : global::System.Data.TypedTableBase<LayoutItemRow> {
            
            private global::System.Data.DataColumn columnLayoutItemKey;
            
            private global::System.Data.DataColumn columnLayoutKey;
            
            private global::System.Data.DataColumn columnLabelType;
            
            private global::System.Data.DataColumn columnLabelText;
            
            private global::System.Data.DataColumn columnX;
            
            private global::System.Data.DataColumn columnY;
            
            private global::System.Data.DataColumn columnW;
            
            private global::System.Data.DataColumn columnH;
            
            private global::System.Data.DataColumn columnAlign;
            
            private global::System.Data.DataColumn columnFontName;
            
            private global::System.Data.DataColumn columnFontSize;
            
            private global::System.Data.DataColumn columnFontBold;
            
            private global::System.Data.DataColumn columnFontItalic;
            
            private global::System.Data.DataColumn columnFontStrikeout;
            
            private global::System.Data.DataColumn columnFontUnderline;
            
            private global::System.Data.DataColumn columnVisible;
            
            private global::System.Data.DataColumn columnShowImage;
            
            private global::System.Data.DataColumn columnImagePath;
            
            private global::System.Data.DataColumn columnFontObject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemDataTable() {
                this.TableName = "LayoutItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LayoutItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LayoutItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayoutItemKeyColumn {
                get {
                    return this.columnLayoutItemKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayoutKeyColumn {
                get {
                    return this.columnLayoutKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelTypeColumn {
                get {
                    return this.columnLabelType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelTextColumn {
                get {
                    return this.columnLabelText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XColumn {
                get {
                    return this.columnX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YColumn {
                get {
                    return this.columnY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WColumn {
                get {
                    return this.columnW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HColumn {
                get {
                    return this.columnH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlignColumn {
                get {
                    return this.columnAlign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontNameColumn {
                get {
                    return this.columnFontName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontSizeColumn {
                get {
                    return this.columnFontSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontBoldColumn {
                get {
                    return this.columnFontBold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontItalicColumn {
                get {
                    return this.columnFontItalic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontStrikeoutColumn {
                get {
                    return this.columnFontStrikeout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontUnderlineColumn {
                get {
                    return this.columnFontUnderline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowImageColumn {
                get {
                    return this.columnShowImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImagePathColumn {
                get {
                    return this.columnImagePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FontObjectColumn {
                get {
                    return this.columnFontObject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow this[int index] {
                get {
                    return ((LayoutItemRow)(this.Rows[index]));
                }
            }
            
            public event LayoutItemRowChangeEventHandler LayoutItemRowChanging;
            
            public event LayoutItemRowChangeEventHandler LayoutItemRowChanged;
            
            public event LayoutItemRowChangeEventHandler LayoutItemRowDeleting;
            
            public event LayoutItemRowChangeEventHandler LayoutItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLayoutItemRow(LayoutItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow AddLayoutItemRow(
                        LayoutRow parentLayoutRowByFK_Layout_LayoutItem, 
                        string LabelType, 
                        string LabelText, 
                        short X, 
                        short Y, 
                        short W, 
                        short H, 
                        string Align, 
                        string FontName, 
                        float FontSize, 
                        bool FontBold, 
                        bool FontItalic, 
                        bool FontStrikeout, 
                        bool FontUnderline, 
                        bool Visible, 
                        bool ShowImage, 
                        string ImagePath, 
                        byte[] FontObject) {
                LayoutItemRow rowLayoutItemRow = ((LayoutItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        LabelType,
                        LabelText,
                        X,
                        Y,
                        W,
                        H,
                        Align,
                        FontName,
                        FontSize,
                        FontBold,
                        FontItalic,
                        FontStrikeout,
                        FontUnderline,
                        Visible,
                        ShowImage,
                        ImagePath,
                        FontObject};
                if ((parentLayoutRowByFK_Layout_LayoutItem != null)) {
                    columnValuesArray[1] = parentLayoutRowByFK_Layout_LayoutItem[0];
                }
                rowLayoutItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLayoutItemRow);
                return rowLayoutItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow FindByLayoutItemKey(int LayoutItemKey) {
                return ((LayoutItemRow)(this.Rows.Find(new object[] {
                            LayoutItemKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LayoutItemDataTable cln = ((LayoutItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LayoutItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLayoutItemKey = base.Columns["LayoutItemKey"];
                this.columnLayoutKey = base.Columns["LayoutKey"];
                this.columnLabelType = base.Columns["LabelType"];
                this.columnLabelText = base.Columns["LabelText"];
                this.columnX = base.Columns["X"];
                this.columnY = base.Columns["Y"];
                this.columnW = base.Columns["W"];
                this.columnH = base.Columns["H"];
                this.columnAlign = base.Columns["Align"];
                this.columnFontName = base.Columns["FontName"];
                this.columnFontSize = base.Columns["FontSize"];
                this.columnFontBold = base.Columns["FontBold"];
                this.columnFontItalic = base.Columns["FontItalic"];
                this.columnFontStrikeout = base.Columns["FontStrikeout"];
                this.columnFontUnderline = base.Columns["FontUnderline"];
                this.columnVisible = base.Columns["Visible"];
                this.columnShowImage = base.Columns["ShowImage"];
                this.columnImagePath = base.Columns["ImagePath"];
                this.columnFontObject = base.Columns["FontObject"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLayoutItemKey = new global::System.Data.DataColumn("LayoutItemKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayoutItemKey);
                this.columnLayoutKey = new global::System.Data.DataColumn("LayoutKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayoutKey);
                this.columnLabelType = new global::System.Data.DataColumn("LabelType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelType);
                this.columnLabelText = new global::System.Data.DataColumn("LabelText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelText);
                this.columnX = new global::System.Data.DataColumn("X", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX);
                this.columnY = new global::System.Data.DataColumn("Y", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnY);
                this.columnW = new global::System.Data.DataColumn("W", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW);
                this.columnH = new global::System.Data.DataColumn("H", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH);
                this.columnAlign = new global::System.Data.DataColumn("Align", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlign);
                this.columnFontName = new global::System.Data.DataColumn("FontName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontName);
                this.columnFontSize = new global::System.Data.DataColumn("FontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontSize);
                this.columnFontBold = new global::System.Data.DataColumn("FontBold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontBold);
                this.columnFontItalic = new global::System.Data.DataColumn("FontItalic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontItalic);
                this.columnFontStrikeout = new global::System.Data.DataColumn("FontStrikeout", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontStrikeout);
                this.columnFontUnderline = new global::System.Data.DataColumn("FontUnderline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontUnderline);
                this.columnVisible = new global::System.Data.DataColumn("Visible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisible);
                this.columnShowImage = new global::System.Data.DataColumn("ShowImage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowImage);
                this.columnImagePath = new global::System.Data.DataColumn("ImagePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImagePath);
                this.columnFontObject = new global::System.Data.DataColumn("FontObject", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontObject);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLayoutItemKey}, true));
                this.columnLayoutItemKey.AutoIncrement = true;
                this.columnLayoutItemKey.AutoIncrementSeed = -1;
                this.columnLayoutItemKey.AutoIncrementStep = -1;
                this.columnLayoutItemKey.AllowDBNull = false;
                this.columnLayoutItemKey.Unique = true;
                this.columnLabelType.MaxLength = 100;
                this.columnLabelText.MaxLength = 100;
                this.columnAlign.MaxLength = 20;
                this.columnFontName.MaxLength = 50;
                this.columnImagePath.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow NewLayoutItemRow() {
                return ((LayoutItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LayoutItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LayoutItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LayoutItemRowChanged != null)) {
                    this.LayoutItemRowChanged(this, new LayoutItemRowChangeEvent(((LayoutItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LayoutItemRowChanging != null)) {
                    this.LayoutItemRowChanging(this, new LayoutItemRowChangeEvent(((LayoutItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LayoutItemRowDeleted != null)) {
                    this.LayoutItemRowDeleted(this, new LayoutItemRowChangeEvent(((LayoutItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LayoutItemRowDeleting != null)) {
                    this.LayoutItemRowDeleting(this, new LayoutItemRowChangeEvent(((LayoutItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLayoutItemRow(LayoutItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LayoutItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DrugDataTable : global::System.Data.TypedTableBase<DrugRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPriceID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnStock;
            
            private global::System.Data.DataColumn columnSafeStock;
            
            private global::System.Data.DataColumn columnBox1;
            
            private global::System.Data.DataColumn columnBox2;
            
            private global::System.Data.DataColumn columnBox3;
            
            private global::System.Data.DataColumn columnBox4;
            
            private global::System.Data.DataColumn columnBox5;
            
            private global::System.Data.DataColumn columnMaxQy;
            
            private global::System.Data.DataColumn columnPackage;
            
            private global::System.Data.DataColumn columnPrepare;
            
            private global::System.Data.DataColumn columnExpensive;
            
            private global::System.Data.DataColumn columnDrugType;
            
            private global::System.Data.DataColumn columnLimited;
            
            private global::System.Data.DataColumn columnIngredient;
            
            private global::System.Data.DataColumn columnAffect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugDataTable() {
                this.TableName = "Drug";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DrugDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DrugDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceIDColumn {
                get {
                    return this.columnPriceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafeStockColumn {
                get {
                    return this.columnSafeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Box1Column {
                get {
                    return this.columnBox1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Box2Column {
                get {
                    return this.columnBox2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Box3Column {
                get {
                    return this.columnBox3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Box4Column {
                get {
                    return this.columnBox4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Box5Column {
                get {
                    return this.columnBox5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxQyColumn {
                get {
                    return this.columnMaxQy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageColumn {
                get {
                    return this.columnPackage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrepareColumn {
                get {
                    return this.columnPrepare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpensiveColumn {
                get {
                    return this.columnExpensive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugTypeColumn {
                get {
                    return this.columnDrugType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LimitedColumn {
                get {
                    return this.columnLimited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IngredientColumn {
                get {
                    return this.columnIngredient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AffectColumn {
                get {
                    return this.columnAffect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRow this[int index] {
                get {
                    return ((DrugRow)(this.Rows[index]));
                }
            }
            
            public event DrugRowChangeEventHandler DrugRowChanging;
            
            public event DrugRowChangeEventHandler DrugRowChanged;
            
            public event DrugRowChangeEventHandler DrugRowDeleting;
            
            public event DrugRowChangeEventHandler DrugRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDrugRow(DrugRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRow AddDrugRow(
                        string ID, 
                        string PriceID, 
                        string Name, 
                        short Stock, 
                        short SafeStock, 
                        short Box1, 
                        short Box2, 
                        short Box3, 
                        short Box4, 
                        short Box5, 
                        byte MaxQy, 
                        bool Package, 
                        byte Prepare, 
                        bool Expensive, 
                        string DrugType, 
                        byte Limited, 
                        string Ingredient, 
                        string Affect) {
                DrugRow rowDrugRow = ((DrugRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PriceID,
                        Name,
                        Stock,
                        SafeStock,
                        Box1,
                        Box2,
                        Box3,
                        Box4,
                        Box5,
                        MaxQy,
                        Package,
                        Prepare,
                        Expensive,
                        DrugType,
                        Limited,
                        Ingredient,
                        Affect};
                rowDrugRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDrugRow);
                return rowDrugRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRow FindByID(string ID) {
                return ((DrugRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DrugDataTable cln = ((DrugDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DrugDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPriceID = base.Columns["PriceID"];
                this.columnName = base.Columns["Name"];
                this.columnStock = base.Columns["Stock"];
                this.columnSafeStock = base.Columns["SafeStock"];
                this.columnBox1 = base.Columns["Box1"];
                this.columnBox2 = base.Columns["Box2"];
                this.columnBox3 = base.Columns["Box3"];
                this.columnBox4 = base.Columns["Box4"];
                this.columnBox5 = base.Columns["Box5"];
                this.columnMaxQy = base.Columns["MaxQy"];
                this.columnPackage = base.Columns["Package"];
                this.columnPrepare = base.Columns["Prepare"];
                this.columnExpensive = base.Columns["Expensive"];
                this.columnDrugType = base.Columns["DrugType"];
                this.columnLimited = base.Columns["Limited"];
                this.columnIngredient = base.Columns["Ingredient"];
                this.columnAffect = base.Columns["Affect"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPriceID = new global::System.Data.DataColumn("PriceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnSafeStock = new global::System.Data.DataColumn("SafeStock", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafeStock);
                this.columnBox1 = new global::System.Data.DataColumn("Box1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox1);
                this.columnBox2 = new global::System.Data.DataColumn("Box2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox2);
                this.columnBox3 = new global::System.Data.DataColumn("Box3", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox3);
                this.columnBox4 = new global::System.Data.DataColumn("Box4", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox4);
                this.columnBox5 = new global::System.Data.DataColumn("Box5", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox5);
                this.columnMaxQy = new global::System.Data.DataColumn("MaxQy", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxQy);
                this.columnPackage = new global::System.Data.DataColumn("Package", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackage);
                this.columnPrepare = new global::System.Data.DataColumn("Prepare", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepare);
                this.columnExpensive = new global::System.Data.DataColumn("Expensive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpensive);
                this.columnDrugType = new global::System.Data.DataColumn("DrugType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugType);
                this.columnLimited = new global::System.Data.DataColumn("Limited", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimited);
                this.columnIngredient = new global::System.Data.DataColumn("Ingredient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngredient);
                this.columnAffect = new global::System.Data.DataColumn("Affect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAffect);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 10;
                this.columnPriceID.MaxLength = 10;
                this.columnName.MaxLength = 50;
                this.columnDrugType.MaxLength = 5;
                this.columnIngredient.MaxLength = 10;
                this.columnAffect.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRow NewDrugRow() {
                return ((DrugRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DrugRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DrugRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DrugRowChanged != null)) {
                    this.DrugRowChanged(this, new DrugRowChangeEvent(((DrugRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DrugRowChanging != null)) {
                    this.DrugRowChanging(this, new DrugRowChangeEvent(((DrugRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DrugRowDeleted != null)) {
                    this.DrugRowDeleted(this, new DrugRowChangeEvent(((DrugRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DrugRowDeleting != null)) {
                    this.DrugRowDeleting(this, new DrugRowChangeEvent(((DrugRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDrugRow(DrugRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DrugDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TTPDataTable : global::System.Data.TypedTableBase<TTPRow> {
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnH00;
            
            private global::System.Data.DataColumn columnH01;
            
            private global::System.Data.DataColumn columnH02;
            
            private global::System.Data.DataColumn columnH03;
            
            private global::System.Data.DataColumn columnH04;
            
            private global::System.Data.DataColumn columnH05;
            
            private global::System.Data.DataColumn columnH06;
            
            private global::System.Data.DataColumn columnH07;
            
            private global::System.Data.DataColumn columnH08;
            
            private global::System.Data.DataColumn columnH09;
            
            private global::System.Data.DataColumn columnH10;
            
            private global::System.Data.DataColumn columnH11;
            
            private global::System.Data.DataColumn columnH12;
            
            private global::System.Data.DataColumn columnH13;
            
            private global::System.Data.DataColumn columnH14;
            
            private global::System.Data.DataColumn columnH15;
            
            private global::System.Data.DataColumn columnH16;
            
            private global::System.Data.DataColumn columnH17;
            
            private global::System.Data.DataColumn columnH18;
            
            private global::System.Data.DataColumn columnH19;
            
            private global::System.Data.DataColumn columnH20;
            
            private global::System.Data.DataColumn columnH21;
            
            private global::System.Data.DataColumn columnH22;
            
            private global::System.Data.DataColumn columnH23;
            
            private global::System.Data.DataColumn columnTTP;
            
            private global::System.Data.DataColumn columnTTPText;
            
            private global::System.Data.DataColumn columnDays;
            
            private global::System.Data.DataColumn columnTimes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPDataTable() {
                this.TableName = "TTP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TTPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TTPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H00Column {
                get {
                    return this.columnH00;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H01Column {
                get {
                    return this.columnH01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H02Column {
                get {
                    return this.columnH02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H03Column {
                get {
                    return this.columnH03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H04Column {
                get {
                    return this.columnH04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H05Column {
                get {
                    return this.columnH05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H06Column {
                get {
                    return this.columnH06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H07Column {
                get {
                    return this.columnH07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H08Column {
                get {
                    return this.columnH08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H09Column {
                get {
                    return this.columnH09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H10Column {
                get {
                    return this.columnH10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H11Column {
                get {
                    return this.columnH11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H12Column {
                get {
                    return this.columnH12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H13Column {
                get {
                    return this.columnH13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H14Column {
                get {
                    return this.columnH14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H15Column {
                get {
                    return this.columnH15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H16Column {
                get {
                    return this.columnH16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H17Column {
                get {
                    return this.columnH17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H18Column {
                get {
                    return this.columnH18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H19Column {
                get {
                    return this.columnH19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H20Column {
                get {
                    return this.columnH20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H21Column {
                get {
                    return this.columnH21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H22Column {
                get {
                    return this.columnH22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H23Column {
                get {
                    return this.columnH23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTPColumn {
                get {
                    return this.columnTTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTPTextColumn {
                get {
                    return this.columnTTPText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysColumn {
                get {
                    return this.columnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimesColumn {
                get {
                    return this.columnTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRow this[int index] {
                get {
                    return ((TTPRow)(this.Rows[index]));
                }
            }
            
            public event TTPRowChangeEventHandler TTPRowChanging;
            
            public event TTPRowChangeEventHandler TTPRowChanged;
            
            public event TTPRowChangeEventHandler TTPRowDeleting;
            
            public event TTPRowChangeEventHandler TTPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTTPRow(TTPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRow AddTTPRow(
                        string Customer, 
                        bool H00, 
                        bool H01, 
                        bool H02, 
                        bool H03, 
                        bool H04, 
                        bool H05, 
                        bool H06, 
                        bool H07, 
                        bool H08, 
                        bool H09, 
                        bool H10, 
                        bool H11, 
                        bool H12, 
                        bool H13, 
                        bool H14, 
                        bool H15, 
                        bool H16, 
                        bool H17, 
                        bool H18, 
                        bool H19, 
                        bool H20, 
                        bool H21, 
                        bool H22, 
                        bool H23, 
                        string TTP, 
                        string TTPText, 
                        int Days, 
                        int Times) {
                TTPRow rowTTPRow = ((TTPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Customer,
                        H00,
                        H01,
                        H02,
                        H03,
                        H04,
                        H05,
                        H06,
                        H07,
                        H08,
                        H09,
                        H10,
                        H11,
                        H12,
                        H13,
                        H14,
                        H15,
                        H16,
                        H17,
                        H18,
                        H19,
                        H20,
                        H21,
                        H22,
                        H23,
                        TTP,
                        TTPText,
                        Days,
                        Times};
                rowTTPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTTPRow);
                return rowTTPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRow FindByTTP(string TTP) {
                return ((TTPRow)(this.Rows.Find(new object[] {
                            TTP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TTPDataTable cln = ((TTPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TTPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomer = base.Columns["Customer"];
                this.columnH00 = base.Columns["H00"];
                this.columnH01 = base.Columns["H01"];
                this.columnH02 = base.Columns["H02"];
                this.columnH03 = base.Columns["H03"];
                this.columnH04 = base.Columns["H04"];
                this.columnH05 = base.Columns["H05"];
                this.columnH06 = base.Columns["H06"];
                this.columnH07 = base.Columns["H07"];
                this.columnH08 = base.Columns["H08"];
                this.columnH09 = base.Columns["H09"];
                this.columnH10 = base.Columns["H10"];
                this.columnH11 = base.Columns["H11"];
                this.columnH12 = base.Columns["H12"];
                this.columnH13 = base.Columns["H13"];
                this.columnH14 = base.Columns["H14"];
                this.columnH15 = base.Columns["H15"];
                this.columnH16 = base.Columns["H16"];
                this.columnH17 = base.Columns["H17"];
                this.columnH18 = base.Columns["H18"];
                this.columnH19 = base.Columns["H19"];
                this.columnH20 = base.Columns["H20"];
                this.columnH21 = base.Columns["H21"];
                this.columnH22 = base.Columns["H22"];
                this.columnH23 = base.Columns["H23"];
                this.columnTTP = base.Columns["TTP"];
                this.columnTTPText = base.Columns["TTPText"];
                this.columnDays = base.Columns["Days"];
                this.columnTimes = base.Columns["Times"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnH00 = new global::System.Data.DataColumn("H00", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH00);
                this.columnH01 = new global::System.Data.DataColumn("H01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH01);
                this.columnH02 = new global::System.Data.DataColumn("H02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH02);
                this.columnH03 = new global::System.Data.DataColumn("H03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH03);
                this.columnH04 = new global::System.Data.DataColumn("H04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH04);
                this.columnH05 = new global::System.Data.DataColumn("H05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH05);
                this.columnH06 = new global::System.Data.DataColumn("H06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH06);
                this.columnH07 = new global::System.Data.DataColumn("H07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH07);
                this.columnH08 = new global::System.Data.DataColumn("H08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH08);
                this.columnH09 = new global::System.Data.DataColumn("H09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH09);
                this.columnH10 = new global::System.Data.DataColumn("H10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH10);
                this.columnH11 = new global::System.Data.DataColumn("H11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH11);
                this.columnH12 = new global::System.Data.DataColumn("H12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH12);
                this.columnH13 = new global::System.Data.DataColumn("H13", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH13);
                this.columnH14 = new global::System.Data.DataColumn("H14", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH14);
                this.columnH15 = new global::System.Data.DataColumn("H15", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH15);
                this.columnH16 = new global::System.Data.DataColumn("H16", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH16);
                this.columnH17 = new global::System.Data.DataColumn("H17", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH17);
                this.columnH18 = new global::System.Data.DataColumn("H18", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH18);
                this.columnH19 = new global::System.Data.DataColumn("H19", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH19);
                this.columnH20 = new global::System.Data.DataColumn("H20", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH20);
                this.columnH21 = new global::System.Data.DataColumn("H21", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH21);
                this.columnH22 = new global::System.Data.DataColumn("H22", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH22);
                this.columnH23 = new global::System.Data.DataColumn("H23", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH23);
                this.columnTTP = new global::System.Data.DataColumn("TTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTP);
                this.columnTTPText = new global::System.Data.DataColumn("TTPText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTPText);
                this.columnDays = new global::System.Data.DataColumn("Days", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDays);
                this.columnTimes = new global::System.Data.DataColumn("Times", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTTP}, true));
                this.columnCustomer.MaxLength = 20;
                this.columnTTP.AllowDBNull = false;
                this.columnTTP.Unique = true;
                this.columnTTP.MaxLength = 255;
                this.columnTTPText.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRow NewTTPRow() {
                return ((TTPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TTPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TTPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TTPRowChanged != null)) {
                    this.TTPRowChanged(this, new TTPRowChangeEvent(((TTPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TTPRowChanging != null)) {
                    this.TTPRowChanging(this, new TTPRowChangeEvent(((TTPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TTPRowDeleted != null)) {
                    this.TTPRowDeleted(this, new TTPRowChangeEvent(((TTPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TTPRowDeleting != null)) {
                    this.TTPRowDeleting(this, new TTPRowChangeEvent(((TTPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTTPRow(TTPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TTPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PacketDataTable : global::System.Data.TypedTableBase<PacketRow> {
            
            private global::System.Data.DataColumn columnPacketKey;
            
            private global::System.Data.DataColumn columnPrescriptionKey;
            
            private global::System.Data.DataColumn columnDrugName;
            
            private global::System.Data.DataColumn columnTTP;
            
            private global::System.Data.DataColumn columnP01;
            
            private global::System.Data.DataColumn columnP02;
            
            private global::System.Data.DataColumn columnP03;
            
            private global::System.Data.DataColumn columnP04;
            
            private global::System.Data.DataColumn columnP05;
            
            private global::System.Data.DataColumn columnP06;
            
            private global::System.Data.DataColumn columnP07;
            
            private global::System.Data.DataColumn columnP08;
            
            private global::System.Data.DataColumn columnP09;
            
            private global::System.Data.DataColumn columnP10;
            
            private global::System.Data.DataColumn columnP11;
            
            private global::System.Data.DataColumn columnP12;
            
            private global::System.Data.DataColumn columnP13;
            
            private global::System.Data.DataColumn columnP14;
            
            private global::System.Data.DataColumn columnP15;
            
            private global::System.Data.DataColumn columnP16;
            
            private global::System.Data.DataColumn columnP17;
            
            private global::System.Data.DataColumn columnP18;
            
            private global::System.Data.DataColumn columnP19;
            
            private global::System.Data.DataColumn columnP20;
            
            private global::System.Data.DataColumn columnP21;
            
            private global::System.Data.DataColumn columnP22;
            
            private global::System.Data.DataColumn columnP23;
            
            private global::System.Data.DataColumn columnP24;
            
            private global::System.Data.DataColumn columnP25;
            
            private global::System.Data.DataColumn columnP26;
            
            private global::System.Data.DataColumn columnP27;
            
            private global::System.Data.DataColumn columnP28;
            
            private global::System.Data.DataColumn columnP29;
            
            private global::System.Data.DataColumn columnP30;
            
            private global::System.Data.DataColumn columnP31;
            
            private global::System.Data.DataColumn columnP32;
            
            private global::System.Data.DataColumn columnP33;
            
            private global::System.Data.DataColumn columnP34;
            
            private global::System.Data.DataColumn columnP35;
            
            private global::System.Data.DataColumn columnP36;
            
            private global::System.Data.DataColumn columnP37;
            
            private global::System.Data.DataColumn columnP38;
            
            private global::System.Data.DataColumn columnP39;
            
            private global::System.Data.DataColumn columnP40;
            
            private global::System.Data.DataColumn columnP41;
            
            private global::System.Data.DataColumn columnP42;
            
            private global::System.Data.DataColumn columnP43;
            
            private global::System.Data.DataColumn columnP44;
            
            private global::System.Data.DataColumn columnP45;
            
            private global::System.Data.DataColumn columnPKey;
            
            private global::System.Data.DataColumn columnTimesQty;
            
            private global::System.Data.DataColumn columnDays;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketDataTable() {
                this.TableName = "Packet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PacketDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PacketKeyColumn {
                get {
                    return this.columnPacketKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrescriptionKeyColumn {
                get {
                    return this.columnPrescriptionKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugNameColumn {
                get {
                    return this.columnDrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTPColumn {
                get {
                    return this.columnTTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P01Column {
                get {
                    return this.columnP01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P02Column {
                get {
                    return this.columnP02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P03Column {
                get {
                    return this.columnP03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P04Column {
                get {
                    return this.columnP04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P05Column {
                get {
                    return this.columnP05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P06Column {
                get {
                    return this.columnP06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P07Column {
                get {
                    return this.columnP07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P08Column {
                get {
                    return this.columnP08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P09Column {
                get {
                    return this.columnP09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P10Column {
                get {
                    return this.columnP10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P11Column {
                get {
                    return this.columnP11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P12Column {
                get {
                    return this.columnP12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P13Column {
                get {
                    return this.columnP13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P14Column {
                get {
                    return this.columnP14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P15Column {
                get {
                    return this.columnP15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P16Column {
                get {
                    return this.columnP16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P17Column {
                get {
                    return this.columnP17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P18Column {
                get {
                    return this.columnP18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P19Column {
                get {
                    return this.columnP19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P20Column {
                get {
                    return this.columnP20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P21Column {
                get {
                    return this.columnP21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P22Column {
                get {
                    return this.columnP22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P23Column {
                get {
                    return this.columnP23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P24Column {
                get {
                    return this.columnP24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P25Column {
                get {
                    return this.columnP25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P26Column {
                get {
                    return this.columnP26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P27Column {
                get {
                    return this.columnP27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P28Column {
                get {
                    return this.columnP28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P29Column {
                get {
                    return this.columnP29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P30Column {
                get {
                    return this.columnP30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P31Column {
                get {
                    return this.columnP31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P32Column {
                get {
                    return this.columnP32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P33Column {
                get {
                    return this.columnP33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P34Column {
                get {
                    return this.columnP34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P35Column {
                get {
                    return this.columnP35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P36Column {
                get {
                    return this.columnP36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P37Column {
                get {
                    return this.columnP37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P38Column {
                get {
                    return this.columnP38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P39Column {
                get {
                    return this.columnP39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P40Column {
                get {
                    return this.columnP40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P41Column {
                get {
                    return this.columnP41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P42Column {
                get {
                    return this.columnP42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P43Column {
                get {
                    return this.columnP43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P44Column {
                get {
                    return this.columnP44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P45Column {
                get {
                    return this.columnP45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PKeyColumn {
                get {
                    return this.columnPKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimesQtyColumn {
                get {
                    return this.columnTimesQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysColumn {
                get {
                    return this.columnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow this[int index] {
                get {
                    return ((PacketRow)(this.Rows[index]));
                }
            }
            
            public event PacketRowChangeEventHandler PacketRowChanging;
            
            public event PacketRowChangeEventHandler PacketRowChanged;
            
            public event PacketRowChangeEventHandler PacketRowDeleting;
            
            public event PacketRowChangeEventHandler PacketRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPacketRow(PacketRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow AddPacketRow(
                        int PrescriptionKey, 
                        string DrugName, 
                        string TTP, 
                        bool P01, 
                        bool P02, 
                        bool P03, 
                        bool P04, 
                        bool P05, 
                        bool P06, 
                        bool P07, 
                        bool P08, 
                        bool P09, 
                        bool P10, 
                        bool P11, 
                        bool P12, 
                        bool P13, 
                        bool P14, 
                        bool P15, 
                        bool P16, 
                        bool P17, 
                        bool P18, 
                        bool P19, 
                        bool P20, 
                        bool P21, 
                        bool P22, 
                        bool P23, 
                        bool P24, 
                        bool P25, 
                        bool P26, 
                        bool P27, 
                        bool P28, 
                        bool P29, 
                        bool P30, 
                        bool P31, 
                        bool P32, 
                        bool P33, 
                        bool P34, 
                        bool P35, 
                        bool P36, 
                        bool P37, 
                        bool P38, 
                        bool P39, 
                        bool P40, 
                        bool P41, 
                        bool P42, 
                        bool P43, 
                        bool P44, 
                        bool P45, 
                        PrescriptionRow parentPrescriptionRowByFK_Prescription_Packet, 
                        float TimesQty, 
                        int Days, 
                        float Total) {
                PacketRow rowPacketRow = ((PacketRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PrescriptionKey,
                        DrugName,
                        TTP,
                        P01,
                        P02,
                        P03,
                        P04,
                        P05,
                        P06,
                        P07,
                        P08,
                        P09,
                        P10,
                        P11,
                        P12,
                        P13,
                        P14,
                        P15,
                        P16,
                        P17,
                        P18,
                        P19,
                        P20,
                        P21,
                        P22,
                        P23,
                        P24,
                        P25,
                        P26,
                        P27,
                        P28,
                        P29,
                        P30,
                        P31,
                        P32,
                        P33,
                        P34,
                        P35,
                        P36,
                        P37,
                        P38,
                        P39,
                        P40,
                        P41,
                        P42,
                        P43,
                        P44,
                        P45,
                        null,
                        TimesQty,
                        Days,
                        Total};
                if ((parentPrescriptionRowByFK_Prescription_Packet != null)) {
                    columnValuesArray[49] = parentPrescriptionRowByFK_Prescription_Packet[17];
                }
                rowPacketRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPacketRow);
                return rowPacketRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow FindByPacketKey(int PacketKey) {
                return ((PacketRow)(this.Rows.Find(new object[] {
                            PacketKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PacketDataTable cln = ((PacketDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PacketDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPacketKey = base.Columns["PacketKey"];
                this.columnPrescriptionKey = base.Columns["PrescriptionKey"];
                this.columnDrugName = base.Columns["DrugName"];
                this.columnTTP = base.Columns["TTP"];
                this.columnP01 = base.Columns["P01"];
                this.columnP02 = base.Columns["P02"];
                this.columnP03 = base.Columns["P03"];
                this.columnP04 = base.Columns["P04"];
                this.columnP05 = base.Columns["P05"];
                this.columnP06 = base.Columns["P06"];
                this.columnP07 = base.Columns["P07"];
                this.columnP08 = base.Columns["P08"];
                this.columnP09 = base.Columns["P09"];
                this.columnP10 = base.Columns["P10"];
                this.columnP11 = base.Columns["P11"];
                this.columnP12 = base.Columns["P12"];
                this.columnP13 = base.Columns["P13"];
                this.columnP14 = base.Columns["P14"];
                this.columnP15 = base.Columns["P15"];
                this.columnP16 = base.Columns["P16"];
                this.columnP17 = base.Columns["P17"];
                this.columnP18 = base.Columns["P18"];
                this.columnP19 = base.Columns["P19"];
                this.columnP20 = base.Columns["P20"];
                this.columnP21 = base.Columns["P21"];
                this.columnP22 = base.Columns["P22"];
                this.columnP23 = base.Columns["P23"];
                this.columnP24 = base.Columns["P24"];
                this.columnP25 = base.Columns["P25"];
                this.columnP26 = base.Columns["P26"];
                this.columnP27 = base.Columns["P27"];
                this.columnP28 = base.Columns["P28"];
                this.columnP29 = base.Columns["P29"];
                this.columnP30 = base.Columns["P30"];
                this.columnP31 = base.Columns["P31"];
                this.columnP32 = base.Columns["P32"];
                this.columnP33 = base.Columns["P33"];
                this.columnP34 = base.Columns["P34"];
                this.columnP35 = base.Columns["P35"];
                this.columnP36 = base.Columns["P36"];
                this.columnP37 = base.Columns["P37"];
                this.columnP38 = base.Columns["P38"];
                this.columnP39 = base.Columns["P39"];
                this.columnP40 = base.Columns["P40"];
                this.columnP41 = base.Columns["P41"];
                this.columnP42 = base.Columns["P42"];
                this.columnP43 = base.Columns["P43"];
                this.columnP44 = base.Columns["P44"];
                this.columnP45 = base.Columns["P45"];
                this.columnPKey = base.Columns["PKey"];
                this.columnTimesQty = base.Columns["TimesQty"];
                this.columnDays = base.Columns["Days"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPacketKey = new global::System.Data.DataColumn("PacketKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacketKey);
                this.columnPrescriptionKey = new global::System.Data.DataColumn("PrescriptionKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionKey);
                this.columnDrugName = new global::System.Data.DataColumn("DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName);
                this.columnTTP = new global::System.Data.DataColumn("TTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTP);
                this.columnP01 = new global::System.Data.DataColumn("P01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP01);
                this.columnP02 = new global::System.Data.DataColumn("P02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP02);
                this.columnP03 = new global::System.Data.DataColumn("P03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP03);
                this.columnP04 = new global::System.Data.DataColumn("P04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP04);
                this.columnP05 = new global::System.Data.DataColumn("P05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP05);
                this.columnP06 = new global::System.Data.DataColumn("P06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP06);
                this.columnP07 = new global::System.Data.DataColumn("P07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP07);
                this.columnP08 = new global::System.Data.DataColumn("P08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP08);
                this.columnP09 = new global::System.Data.DataColumn("P09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP09);
                this.columnP10 = new global::System.Data.DataColumn("P10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP10);
                this.columnP11 = new global::System.Data.DataColumn("P11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP11);
                this.columnP12 = new global::System.Data.DataColumn("P12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP12);
                this.columnP13 = new global::System.Data.DataColumn("P13", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP13);
                this.columnP14 = new global::System.Data.DataColumn("P14", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP14);
                this.columnP15 = new global::System.Data.DataColumn("P15", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP15);
                this.columnP16 = new global::System.Data.DataColumn("P16", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP16);
                this.columnP17 = new global::System.Data.DataColumn("P17", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP17);
                this.columnP18 = new global::System.Data.DataColumn("P18", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP18);
                this.columnP19 = new global::System.Data.DataColumn("P19", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP19);
                this.columnP20 = new global::System.Data.DataColumn("P20", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP20);
                this.columnP21 = new global::System.Data.DataColumn("P21", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP21);
                this.columnP22 = new global::System.Data.DataColumn("P22", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP22);
                this.columnP23 = new global::System.Data.DataColumn("P23", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP23);
                this.columnP24 = new global::System.Data.DataColumn("P24", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP24);
                this.columnP25 = new global::System.Data.DataColumn("P25", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP25);
                this.columnP26 = new global::System.Data.DataColumn("P26", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP26);
                this.columnP27 = new global::System.Data.DataColumn("P27", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP27);
                this.columnP28 = new global::System.Data.DataColumn("P28", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP28);
                this.columnP29 = new global::System.Data.DataColumn("P29", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP29);
                this.columnP30 = new global::System.Data.DataColumn("P30", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP30);
                this.columnP31 = new global::System.Data.DataColumn("P31", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP31);
                this.columnP32 = new global::System.Data.DataColumn("P32", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP32);
                this.columnP33 = new global::System.Data.DataColumn("P33", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP33);
                this.columnP34 = new global::System.Data.DataColumn("P34", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP34);
                this.columnP35 = new global::System.Data.DataColumn("P35", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP35);
                this.columnP36 = new global::System.Data.DataColumn("P36", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP36);
                this.columnP37 = new global::System.Data.DataColumn("P37", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP37);
                this.columnP38 = new global::System.Data.DataColumn("P38", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP38);
                this.columnP39 = new global::System.Data.DataColumn("P39", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP39);
                this.columnP40 = new global::System.Data.DataColumn("P40", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP40);
                this.columnP41 = new global::System.Data.DataColumn("P41", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP41);
                this.columnP42 = new global::System.Data.DataColumn("P42", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP42);
                this.columnP43 = new global::System.Data.DataColumn("P43", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP43);
                this.columnP44 = new global::System.Data.DataColumn("P44", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44);
                this.columnP45 = new global::System.Data.DataColumn("P45", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP45);
                this.columnPKey = new global::System.Data.DataColumn("PKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKey);
                this.columnTimesQty = new global::System.Data.DataColumn("TimesQty", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesQty);
                this.columnDays = new global::System.Data.DataColumn("Days", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDays);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPacketKey}, true));
                this.columnPacketKey.AutoIncrement = true;
                this.columnPacketKey.AutoIncrementSeed = -1;
                this.columnPacketKey.AutoIncrementStep = -1;
                this.columnPacketKey.AllowDBNull = false;
                this.columnPacketKey.Unique = true;
                this.columnDrugName.MaxLength = 50;
                this.columnTTP.MaxLength = 50;
                this.columnPKey.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow NewPacketRow() {
                return ((PacketRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PacketRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PacketRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PacketRowChanged != null)) {
                    this.PacketRowChanged(this, new PacketRowChangeEvent(((PacketRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PacketRowChanging != null)) {
                    this.PacketRowChanging(this, new PacketRowChangeEvent(((PacketRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PacketRowDeleted != null)) {
                    this.PacketRowDeleted(this, new PacketRowChangeEvent(((PacketRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PacketRowDeleting != null)) {
                    this.PacketRowDeleting(this, new PacketRowChangeEvent(((PacketRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePacketRow(PacketRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PacketDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PacketItemDataTable : global::System.Data.TypedTableBase<PacketItemRow> {
            
            private global::System.Data.DataColumn columnPacketItemKey;
            
            private global::System.Data.DataColumn columnPKey;
            
            private global::System.Data.DataColumn columnDrugName;
            
            private global::System.Data.DataColumn columnTTP;
            
            private global::System.Data.DataColumn columnTimesQty;
            
            private global::System.Data.DataColumn columnDays;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnPacketNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemDataTable() {
                this.TableName = "PacketItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PacketItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PacketItemKeyColumn {
                get {
                    return this.columnPacketItemKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PKeyColumn {
                get {
                    return this.columnPKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugNameColumn {
                get {
                    return this.columnDrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTPColumn {
                get {
                    return this.columnTTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimesQtyColumn {
                get {
                    return this.columnTimesQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysColumn {
                get {
                    return this.columnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PacketNumberColumn {
                get {
                    return this.columnPacketNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow this[int index] {
                get {
                    return ((PacketItemRow)(this.Rows[index]));
                }
            }
            
            public event PacketItemRowChangeEventHandler PacketItemRowChanging;
            
            public event PacketItemRowChangeEventHandler PacketItemRowChanged;
            
            public event PacketItemRowChangeEventHandler PacketItemRowDeleting;
            
            public event PacketItemRowChangeEventHandler PacketItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPacketItemRow(PacketItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow AddPacketItemRow(PrescriptionRow parentPrescriptionRowByFK_Prescription_PacketItem, string DrugName, string TTP, float TimesQty, short Days, float Total, int PacketNumber) {
                PacketItemRow rowPacketItemRow = ((PacketItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DrugName,
                        TTP,
                        TimesQty,
                        Days,
                        Total,
                        PacketNumber};
                if ((parentPrescriptionRowByFK_Prescription_PacketItem != null)) {
                    columnValuesArray[1] = parentPrescriptionRowByFK_Prescription_PacketItem[17];
                }
                rowPacketItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPacketItemRow);
                return rowPacketItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow FindByPacketItemKey(int PacketItemKey) {
                return ((PacketItemRow)(this.Rows.Find(new object[] {
                            PacketItemKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PacketItemDataTable cln = ((PacketItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PacketItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPacketItemKey = base.Columns["PacketItemKey"];
                this.columnPKey = base.Columns["PKey"];
                this.columnDrugName = base.Columns["DrugName"];
                this.columnTTP = base.Columns["TTP"];
                this.columnTimesQty = base.Columns["TimesQty"];
                this.columnDays = base.Columns["Days"];
                this.columnTotal = base.Columns["Total"];
                this.columnPacketNumber = base.Columns["PacketNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPacketItemKey = new global::System.Data.DataColumn("PacketItemKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacketItemKey);
                this.columnPKey = new global::System.Data.DataColumn("PKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKey);
                this.columnDrugName = new global::System.Data.DataColumn("DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName);
                this.columnTTP = new global::System.Data.DataColumn("TTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTP);
                this.columnTimesQty = new global::System.Data.DataColumn("TimesQty", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesQty);
                this.columnDays = new global::System.Data.DataColumn("Days", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDays);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPacketNumber = new global::System.Data.DataColumn("PacketNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacketNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPacketItemKey}, true));
                this.columnPacketItemKey.AutoIncrement = true;
                this.columnPacketItemKey.AutoIncrementSeed = -1;
                this.columnPacketItemKey.AutoIncrementStep = -1;
                this.columnPacketItemKey.AllowDBNull = false;
                this.columnPacketItemKey.Unique = true;
                this.columnPKey.MaxLength = 30;
                this.columnDrugName.MaxLength = 50;
                this.columnTTP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow NewPacketItemRow() {
                return ((PacketItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PacketItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PacketItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PacketItemRowChanged != null)) {
                    this.PacketItemRowChanged(this, new PacketItemRowChangeEvent(((PacketItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PacketItemRowChanging != null)) {
                    this.PacketItemRowChanging(this, new PacketItemRowChangeEvent(((PacketItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PacketItemRowDeleted != null)) {
                    this.PacketItemRowDeleted(this, new PacketItemRowChangeEvent(((PacketItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PacketItemRowDeleting != null)) {
                    this.PacketItemRowDeleting(this, new PacketItemRowChangeEvent(((PacketItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePacketItemRow(PacketItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PacketItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParameterDataTable : global::System.Data.TypedTableBase<ParameterRow> {
            
            private global::System.Data.DataColumn columnParameterKey;
            
            private global::System.Data.DataColumn columnParameterType;
            
            private global::System.Data.DataColumn columnParameter;
            
            private global::System.Data.DataColumn columnParameterText;
            
            private global::System.Data.DataColumn columnParameterDefValue;
            
            private global::System.Data.DataColumn columnParameterValue;
            
            private global::System.Data.DataColumn columnseq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterDataTable() {
                this.TableName = "Parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterKeyColumn {
                get {
                    return this.columnParameterKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterTypeColumn {
                get {
                    return this.columnParameterType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterColumn {
                get {
                    return this.columnParameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterTextColumn {
                get {
                    return this.columnParameterText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterDefValueColumn {
                get {
                    return this.columnParameterDefValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterValueColumn {
                get {
                    return this.columnParameterValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seqColumn {
                get {
                    return this.columnseq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRow this[int index] {
                get {
                    return ((ParameterRow)(this.Rows[index]));
                }
            }
            
            public event ParameterRowChangeEventHandler ParameterRowChanging;
            
            public event ParameterRowChangeEventHandler ParameterRowChanged;
            
            public event ParameterRowChangeEventHandler ParameterRowDeleting;
            
            public event ParameterRowChangeEventHandler ParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddParameterRow(ParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRow AddParameterRow(string ParameterType, string Parameter, string ParameterText, short ParameterDefValue, short ParameterValue, int seq) {
                ParameterRow rowParameterRow = ((ParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParameterType,
                        Parameter,
                        ParameterText,
                        ParameterDefValue,
                        ParameterValue,
                        seq};
                rowParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowParameterRow);
                return rowParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRow FindByParameterKey(int ParameterKey) {
                return ((ParameterRow)(this.Rows.Find(new object[] {
                            ParameterKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ParameterDataTable cln = ((ParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParameterKey = base.Columns["ParameterKey"];
                this.columnParameterType = base.Columns["ParameterType"];
                this.columnParameter = base.Columns["Parameter"];
                this.columnParameterText = base.Columns["ParameterText"];
                this.columnParameterDefValue = base.Columns["ParameterDefValue"];
                this.columnParameterValue = base.Columns["ParameterValue"];
                this.columnseq = base.Columns["seq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParameterKey = new global::System.Data.DataColumn("ParameterKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterKey);
                this.columnParameterType = new global::System.Data.DataColumn("ParameterType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterType);
                this.columnParameter = new global::System.Data.DataColumn("Parameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameter);
                this.columnParameterText = new global::System.Data.DataColumn("ParameterText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterText);
                this.columnParameterDefValue = new global::System.Data.DataColumn("ParameterDefValue", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterDefValue);
                this.columnParameterValue = new global::System.Data.DataColumn("ParameterValue", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterValue);
                this.columnseq = new global::System.Data.DataColumn("seq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseq);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnParameterKey}, true));
                this.columnParameterKey.AutoIncrement = true;
                this.columnParameterKey.AutoIncrementSeed = -1;
                this.columnParameterKey.AutoIncrementStep = -1;
                this.columnParameterKey.AllowDBNull = false;
                this.columnParameterKey.Unique = true;
                this.columnParameterType.MaxLength = 50;
                this.columnParameter.MaxLength = 50;
                this.columnParameterText.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRow NewParameterRow() {
                return ((ParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParameterRowChanged != null)) {
                    this.ParameterRowChanged(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParameterRowChanging != null)) {
                    this.ParameterRowChanging(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParameterRowDeleted != null)) {
                    this.ParameterRowDeleted(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParameterRowDeleting != null)) {
                    this.ParameterRowDeleting(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveParameterRow(ParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRINTERDataSet ds = new PRINTERDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PrescriptionRow : global::System.Data.DataRow {
            
            private PrescriptionDataTable tablePrescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrescriptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrescription = ((PrescriptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrescriptionKey {
                get {
                    return ((int)(this[this.tablePrescription.PrescriptionKeyColumn]));
                }
                set {
                    this[this.tablePrescription.PrescriptionKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatientNo {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PatientNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PatientNo\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PatientNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatientID {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PatientID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatientName {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PatientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PatientName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatientSex {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PatientSexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PatientSex\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PatientSexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PatientBirthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrescription.PatientBirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PatientBirthday\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PatientBirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrescriptionNo {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PrescriptionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PrescriptionNo\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PrescriptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrescriptionType {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PrescriptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PrescriptionType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PrescriptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrescriptionDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrescription.PrescriptionDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PrescriptionDateTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PrescriptionDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'Department\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Physician {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.PhysicianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'Physician\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PhysicianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TakeType {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.TakeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'TakeType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.TakeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PackNum {
                get {
                    try {
                        return ((int)(this[this.tablePrescription.PackNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PackNum\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PackNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPacked {
                get {
                    try {
                        return ((bool)(this[this.tablePrescription.IsPackedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'IsPacked\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.IsPackedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PackDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrescription.PackDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'PackDateTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.PackDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiveDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrescription.ReceiveDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'ReceiveDateTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.ReceiveDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tablePrescription.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Prescription\' 中資料行 \'Memo\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescription.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PKey {
                get {
                    return ((string)(this[this.tablePrescription.PKeyColumn]));
                }
                set {
                    this[this.tablePrescription.PKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatientNoNull() {
                return this.IsNull(this.tablePrescription.PatientNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatientNoNull() {
                this[this.tablePrescription.PatientNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tablePrescription.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatientIDNull() {
                this[this.tablePrescription.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatientNameNull() {
                return this.IsNull(this.tablePrescription.PatientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatientNameNull() {
                this[this.tablePrescription.PatientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatientSexNull() {
                return this.IsNull(this.tablePrescription.PatientSexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatientSexNull() {
                this[this.tablePrescription.PatientSexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatientBirthdayNull() {
                return this.IsNull(this.tablePrescription.PatientBirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatientBirthdayNull() {
                this[this.tablePrescription.PatientBirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrescriptionNoNull() {
                return this.IsNull(this.tablePrescription.PrescriptionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrescriptionNoNull() {
                this[this.tablePrescription.PrescriptionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrescriptionTypeNull() {
                return this.IsNull(this.tablePrescription.PrescriptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrescriptionTypeNull() {
                this[this.tablePrescription.PrescriptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrescriptionDateTimeNull() {
                return this.IsNull(this.tablePrescription.PrescriptionDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrescriptionDateTimeNull() {
                this[this.tablePrescription.PrescriptionDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tablePrescription.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tablePrescription.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysicianNull() {
                return this.IsNull(this.tablePrescription.PhysicianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysicianNull() {
                this[this.tablePrescription.PhysicianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakeTypeNull() {
                return this.IsNull(this.tablePrescription.TakeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakeTypeNull() {
                this[this.tablePrescription.TakeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackNumNull() {
                return this.IsNull(this.tablePrescription.PackNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackNumNull() {
                this[this.tablePrescription.PackNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPackedNull() {
                return this.IsNull(this.tablePrescription.IsPackedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPackedNull() {
                this[this.tablePrescription.IsPackedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackDateTimeNull() {
                return this.IsNull(this.tablePrescription.PackDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackDateTimeNull() {
                this[this.tablePrescription.PackDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveDateTimeNull() {
                return this.IsNull(this.tablePrescription.ReceiveDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveDateTimeNull() {
                this[this.tablePrescription.ReceiveDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tablePrescription.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tablePrescription.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow[] GetPacketItemRows() {
                if ((this.Table.ChildRelations["FK_Prescription_PacketItem"] == null)) {
                    return new PacketItemRow[0];
                }
                else {
                    return ((PacketItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Prescription_PacketItem"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow[] GetPacketRows() {
                if ((this.Table.ChildRelations["FK_Prescription_Packet"] == null)) {
                    return new PacketRow[0];
                }
                else {
                    return ((PacketRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Prescription_Packet"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow[] GetPrescriptionItemRows() {
                if ((this.Table.ChildRelations["FK_Prescription_PrescriptionItem"] == null)) {
                    return new PrescriptionItemRow[0];
                }
                else {
                    return ((PrescriptionItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Prescription_PrescriptionItem"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PrescriptionItemRow : global::System.Data.DataRow {
            
            private PrescriptionItemDataTable tablePrescriptionItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrescriptionItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrescriptionItem = ((PrescriptionItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrescriptionKey {
                get {
                    try {
                        return ((int)(this[this.tablePrescriptionItem.PrescriptionKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'PrescriptionKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.PrescriptionKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrugName {
                get {
                    try {
                        return ((string)(this[this.tablePrescriptionItem.DrugNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'DrugName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Days {
                get {
                    try {
                        return ((short)(this[this.tablePrescriptionItem.DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'Days\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack {
                get {
                    try {
                        return ((bool)(this[this.tablePrescriptionItem.IsPackColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'IsPack\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.IsPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrescriptionItemKey {
                get {
                    return ((int)(this[this.tablePrescriptionItem.PrescriptionItemKeyColumn]));
                }
                set {
                    this[this.tablePrescriptionItem.PrescriptionItemKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTP {
                get {
                    try {
                        return ((string)(this[this.tablePrescriptionItem.TTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'TTP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.TTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Total {
                get {
                    try {
                        return ((float)(this[this.tablePrescriptionItem.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'Total\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PKey {
                get {
                    try {
                        return ((string)(this[this.tablePrescriptionItem.PKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'PKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.PKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float TimesQty {
                get {
                    try {
                        return ((float)(this[this.tablePrescriptionItem.TimesQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PrescriptionItem\' 中資料行 \'TimesQty\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrescriptionItem.TimesQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow PrescriptionRow {
                get {
                    return ((PrescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_Prescription_PrescriptionItem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Prescription_PrescriptionItem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrescriptionKeyNull() {
                return this.IsNull(this.tablePrescriptionItem.PrescriptionKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrescriptionKeyNull() {
                this[this.tablePrescriptionItem.PrescriptionKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugNameNull() {
                return this.IsNull(this.tablePrescriptionItem.DrugNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugNameNull() {
                this[this.tablePrescriptionItem.DrugNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysNull() {
                return this.IsNull(this.tablePrescriptionItem.DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysNull() {
                this[this.tablePrescriptionItem.DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPackNull() {
                return this.IsNull(this.tablePrescriptionItem.IsPackColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPackNull() {
                this[this.tablePrescriptionItem.IsPackColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTPNull() {
                return this.IsNull(this.tablePrescriptionItem.TTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTPNull() {
                this[this.tablePrescriptionItem.TTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablePrescriptionItem.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablePrescriptionItem.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPKeyNull() {
                return this.IsNull(this.tablePrescriptionItem.PKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPKeyNull() {
                this[this.tablePrescriptionItem.PKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimesQtyNull() {
                return this.IsNull(this.tablePrescriptionItem.TimesQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimesQtyNull() {
                this[this.tablePrescriptionItem.TimesQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LayoutRow : global::System.Data.DataRow {
            
            private LayoutDataTable tableLayout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LayoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLayout = ((LayoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LayoutKey {
                get {
                    return ((int)(this[this.tableLayout.LayoutKeyColumn]));
                }
                set {
                    this[this.tableLayout.LayoutKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LableDisplay {
                get {
                    try {
                        return ((string)(this[this.tableLayout.LableDisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Layout\' 中資料行 \'LableDisplay\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayout.LableDisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LableType {
                get {
                    try {
                        return ((string)(this[this.tableLayout.LableTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Layout\' 中資料行 \'LableType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayout.LableTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrint {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.IsPrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Layout\' 中資料行 \'IsPrint\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayout.IsPrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLableDisplayNull() {
                return this.IsNull(this.tableLayout.LableDisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLableDisplayNull() {
                this[this.tableLayout.LableDisplayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLableTypeNull() {
                return this.IsNull(this.tableLayout.LableTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLableTypeNull() {
                this[this.tableLayout.LableTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrintNull() {
                return this.IsNull(this.tableLayout.IsPrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrintNull() {
                this[this.tableLayout.IsPrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow[] GetLayoutItemRows() {
                if ((this.Table.ChildRelations["FK_Layout_LayoutItem"] == null)) {
                    return new LayoutItemRow[0];
                }
                else {
                    return ((LayoutItemRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Layout_LayoutItem"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LayoutItemRow : global::System.Data.DataRow {
            
            private LayoutItemDataTable tableLayoutItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LayoutItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLayoutItem = ((LayoutItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LayoutItemKey {
                get {
                    return ((int)(this[this.tableLayoutItem.LayoutItemKeyColumn]));
                }
                set {
                    this[this.tableLayoutItem.LayoutItemKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LayoutKey {
                get {
                    try {
                        return ((int)(this[this.tableLayoutItem.LayoutKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'LayoutKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.LayoutKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelType {
                get {
                    try {
                        return ((string)(this[this.tableLayoutItem.LabelTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'LabelType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.LabelTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelText {
                get {
                    try {
                        return ((string)(this[this.tableLayoutItem.LabelTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'LabelText\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.LabelTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short X {
                get {
                    try {
                        return ((short)(this[this.tableLayoutItem.XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'X\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Y {
                get {
                    try {
                        return ((short)(this[this.tableLayoutItem.YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'Y\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short W {
                get {
                    try {
                        return ((short)(this[this.tableLayoutItem.WColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'W\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.WColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short H {
                get {
                    try {
                        return ((short)(this[this.tableLayoutItem.HColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'H\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Align {
                get {
                    try {
                        return ((string)(this[this.tableLayoutItem.AlignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'Align\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.AlignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FontName {
                get {
                    try {
                        return ((string)(this[this.tableLayoutItem.FontNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float FontSize {
                get {
                    try {
                        return ((float)(this[this.tableLayoutItem.FontSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontSize\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FontBold {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.FontBoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontBold\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontBoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FontItalic {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.FontItalicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontItalic\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontItalicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FontStrikeout {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.FontStrikeoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontStrikeout\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontStrikeoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FontUnderline {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.FontUnderlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontUnderline\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontUnderlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.VisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'Visible\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.VisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ShowImage {
                get {
                    try {
                        return ((bool)(this[this.tableLayoutItem.ShowImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'ShowImage\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.ShowImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImagePath {
                get {
                    try {
                        return ((string)(this[this.tableLayoutItem.ImagePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'ImagePath\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.ImagePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] FontObject {
                get {
                    try {
                        return ((byte[])(this[this.tableLayoutItem.FontObjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'LayoutItem\' 中資料行 \'FontObject\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLayoutItem.FontObjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow LayoutRow {
                get {
                    return ((LayoutRow)(this.GetParentRow(this.Table.ParentRelations["FK_Layout_LayoutItem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Layout_LayoutItem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLayoutKeyNull() {
                return this.IsNull(this.tableLayoutItem.LayoutKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLayoutKeyNull() {
                this[this.tableLayoutItem.LayoutKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelTypeNull() {
                return this.IsNull(this.tableLayoutItem.LabelTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelTypeNull() {
                this[this.tableLayoutItem.LabelTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelTextNull() {
                return this.IsNull(this.tableLayoutItem.LabelTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelTextNull() {
                this[this.tableLayoutItem.LabelTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXNull() {
                return this.IsNull(this.tableLayoutItem.XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXNull() {
                this[this.tableLayoutItem.XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYNull() {
                return this.IsNull(this.tableLayoutItem.YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYNull() {
                this[this.tableLayoutItem.YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWNull() {
                return this.IsNull(this.tableLayoutItem.WColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWNull() {
                this[this.tableLayoutItem.WColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNull() {
                return this.IsNull(this.tableLayoutItem.HColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNull() {
                this[this.tableLayoutItem.HColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlignNull() {
                return this.IsNull(this.tableLayoutItem.AlignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlignNull() {
                this[this.tableLayoutItem.AlignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontNameNull() {
                return this.IsNull(this.tableLayoutItem.FontNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontNameNull() {
                this[this.tableLayoutItem.FontNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontSizeNull() {
                return this.IsNull(this.tableLayoutItem.FontSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontSizeNull() {
                this[this.tableLayoutItem.FontSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontBoldNull() {
                return this.IsNull(this.tableLayoutItem.FontBoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontBoldNull() {
                this[this.tableLayoutItem.FontBoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontItalicNull() {
                return this.IsNull(this.tableLayoutItem.FontItalicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontItalicNull() {
                this[this.tableLayoutItem.FontItalicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontStrikeoutNull() {
                return this.IsNull(this.tableLayoutItem.FontStrikeoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontStrikeoutNull() {
                this[this.tableLayoutItem.FontStrikeoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontUnderlineNull() {
                return this.IsNull(this.tableLayoutItem.FontUnderlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontUnderlineNull() {
                this[this.tableLayoutItem.FontUnderlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisibleNull() {
                return this.IsNull(this.tableLayoutItem.VisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisibleNull() {
                this[this.tableLayoutItem.VisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowImageNull() {
                return this.IsNull(this.tableLayoutItem.ShowImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowImageNull() {
                this[this.tableLayoutItem.ShowImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImagePathNull() {
                return this.IsNull(this.tableLayoutItem.ImagePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImagePathNull() {
                this[this.tableLayoutItem.ImagePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFontObjectNull() {
                return this.IsNull(this.tableLayoutItem.FontObjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFontObjectNull() {
                this[this.tableLayoutItem.FontObjectColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DrugRow : global::System.Data.DataRow {
            
            private DrugDataTable tableDrug;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DrugRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDrug = ((DrugDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableDrug.IDColumn]));
                }
                set {
                    this[this.tableDrug.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceID {
                get {
                    try {
                        return ((string)(this[this.tableDrug.PriceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'PriceID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.PriceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDrug.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Stock {
                get {
                    try {
                        return ((short)(this[this.tableDrug.StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Stock\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SafeStock {
                get {
                    try {
                        return ((short)(this[this.tableDrug.SafeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'SafeStock\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.SafeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Box1 {
                get {
                    try {
                        return ((short)(this[this.tableDrug.Box1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Box1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.Box1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Box2 {
                get {
                    try {
                        return ((short)(this[this.tableDrug.Box2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Box2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.Box2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Box3 {
                get {
                    try {
                        return ((short)(this[this.tableDrug.Box3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Box3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.Box3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Box4 {
                get {
                    try {
                        return ((short)(this[this.tableDrug.Box4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Box4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.Box4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Box5 {
                get {
                    try {
                        return ((short)(this[this.tableDrug.Box5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Box5\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.Box5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte MaxQy {
                get {
                    try {
                        return ((byte)(this[this.tableDrug.MaxQyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'MaxQy\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.MaxQyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Package {
                get {
                    try {
                        return ((bool)(this[this.tableDrug.PackageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Package\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.PackageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Prepare {
                get {
                    try {
                        return ((byte)(this[this.tableDrug.PrepareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Prepare\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.PrepareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Expensive {
                get {
                    try {
                        return ((bool)(this[this.tableDrug.ExpensiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Expensive\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.ExpensiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrugType {
                get {
                    try {
                        return ((string)(this[this.tableDrug.DrugTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'DrugType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.DrugTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Limited {
                get {
                    try {
                        return ((byte)(this[this.tableDrug.LimitedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Limited\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.LimitedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ingredient {
                get {
                    try {
                        return ((string)(this[this.tableDrug.IngredientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Ingredient\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.IngredientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Affect {
                get {
                    try {
                        return ((string)(this[this.tableDrug.AffectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Drug\' 中資料行 \'Affect\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDrug.AffectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceIDNull() {
                return this.IsNull(this.tableDrug.PriceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceIDNull() {
                this[this.tableDrug.PriceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDrug.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDrug.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockNull() {
                return this.IsNull(this.tableDrug.StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockNull() {
                this[this.tableDrug.StockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafeStockNull() {
                return this.IsNull(this.tableDrug.SafeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafeStockNull() {
                this[this.tableDrug.SafeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBox1Null() {
                return this.IsNull(this.tableDrug.Box1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBox1Null() {
                this[this.tableDrug.Box1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBox2Null() {
                return this.IsNull(this.tableDrug.Box2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBox2Null() {
                this[this.tableDrug.Box2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBox3Null() {
                return this.IsNull(this.tableDrug.Box3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBox3Null() {
                this[this.tableDrug.Box3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBox4Null() {
                return this.IsNull(this.tableDrug.Box4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBox4Null() {
                this[this.tableDrug.Box4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBox5Null() {
                return this.IsNull(this.tableDrug.Box5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBox5Null() {
                this[this.tableDrug.Box5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxQyNull() {
                return this.IsNull(this.tableDrug.MaxQyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxQyNull() {
                this[this.tableDrug.MaxQyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackageNull() {
                return this.IsNull(this.tableDrug.PackageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackageNull() {
                this[this.tableDrug.PackageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrepareNull() {
                return this.IsNull(this.tableDrug.PrepareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrepareNull() {
                this[this.tableDrug.PrepareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpensiveNull() {
                return this.IsNull(this.tableDrug.ExpensiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpensiveNull() {
                this[this.tableDrug.ExpensiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugTypeNull() {
                return this.IsNull(this.tableDrug.DrugTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugTypeNull() {
                this[this.tableDrug.DrugTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLimitedNull() {
                return this.IsNull(this.tableDrug.LimitedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLimitedNull() {
                this[this.tableDrug.LimitedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngredientNull() {
                return this.IsNull(this.tableDrug.IngredientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngredientNull() {
                this[this.tableDrug.IngredientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAffectNull() {
                return this.IsNull(this.tableDrug.AffectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAffectNull() {
                this[this.tableDrug.AffectColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TTPRow : global::System.Data.DataRow {
            
            private TTPDataTable tableTTP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TTPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTTP = ((TTPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableTTP.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'Customer\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H00 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H00Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H00\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H00Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H01 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H01\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H02 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H02\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H03 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H03\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H04 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H04\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H05 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H05\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H06 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H06\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H07 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H07\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H08 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H08\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H09 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H09\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H10 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H10\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H11 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H11\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H12 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H12\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H13 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H13\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H14 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H14\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H15 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H15\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H16 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H16\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H17 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H17\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H18 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H18\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H19 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H19\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H20 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H20\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H21 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H21\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H22 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H22\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool H23 {
                get {
                    try {
                        return ((bool)(this[this.tableTTP.H23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'H23\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.H23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTP {
                get {
                    return ((string)(this[this.tableTTP.TTPColumn]));
                }
                set {
                    this[this.tableTTP.TTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTPText {
                get {
                    try {
                        return ((string)(this[this.tableTTP.TTPTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'TTPText\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.TTPTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Days {
                get {
                    try {
                        return ((int)(this[this.tableTTP.DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'Days\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Times {
                get {
                    try {
                        return ((int)(this[this.tableTTP.TimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TTP\' 中資料行 \'Times\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTTP.TimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableTTP.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableTTP.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH00Null() {
                return this.IsNull(this.tableTTP.H00Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH00Null() {
                this[this.tableTTP.H00Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH01Null() {
                return this.IsNull(this.tableTTP.H01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH01Null() {
                this[this.tableTTP.H01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH02Null() {
                return this.IsNull(this.tableTTP.H02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH02Null() {
                this[this.tableTTP.H02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH03Null() {
                return this.IsNull(this.tableTTP.H03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH03Null() {
                this[this.tableTTP.H03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH04Null() {
                return this.IsNull(this.tableTTP.H04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH04Null() {
                this[this.tableTTP.H04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH05Null() {
                return this.IsNull(this.tableTTP.H05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH05Null() {
                this[this.tableTTP.H05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH06Null() {
                return this.IsNull(this.tableTTP.H06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH06Null() {
                this[this.tableTTP.H06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH07Null() {
                return this.IsNull(this.tableTTP.H07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH07Null() {
                this[this.tableTTP.H07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH08Null() {
                return this.IsNull(this.tableTTP.H08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH08Null() {
                this[this.tableTTP.H08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH09Null() {
                return this.IsNull(this.tableTTP.H09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH09Null() {
                this[this.tableTTP.H09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH10Null() {
                return this.IsNull(this.tableTTP.H10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH10Null() {
                this[this.tableTTP.H10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH11Null() {
                return this.IsNull(this.tableTTP.H11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH11Null() {
                this[this.tableTTP.H11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH12Null() {
                return this.IsNull(this.tableTTP.H12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH12Null() {
                this[this.tableTTP.H12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH13Null() {
                return this.IsNull(this.tableTTP.H13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH13Null() {
                this[this.tableTTP.H13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH14Null() {
                return this.IsNull(this.tableTTP.H14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH14Null() {
                this[this.tableTTP.H14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH15Null() {
                return this.IsNull(this.tableTTP.H15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH15Null() {
                this[this.tableTTP.H15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH16Null() {
                return this.IsNull(this.tableTTP.H16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH16Null() {
                this[this.tableTTP.H16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH17Null() {
                return this.IsNull(this.tableTTP.H17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH17Null() {
                this[this.tableTTP.H17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH18Null() {
                return this.IsNull(this.tableTTP.H18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH18Null() {
                this[this.tableTTP.H18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH19Null() {
                return this.IsNull(this.tableTTP.H19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH19Null() {
                this[this.tableTTP.H19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH20Null() {
                return this.IsNull(this.tableTTP.H20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH20Null() {
                this[this.tableTTP.H20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH21Null() {
                return this.IsNull(this.tableTTP.H21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH21Null() {
                this[this.tableTTP.H21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH22Null() {
                return this.IsNull(this.tableTTP.H22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH22Null() {
                this[this.tableTTP.H22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH23Null() {
                return this.IsNull(this.tableTTP.H23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH23Null() {
                this[this.tableTTP.H23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTPTextNull() {
                return this.IsNull(this.tableTTP.TTPTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTPTextNull() {
                this[this.tableTTP.TTPTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysNull() {
                return this.IsNull(this.tableTTP.DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysNull() {
                this[this.tableTTP.DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimesNull() {
                return this.IsNull(this.tableTTP.TimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimesNull() {
                this[this.tableTTP.TimesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PacketRow : global::System.Data.DataRow {
            
            private PacketDataTable tablePacket;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePacket = ((PacketDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PacketKey {
                get {
                    return ((int)(this[this.tablePacket.PacketKeyColumn]));
                }
                set {
                    this[this.tablePacket.PacketKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrescriptionKey {
                get {
                    try {
                        return ((int)(this[this.tablePacket.PrescriptionKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'PrescriptionKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.PrescriptionKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrugName {
                get {
                    try {
                        return ((string)(this[this.tablePacket.DrugNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'DrugName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTP {
                get {
                    try {
                        return ((string)(this[this.tablePacket.TTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'TTP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.TTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P01 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P01\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P02 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P02\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P03 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P03\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P04 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P04\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P05 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P05\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P06 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P06\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P07 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P07\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P08 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P08\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P09 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P09\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P10 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P10\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P11 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P11\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P12 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P12\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P13 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P13\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P14 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P14\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P15 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P15\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P16 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P16\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P17 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P17\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P18 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P18\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P19 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P19\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P20 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P20\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P21 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P21\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P22 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P22\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P23 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P23\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P24 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P24\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P25 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P25\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P26 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P26\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P27 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P27\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P28 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P28\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P29 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P29\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P30 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P30\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P31 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P31\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P32 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P32\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P33 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P33\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P34 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P34\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P35 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P35\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P36 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P36\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P37 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P37\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P38 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P38\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P39 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P39\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P40 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P40\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P41 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P41\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P42 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P42\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P43 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P43\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P44 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P44\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P45 {
                get {
                    try {
                        return ((bool)(this[this.tablePacket.P45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'P45\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.P45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PKey {
                get {
                    try {
                        return ((string)(this[this.tablePacket.PKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'PKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.PKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float TimesQty {
                get {
                    try {
                        return ((float)(this[this.tablePacket.TimesQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'TimesQty\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.TimesQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Days {
                get {
                    try {
                        return ((int)(this[this.tablePacket.DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'Days\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Total {
                get {
                    try {
                        return ((float)(this[this.tablePacket.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Packet\' 中資料行 \'Total\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacket.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow PrescriptionRow {
                get {
                    return ((PrescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_Prescription_Packet"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Prescription_Packet"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrescriptionKeyNull() {
                return this.IsNull(this.tablePacket.PrescriptionKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrescriptionKeyNull() {
                this[this.tablePacket.PrescriptionKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugNameNull() {
                return this.IsNull(this.tablePacket.DrugNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugNameNull() {
                this[this.tablePacket.DrugNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTPNull() {
                return this.IsNull(this.tablePacket.TTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTPNull() {
                this[this.tablePacket.TTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP01Null() {
                return this.IsNull(this.tablePacket.P01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP01Null() {
                this[this.tablePacket.P01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP02Null() {
                return this.IsNull(this.tablePacket.P02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP02Null() {
                this[this.tablePacket.P02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP03Null() {
                return this.IsNull(this.tablePacket.P03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP03Null() {
                this[this.tablePacket.P03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP04Null() {
                return this.IsNull(this.tablePacket.P04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP04Null() {
                this[this.tablePacket.P04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP05Null() {
                return this.IsNull(this.tablePacket.P05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP05Null() {
                this[this.tablePacket.P05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP06Null() {
                return this.IsNull(this.tablePacket.P06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP06Null() {
                this[this.tablePacket.P06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP07Null() {
                return this.IsNull(this.tablePacket.P07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP07Null() {
                this[this.tablePacket.P07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP08Null() {
                return this.IsNull(this.tablePacket.P08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP08Null() {
                this[this.tablePacket.P08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP09Null() {
                return this.IsNull(this.tablePacket.P09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP09Null() {
                this[this.tablePacket.P09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP10Null() {
                return this.IsNull(this.tablePacket.P10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP10Null() {
                this[this.tablePacket.P10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP11Null() {
                return this.IsNull(this.tablePacket.P11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP11Null() {
                this[this.tablePacket.P11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP12Null() {
                return this.IsNull(this.tablePacket.P12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP12Null() {
                this[this.tablePacket.P12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP13Null() {
                return this.IsNull(this.tablePacket.P13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP13Null() {
                this[this.tablePacket.P13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP14Null() {
                return this.IsNull(this.tablePacket.P14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP14Null() {
                this[this.tablePacket.P14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP15Null() {
                return this.IsNull(this.tablePacket.P15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP15Null() {
                this[this.tablePacket.P15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP16Null() {
                return this.IsNull(this.tablePacket.P16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP16Null() {
                this[this.tablePacket.P16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP17Null() {
                return this.IsNull(this.tablePacket.P17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP17Null() {
                this[this.tablePacket.P17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP18Null() {
                return this.IsNull(this.tablePacket.P18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP18Null() {
                this[this.tablePacket.P18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP19Null() {
                return this.IsNull(this.tablePacket.P19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP19Null() {
                this[this.tablePacket.P19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP20Null() {
                return this.IsNull(this.tablePacket.P20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP20Null() {
                this[this.tablePacket.P20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP21Null() {
                return this.IsNull(this.tablePacket.P21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP21Null() {
                this[this.tablePacket.P21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP22Null() {
                return this.IsNull(this.tablePacket.P22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP22Null() {
                this[this.tablePacket.P22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP23Null() {
                return this.IsNull(this.tablePacket.P23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP23Null() {
                this[this.tablePacket.P23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP24Null() {
                return this.IsNull(this.tablePacket.P24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP24Null() {
                this[this.tablePacket.P24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP25Null() {
                return this.IsNull(this.tablePacket.P25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP25Null() {
                this[this.tablePacket.P25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP26Null() {
                return this.IsNull(this.tablePacket.P26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP26Null() {
                this[this.tablePacket.P26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP27Null() {
                return this.IsNull(this.tablePacket.P27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP27Null() {
                this[this.tablePacket.P27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP28Null() {
                return this.IsNull(this.tablePacket.P28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP28Null() {
                this[this.tablePacket.P28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP29Null() {
                return this.IsNull(this.tablePacket.P29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP29Null() {
                this[this.tablePacket.P29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP30Null() {
                return this.IsNull(this.tablePacket.P30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP30Null() {
                this[this.tablePacket.P30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP31Null() {
                return this.IsNull(this.tablePacket.P31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP31Null() {
                this[this.tablePacket.P31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP32Null() {
                return this.IsNull(this.tablePacket.P32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP32Null() {
                this[this.tablePacket.P32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP33Null() {
                return this.IsNull(this.tablePacket.P33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP33Null() {
                this[this.tablePacket.P33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP34Null() {
                return this.IsNull(this.tablePacket.P34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP34Null() {
                this[this.tablePacket.P34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP35Null() {
                return this.IsNull(this.tablePacket.P35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP35Null() {
                this[this.tablePacket.P35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP36Null() {
                return this.IsNull(this.tablePacket.P36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP36Null() {
                this[this.tablePacket.P36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP37Null() {
                return this.IsNull(this.tablePacket.P37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP37Null() {
                this[this.tablePacket.P37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP38Null() {
                return this.IsNull(this.tablePacket.P38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP38Null() {
                this[this.tablePacket.P38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP39Null() {
                return this.IsNull(this.tablePacket.P39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP39Null() {
                this[this.tablePacket.P39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP40Null() {
                return this.IsNull(this.tablePacket.P40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP40Null() {
                this[this.tablePacket.P40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP41Null() {
                return this.IsNull(this.tablePacket.P41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP41Null() {
                this[this.tablePacket.P41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP42Null() {
                return this.IsNull(this.tablePacket.P42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP42Null() {
                this[this.tablePacket.P42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP43Null() {
                return this.IsNull(this.tablePacket.P43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP43Null() {
                this[this.tablePacket.P43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP44Null() {
                return this.IsNull(this.tablePacket.P44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP44Null() {
                this[this.tablePacket.P44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP45Null() {
                return this.IsNull(this.tablePacket.P45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP45Null() {
                this[this.tablePacket.P45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPKeyNull() {
                return this.IsNull(this.tablePacket.PKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPKeyNull() {
                this[this.tablePacket.PKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimesQtyNull() {
                return this.IsNull(this.tablePacket.TimesQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimesQtyNull() {
                this[this.tablePacket.TimesQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysNull() {
                return this.IsNull(this.tablePacket.DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysNull() {
                this[this.tablePacket.DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablePacket.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablePacket.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PacketItemRow : global::System.Data.DataRow {
            
            private PacketItemDataTable tablePacketItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePacketItem = ((PacketItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PacketItemKey {
                get {
                    return ((int)(this[this.tablePacketItem.PacketItemKeyColumn]));
                }
                set {
                    this[this.tablePacketItem.PacketItemKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PKey {
                get {
                    try {
                        return ((string)(this[this.tablePacketItem.PKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'PKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.PKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrugName {
                get {
                    try {
                        return ((string)(this[this.tablePacketItem.DrugNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'DrugName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTP {
                get {
                    try {
                        return ((string)(this[this.tablePacketItem.TTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'TTP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.TTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float TimesQty {
                get {
                    try {
                        return ((float)(this[this.tablePacketItem.TimesQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'TimesQty\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.TimesQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Days {
                get {
                    try {
                        return ((short)(this[this.tablePacketItem.DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'Days\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Total {
                get {
                    try {
                        return ((float)(this[this.tablePacketItem.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'Total\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PacketNumber {
                get {
                    try {
                        return ((int)(this[this.tablePacketItem.PacketNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PacketItem\' 中資料行 \'PacketNumber\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePacketItem.PacketNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow PrescriptionRow {
                get {
                    return ((PrescriptionRow)(this.GetParentRow(this.Table.ParentRelations["FK_Prescription_PacketItem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Prescription_PacketItem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPKeyNull() {
                return this.IsNull(this.tablePacketItem.PKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPKeyNull() {
                this[this.tablePacketItem.PKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugNameNull() {
                return this.IsNull(this.tablePacketItem.DrugNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugNameNull() {
                this[this.tablePacketItem.DrugNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTPNull() {
                return this.IsNull(this.tablePacketItem.TTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTPNull() {
                this[this.tablePacketItem.TTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimesQtyNull() {
                return this.IsNull(this.tablePacketItem.TimesQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimesQtyNull() {
                this[this.tablePacketItem.TimesQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysNull() {
                return this.IsNull(this.tablePacketItem.DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysNull() {
                this[this.tablePacketItem.DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablePacketItem.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablePacketItem.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPacketNumberNull() {
                return this.IsNull(this.tablePacketItem.PacketNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPacketNumberNull() {
                this[this.tablePacketItem.PacketNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ParameterRow : global::System.Data.DataRow {
            
            private ParameterDataTable tableParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParameter = ((ParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParameterKey {
                get {
                    return ((int)(this[this.tableParameter.ParameterKeyColumn]));
                }
                set {
                    this[this.tableParameter.ParameterKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParameterType {
                get {
                    try {
                        return ((string)(this[this.tableParameter.ParameterTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'ParameterType\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.ParameterTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parameter {
                get {
                    try {
                        return ((string)(this[this.tableParameter.ParameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'Parameter\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.ParameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParameterText {
                get {
                    try {
                        return ((string)(this[this.tableParameter.ParameterTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'ParameterText\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.ParameterTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParameterDefValue {
                get {
                    try {
                        return ((short)(this[this.tableParameter.ParameterDefValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'ParameterDefValue\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.ParameterDefValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParameterValue {
                get {
                    try {
                        return ((short)(this[this.tableParameter.ParameterValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'ParameterValue\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.ParameterValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int seq {
                get {
                    try {
                        return ((int)(this[this.tableParameter.seqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Parameter\' 中資料行 \'seq\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableParameter.seqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterTypeNull() {
                return this.IsNull(this.tableParameter.ParameterTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterTypeNull() {
                this[this.tableParameter.ParameterTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterNull() {
                return this.IsNull(this.tableParameter.ParameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterNull() {
                this[this.tableParameter.ParameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterTextNull() {
                return this.IsNull(this.tableParameter.ParameterTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterTextNull() {
                this[this.tableParameter.ParameterTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterDefValueNull() {
                return this.IsNull(this.tableParameter.ParameterDefValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterDefValueNull() {
                this[this.tableParameter.ParameterDefValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterValueNull() {
                return this.IsNull(this.tableParameter.ParameterValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterValueNull() {
                this[this.tableParameter.ParameterValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseqNull() {
                return this.IsNull(this.tableParameter.seqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseqNull() {
                this[this.tableParameter.seqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PrescriptionRowChangeEvent : global::System.EventArgs {
            
            private PrescriptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRowChangeEvent(PrescriptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PrescriptionItemRowChangeEvent : global::System.EventArgs {
            
            private PrescriptionItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRowChangeEvent(PrescriptionItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrescriptionItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LayoutRowChangeEvent : global::System.EventArgs {
            
            private LayoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRowChangeEvent(LayoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LayoutItemRowChangeEvent : global::System.EventArgs {
            
            private LayoutItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRowChangeEvent(LayoutItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LayoutItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DrugRowChangeEvent : global::System.EventArgs {
            
            private DrugRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRowChangeEvent(DrugRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DrugRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TTPRowChangeEvent : global::System.EventArgs {
            
            private TTPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRowChangeEvent(TTPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TTPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PacketRowChangeEvent : global::System.EventArgs {
            
            private PacketRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRowChangeEvent(PacketRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PacketItemRowChangeEvent : global::System.EventArgs {
            
            private PacketItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRowChangeEvent(PacketItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ParameterRowChangeEvent : global::System.EventArgs {
            
            private ParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRowChangeEvent(ParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace VP.PRINTERDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PrescriptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PrescriptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Prescription";
            tableMapping.ColumnMappings.Add("PrescriptionKey", "PrescriptionKey");
            tableMapping.ColumnMappings.Add("PatientNo", "PatientNo");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("PatientSex", "PatientSex");
            tableMapping.ColumnMappings.Add("PatientBirthday", "PatientBirthday");
            tableMapping.ColumnMappings.Add("PrescriptionNo", "PrescriptionNo");
            tableMapping.ColumnMappings.Add("PrescriptionType", "PrescriptionType");
            tableMapping.ColumnMappings.Add("PrescriptionDateTime", "PrescriptionDateTime");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("Physician", "Physician");
            tableMapping.ColumnMappings.Add("TakeType", "TakeType");
            tableMapping.ColumnMappings.Add("PackNum", "PackNum");
            tableMapping.ColumnMappings.Add("IsPacked", "IsPacked");
            tableMapping.ColumnMappings.Add("PackDateTime", "PackDateTime");
            tableMapping.ColumnMappings.Add("ReceiveDateTime", "ReceiveDateTime");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("PKey", "PKey");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Prescription` WHERE ((`PrescriptionKey` = ?) AND ((? = 1 AND `PatientID` IS NULL) OR (`PatientID` = ?)) AND ((? = 1 AND `PatientNo` IS NULL) OR (`PatientNo` = ?)) AND ((? = 1 AND `PatientName` IS NULL) OR (`PatientName` = ?)) AND ((? = 1 AND `PatientSex` IS NULL) OR (`PatientSex` = ?)) AND ((? = 1 AND `PatientBirthday` IS NULL) OR (`PatientBirthday` = ?)) AND ((? = 1 AND `PrescriptionNo` IS NULL) OR (`PrescriptionNo` = ?)) AND ((? = 1 AND `PrescriptionType` IS NULL) OR (`PrescriptionType` = ?)) AND ((? = 1 AND `PrescriptionDateTime` IS NULL) OR (`PrescriptionDateTime` = ?)) AND ((? = 1 AND `Department` IS NULL) OR (`Department` = ?)) AND ((? = 1 AND `Physician` IS NULL) OR (`Physician` = ?)) AND ((? = 1 AND `TakeType` IS NULL) OR (`TakeType` = ?)) AND ((? = 1 AND `PackNum` IS NULL) OR (`PackNum` = ?)) AND ((? = 1 AND `IsPacked` IS NULL) OR (`IsPacked` = ?)) AND ((? = 1 AND `PackDateTime` IS NULL) OR (`PackDateTime` = ?)) AND ((? = 1 AND `ReceiveDateTime` IS NULL) OR (`ReceiveDateTime` = ?)) AND ((? = 1 AND `Memo` IS NULL) OR (`Memo` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientSex", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientSex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientBirthday", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientBirthday", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Department", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Department", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Physician", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Physician", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TakeType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TakeType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPacked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPacked", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PackDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ReceiveDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ReceiveDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Memo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Memo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `Prescription` (`PatientID`, `PatientNo`, `PatientName`, `PatientSex`, `PatientBirthday`, `PrescriptionNo`, `PrescriptionType`, `PrescriptionDateTime`, `Department`, `Physician`, `TakeType`, `PackNum`, `IsPacked`, `PackDateTime`, `ReceiveDateTime`, `Memo`, `PKey`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientSex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientBirthday", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Department", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Physician", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TakeType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPacked", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ReceiveDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Memo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Prescription` SET `PatientID` = ?, `PatientNo` = ?, `PatientName` = ?, `PatientSex` = ?, `PatientBirthday` = ?, `PrescriptionNo` = ?, `PrescriptionType` = ?, `PrescriptionDateTime` = ?, `Department` = ?, `Physician` = ?, `TakeType` = ?, `PackNum` = ?, `IsPacked` = ?, `PackDateTime` = ?, `ReceiveDateTime` = ?, `Memo` = ? WHERE ((`PrescriptionKey` = ?) AND ((? = 1 AND `PatientID` IS NULL) OR (`PatientID` = ?)) AND ((? = 1 AND `PatientNo` IS NULL) OR (`PatientNo` = ?)) AND ((? = 1 AND `PatientName` IS NULL) OR (`PatientName` = ?)) AND ((? = 1 AND `PatientSex` IS NULL) OR (`PatientSex` = ?)) AND ((? = 1 AND `PatientBirthday` IS NULL) OR (`PatientBirthday` = ?)) AND ((? = 1 AND `PrescriptionNo` IS NULL) OR (`PrescriptionNo` = ?)) AND ((? = 1 AND `PrescriptionType` IS NULL) OR (`PrescriptionType` = ?)) AND ((? = 1 AND `PrescriptionDateTime` IS NULL) OR (`PrescriptionDateTime` = ?)) AND ((? = 1 AND `Department` IS NULL) OR (`Department` = ?)) AND ((? = 1 AND `Physician` IS NULL) OR (`Physician` = ?)) AND ((? = 1 AND `TakeType` IS NULL) OR (`TakeType` = ?)) AND ((? = 1 AND `PackNum` IS NULL) OR (`PackNum` = ?)) AND ((? = 1 AND `IsPacked` IS NULL) OR (`IsPacked` = ?)) AND ((? = 1 AND `PackDateTime` IS NULL) OR (`PackDateTime` = ?)) AND ((? = 1 AND `ReceiveDateTime` IS NULL) OR (`ReceiveDateTime` = ?)) AND ((? = 1 AND `Memo` IS NULL) OR (`Memo` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientSex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PatientBirthday", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Department", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Physician", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TakeType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPacked", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ReceiveDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Memo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientSex", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientSex", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientSex", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PatientBirthday", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PatientBirthday", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PatientBirthday", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionNo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Department", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Department", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Department", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Physician", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Physician", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Physician", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TakeType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TakeType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TakeType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackNum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackNum", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPacked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPacked", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPacked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PackDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ReceiveDateTime", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ReceiveDateTime", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReceiveDateTime", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Memo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Memo", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Memo", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[3];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT         PrescriptionKey, PatientID, PatientNo, PatientName, PatientSex, 
                          PatientBirthday, PrescriptionNo, PrescriptionType, PrescriptionDateTime, 
                          Department, Physician, TakeType, PackNum, IsPacked, PackDateTime, 
                          ReceiveDateTime, [Memo], PKey
FROM             Prescription";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Department, IsPacked, [Memo], PKey, PackDateTime, PackNum, PatientBirthday, PatientID, PatientName, PatientNo, PatientSex, Physician, PrescriptionDateTime, PrescriptionKey, PrescriptionNo, PrescriptionType, ReceiveDateTime, TakeType FROM Prescription WHERE (IsPacked = false)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT         Department, IsPacked, [Memo], PKey, PackDateTime, PackNum, 
                          PatientBirthday, PatientID, PatientName, PatientNo, PatientSex, Physician, 
                          PrescriptionDateTime, PrescriptionKey, PrescriptionNo, PrescriptionType, 
                          ReceiveDateTime, TakeType
FROM             Prescription
WHERE         (IsPacked = true)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillBySampleData(PRINTERDataSet.PrescriptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.PrescriptionDataTable GetDataBySampleData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.PrescriptionDataTable dataTable = new PRINTERDataSet.PrescriptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIsPackedFalse(PRINTERDataSet.PrescriptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PRINTERDataSet.PrescriptionDataTable GetDataByIsPackedFalse() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            PRINTERDataSet.PrescriptionDataTable dataTable = new PRINTERDataSet.PrescriptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIsPackedTrue(PRINTERDataSet.PrescriptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PRINTERDataSet.PrescriptionDataTable GetDataByIsPackedTrue() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            PRINTERDataSet.PrescriptionDataTable dataTable = new PRINTERDataSet.PrescriptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.PrescriptionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Prescription");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_PrescriptionKey, 
                    string Original_PatientID, 
                    string Original_PatientNo, 
                    string Original_PatientName, 
                    string Original_PatientSex, 
                    global::System.Nullable<global::System.DateTime> Original_PatientBirthday, 
                    string Original_PrescriptionNo, 
                    string Original_PrescriptionType, 
                    global::System.Nullable<global::System.DateTime> Original_PrescriptionDateTime, 
                    string Original_Department, 
                    string Original_Physician, 
                    string Original_TakeType, 
                    global::System.Nullable<int> Original_PackNum, 
                    bool Original_IsPacked, 
                    global::System.Nullable<global::System.DateTime> Original_PackDateTime, 
                    global::System.Nullable<global::System.DateTime> Original_ReceiveDateTime, 
                    string Original_Memo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PrescriptionKey));
            if ((Original_PatientID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PatientID));
            }
            if ((Original_PatientNo == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PatientNo));
            }
            if ((Original_PatientName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PatientName));
            }
            if ((Original_PatientSex == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PatientSex));
            }
            if ((Original_PatientBirthday.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_PatientBirthday.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_PrescriptionNo == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PrescriptionNo));
            }
            if ((Original_PrescriptionType == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_PrescriptionType));
            }
            if ((Original_PrescriptionDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_PrescriptionDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Department));
            }
            if ((Original_Physician == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Physician));
            }
            if ((Original_TakeType == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_TakeType));
            }
            if ((Original_PackNum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_PackNum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_IsPacked));
            if ((Original_PackDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_PackDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiveDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_ReceiveDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Memo == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Memo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PatientID, 
                    string PatientNo, 
                    string PatientName, 
                    string PatientSex, 
                    global::System.Nullable<global::System.DateTime> PatientBirthday, 
                    string PrescriptionNo, 
                    string PrescriptionType, 
                    global::System.Nullable<global::System.DateTime> PrescriptionDateTime, 
                    string Department, 
                    string Physician, 
                    string TakeType, 
                    global::System.Nullable<int> PackNum, 
                    bool IsPacked, 
                    global::System.Nullable<global::System.DateTime> PackDateTime, 
                    global::System.Nullable<global::System.DateTime> ReceiveDateTime, 
                    string Memo, 
                    string PKey) {
            if ((PatientID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PatientID));
            }
            if ((PatientNo == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PatientNo));
            }
            if ((PatientName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PatientName));
            }
            if ((PatientSex == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PatientSex));
            }
            if ((PatientBirthday.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(PatientBirthday.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PrescriptionNo == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PrescriptionNo));
            }
            if ((PrescriptionType == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PrescriptionType));
            }
            if ((PrescriptionDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(PrescriptionDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Department));
            }
            if ((Physician == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Physician));
            }
            if ((TakeType == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TakeType));
            }
            if ((PackNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(PackNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(IsPacked));
            if ((PackDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(PackDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ReceiveDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(ReceiveDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Memo == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Memo));
            }
            if ((PKey == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PKey));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PatientID, 
                    string PatientNo, 
                    string PatientName, 
                    string PatientSex, 
                    global::System.Nullable<global::System.DateTime> PatientBirthday, 
                    string PrescriptionNo, 
                    string PrescriptionType, 
                    global::System.Nullable<global::System.DateTime> PrescriptionDateTime, 
                    string Department, 
                    string Physician, 
                    string TakeType, 
                    global::System.Nullable<int> PackNum, 
                    bool IsPacked, 
                    global::System.Nullable<global::System.DateTime> PackDateTime, 
                    global::System.Nullable<global::System.DateTime> ReceiveDateTime, 
                    string Memo, 
                    int Original_PrescriptionKey, 
                    string Original_PatientID, 
                    string Original_PatientNo, 
                    string Original_PatientName, 
                    string Original_PatientSex, 
                    global::System.Nullable<global::System.DateTime> Original_PatientBirthday, 
                    string Original_PrescriptionNo, 
                    string Original_PrescriptionType, 
                    global::System.Nullable<global::System.DateTime> Original_PrescriptionDateTime, 
                    string Original_Department, 
                    string Original_Physician, 
                    string Original_TakeType, 
                    global::System.Nullable<int> Original_PackNum, 
                    bool Original_IsPacked, 
                    global::System.Nullable<global::System.DateTime> Original_PackDateTime, 
                    global::System.Nullable<global::System.DateTime> Original_ReceiveDateTime, 
                    string Original_Memo) {
            if ((PatientID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PatientID));
            }
            if ((PatientNo == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PatientNo));
            }
            if ((PatientName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PatientName));
            }
            if ((PatientSex == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PatientSex));
            }
            if ((PatientBirthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(PatientBirthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PrescriptionNo == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PrescriptionNo));
            }
            if ((PrescriptionType == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PrescriptionType));
            }
            if ((PrescriptionDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(PrescriptionDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Department));
            }
            if ((Physician == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Physician));
            }
            if ((TakeType == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TakeType));
            }
            if ((PackNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(PackNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(IsPacked));
            if ((PackDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(PackDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ReceiveDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(ReceiveDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Memo));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_PrescriptionKey));
            if ((Original_PatientID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PatientID));
            }
            if ((Original_PatientNo == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_PatientNo));
            }
            if ((Original_PatientName == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_PatientName));
            }
            if ((Original_PatientSex == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PatientSex));
            }
            if ((Original_PatientBirthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_PatientBirthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_PrescriptionNo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_PrescriptionNo));
            }
            if ((Original_PrescriptionType == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_PrescriptionType));
            }
            if ((Original_PrescriptionDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_PrescriptionDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Department));
            }
            if ((Original_Physician == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Physician));
            }
            if ((Original_TakeType == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_TakeType));
            }
            if ((Original_PackNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_PackNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Original_IsPacked));
            if ((Original_PackDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_PackDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiveDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_ReceiveDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Memo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PrescriptionItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PrescriptionItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PrescriptionItem";
            tableMapping.ColumnMappings.Add("PrescriptionKey", "PrescriptionKey");
            tableMapping.ColumnMappings.Add("DrugName", "DrugName");
            tableMapping.ColumnMappings.Add("Days", "Days");
            tableMapping.ColumnMappings.Add("IsPack", "IsPack");
            tableMapping.ColumnMappings.Add("PrescriptionItemKey", "PrescriptionItemKey");
            tableMapping.ColumnMappings.Add("TTP", "TTP");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("PKey", "PKey");
            tableMapping.ColumnMappings.Add("TimesQty", "TimesQty");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `PrescriptionItem` WHERE ((`PrescriptionItemKey` = ?) AND ((? = 1 AND `PKey` IS NULL) OR (`PKey` = ?)) AND ((? = 1 AND `PrescriptionKey` IS NULL) OR (`PrescriptionKey` = ?)) AND ((? = 1 AND `DrugName` IS NULL) OR (`DrugName` = ?)) AND ((? = 1 AND `TTP` IS NULL) OR (`TTP` = ?)) AND ((? = 1 AND `TimesQty` IS NULL) OR (`TimesQty` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1 AND `Total` IS NULL) OR (`Total` = ?)) AND ((? = 1 AND `IsPack` IS NULL) OR (`IsPack` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionItemKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionItemKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TimesQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Total", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPack", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPack", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PrescriptionItem` (`PKey`, `PrescriptionKey`, `DrugName`, `TTP`, `Ti" +
                "mesQty`, `Days`, `Total`, `IsPack`) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPack", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PrescriptionItem` SET `PKey` = ?, `PrescriptionKey` = ?, `DrugName` = ?, `TTP` = ?, `TimesQty` = ?, `Days` = ?, `Total` = ?, `IsPack` = ? WHERE ((`PrescriptionItemKey` = ?) AND ((? = 1 AND `PKey` IS NULL) OR (`PKey` = ?)) AND ((? = 1 AND `PrescriptionKey` IS NULL) OR (`PrescriptionKey` = ?)) AND ((? = 1 AND `DrugName` IS NULL) OR (`DrugName` = ?)) AND ((? = 1 AND `TTP` IS NULL) OR (`TTP` = ?)) AND ((? = 1 AND `TimesQty` IS NULL) OR (`TimesQty` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1 AND `Total` IS NULL) OR (`Total` = ?)) AND ((? = 1 AND `IsPack` IS NULL) OR (`IsPack` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPack", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionItemKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionItemKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TimesQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Total", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPack", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPack", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPack", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT         PrescriptionItem.*\r\nFROM             PrescriptionItem";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.PrescriptionItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.PrescriptionItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.PrescriptionItemDataTable dataTable = new PRINTERDataSet.PrescriptionItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.PrescriptionItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PrescriptionItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PrescriptionItemKey, string Original_PKey, global::System.Nullable<int> Original_PrescriptionKey, string Original_DrugName, string Original_TTP, global::System.Nullable<float> Original_TimesQty, global::System.Nullable<short> Original_Days, global::System.Nullable<float> Original_Total, bool Original_IsPack) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PrescriptionItemKey));
            if ((Original_PKey == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PKey));
            }
            if ((Original_PrescriptionKey.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PrescriptionKey.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DrugName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DrugName));
            }
            if ((Original_TTP == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TTP));
            }
            if ((Original_TimesQty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_TimesQty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Days.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_Days.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Total.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_Total.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_IsPack));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PKey, global::System.Nullable<int> PrescriptionKey, string DrugName, string TTP, global::System.Nullable<float> TimesQty, global::System.Nullable<short> Days, global::System.Nullable<float> Total, bool IsPack) {
            if ((PKey == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((PrescriptionKey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PrescriptionKey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DrugName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((short)(Days.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(IsPack));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PKey, 
                    global::System.Nullable<int> PrescriptionKey, 
                    string DrugName, 
                    string TTP, 
                    global::System.Nullable<float> TimesQty, 
                    global::System.Nullable<short> Days, 
                    global::System.Nullable<float> Total, 
                    bool IsPack, 
                    int Original_PrescriptionItemKey, 
                    string Original_PKey, 
                    global::System.Nullable<int> Original_PrescriptionKey, 
                    string Original_DrugName, 
                    string Original_TTP, 
                    global::System.Nullable<float> Original_TimesQty, 
                    global::System.Nullable<short> Original_Days, 
                    global::System.Nullable<float> Original_Total, 
                    bool Original_IsPack) {
            if ((PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((PrescriptionKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PrescriptionKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(IsPack));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_PrescriptionItemKey));
            if ((Original_PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PKey));
            }
            if ((Original_PrescriptionKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_PrescriptionKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DrugName));
            }
            if ((Original_TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_TTP));
            }
            if ((Original_TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(Original_TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(Original_Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((float)(Original_Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_IsPack));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LayoutTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LayoutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Layout";
            tableMapping.ColumnMappings.Add("LayoutKey", "LayoutKey");
            tableMapping.ColumnMappings.Add("LableDisplay", "LableDisplay");
            tableMapping.ColumnMappings.Add("LableType", "LableType");
            tableMapping.ColumnMappings.Add("IsPrint", "IsPrint");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `Layout` WHERE ((`LayoutKey` = ?) AND ((? = 1 AND `LableDisplay` IS N" +
                "ULL) OR (`LableDisplay` = ?)) AND ((? = 1 AND `LableType` IS NULL) OR (`LableTyp" +
                "e` = ?)) AND ((? = 1 AND `IsPrint` IS NULL) OR (`IsPrint` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LableDisplay", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LableDisplay", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LableType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LableType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPrint", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPrint", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Layout` (`LableDisplay`, `LableType`, `IsPrint`) VALUES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LableDisplay", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LableType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPrint", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Layout` SET `LableDisplay` = ?, `LableType` = ?, `IsPrint` = ? WHERE ((`LayoutKey` = ?) AND ((? = 1 AND `LableDisplay` IS NULL) OR (`LableDisplay` = ?)) AND ((? = 1 AND `LableType` IS NULL) OR (`LableType` = ?)) AND ((? = 1 AND `IsPrint` IS NULL) OR (`IsPrint` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LableDisplay", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LableType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsPrint", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LableDisplay", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LableDisplay", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableDisplay", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LableType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LableType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LableType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_IsPrint", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsPrint", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsPrint", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT         LayoutKey, LableDisplay, LableType, IsPrint\r\nFROM             Layo" +
                "ut";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.LayoutDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.LayoutDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.LayoutDataTable dataTable = new PRINTERDataSet.LayoutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.LayoutDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Layout");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LayoutKey, string Original_LableDisplay, string Original_LableType, global::System.Nullable<bool> Original_IsPrint) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LayoutKey));
            if ((Original_LableDisplay == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LableDisplay));
            }
            if ((Original_LableType == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LableType));
            }
            if ((Original_IsPrint.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_IsPrint.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LableDisplay, string LableType, global::System.Nullable<bool> IsPrint) {
            if ((LableDisplay == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LableDisplay));
            }
            if ((LableType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LableType));
            }
            if ((IsPrint.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsPrint.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LableDisplay, string LableType, global::System.Nullable<bool> IsPrint, int Original_LayoutKey, string Original_LableDisplay, string Original_LableType, global::System.Nullable<bool> Original_IsPrint) {
            if ((LableDisplay == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LableDisplay));
            }
            if ((LableType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LableType));
            }
            if ((IsPrint.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsPrint.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_LayoutKey));
            if ((Original_LableDisplay == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_LableDisplay));
            }
            if ((Original_LableType == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_LableType));
            }
            if ((Original_IsPrint.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_IsPrint.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LayoutItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LayoutItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LayoutItem";
            tableMapping.ColumnMappings.Add("LayoutItemKey", "LayoutItemKey");
            tableMapping.ColumnMappings.Add("LayoutKey", "LayoutKey");
            tableMapping.ColumnMappings.Add("LabelType", "LabelType");
            tableMapping.ColumnMappings.Add("LabelText", "LabelText");
            tableMapping.ColumnMappings.Add("X", "X");
            tableMapping.ColumnMappings.Add("Y", "Y");
            tableMapping.ColumnMappings.Add("W", "W");
            tableMapping.ColumnMappings.Add("H", "H");
            tableMapping.ColumnMappings.Add("Align", "Align");
            tableMapping.ColumnMappings.Add("FontName", "FontName");
            tableMapping.ColumnMappings.Add("FontSize", "FontSize");
            tableMapping.ColumnMappings.Add("FontBold", "FontBold");
            tableMapping.ColumnMappings.Add("FontItalic", "FontItalic");
            tableMapping.ColumnMappings.Add("FontStrikeout", "FontStrikeout");
            tableMapping.ColumnMappings.Add("FontUnderline", "FontUnderline");
            tableMapping.ColumnMappings.Add("Visible", "Visible");
            tableMapping.ColumnMappings.Add("ShowImage", "ShowImage");
            tableMapping.ColumnMappings.Add("ImagePath", "ImagePath");
            tableMapping.ColumnMappings.Add("FontObject", "FontObject");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `LayoutItem` WHERE ((`LayoutItemKey` = ?) AND ((? = 1 AND `LayoutKey` IS NULL) OR (`LayoutKey` = ?)) AND ((? = 1 AND `LabelType` IS NULL) OR (`LabelType` = ?)) AND ((? = 1 AND `LabelText` IS NULL) OR (`LabelText` = ?)) AND ((? = 1 AND `X` IS NULL) OR (`X` = ?)) AND ((? = 1 AND `Y` IS NULL) OR (`Y` = ?)) AND ((? = 1 AND `W` IS NULL) OR (`W` = ?)) AND ((? = 1 AND `H` IS NULL) OR (`H` = ?)) AND ((? = 1 AND `Align` IS NULL) OR (`Align` = ?)) AND ((? = 1 AND `FontName` IS NULL) OR (`FontName` = ?)) AND ((? = 1 AND `FontSize` IS NULL) OR (`FontSize` = ?)) AND ((? = 1 AND `FontBold` IS NULL) OR (`FontBold` = ?)) AND ((? = 1 AND `FontItalic` IS NULL) OR (`FontItalic` = ?)) AND ((? = 1 AND `FontStrikeout` IS NULL) OR (`FontStrikeout` = ?)) AND ((? = 1 AND `FontUnderline` IS NULL) OR (`FontUnderline` = ?)) AND ((? = 1 AND `Visible` IS NULL) OR (`Visible` = ?)) AND ((? = 1 AND `ShowImage` IS NULL) OR (`ShowImage` = ?)) AND ((? = 1 AND `ImagePath` IS NULL) OR (`ImagePath` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutItemKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutItemKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LabelType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LabelType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LabelText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LabelText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_X", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_X", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Y", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Y", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_W", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_W", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Align", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Align", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontSize", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontSize", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontBold", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontBold", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontItalic", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontItalic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontStrikeout", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontStrikeout", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontUnderline", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontUnderline", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Visible", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Visible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShowImage", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShowImage", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImagePath", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImagePath", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `LayoutItem` (`LayoutKey`, `LabelType`, `LabelText`, `X`, `Y`, `W`, `H`, `Align`, `FontName`, `FontSize`, `FontBold`, `FontItalic`, `FontStrikeout`, `FontUnderline`, `Visible`, `ShowImage`, `ImagePath`, `FontObject`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LabelType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LabelText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("X", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Y", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("W", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Align", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontSize", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontBold", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontItalic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontStrikeout", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontUnderline", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Visible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShowImage", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImagePath", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontObject", global::System.Data.OleDb.OleDbType.LongVarBinary, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontObject", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `LayoutItem` SET `LayoutKey` = ?, `LabelType` = ?, `LabelText` = ?, `X` = ?, `Y` = ?, `W` = ?, `H` = ?, `Align` = ?, `FontName` = ?, `FontSize` = ?, `FontBold` = ?, `FontItalic` = ?, `FontStrikeout` = ?, `FontUnderline` = ?, `Visible` = ?, `ShowImage` = ?, `ImagePath` = ?, `FontObject` = ? WHERE ((`LayoutItemKey` = ?) AND ((? = 1 AND `LayoutKey` IS NULL) OR (`LayoutKey` = ?)) AND ((? = 1 AND `LabelType` IS NULL) OR (`LabelType` = ?)) AND ((? = 1 AND `LabelText` IS NULL) OR (`LabelText` = ?)) AND ((? = 1 AND `X` IS NULL) OR (`X` = ?)) AND ((? = 1 AND `Y` IS NULL) OR (`Y` = ?)) AND ((? = 1 AND `W` IS NULL) OR (`W` = ?)) AND ((? = 1 AND `H` IS NULL) OR (`H` = ?)) AND ((? = 1 AND `Align` IS NULL) OR (`Align` = ?)) AND ((? = 1 AND `FontName` IS NULL) OR (`FontName` = ?)) AND ((? = 1 AND `FontSize` IS NULL) OR (`FontSize` = ?)) AND ((? = 1 AND `FontBold` IS NULL) OR (`FontBold` = ?)) AND ((? = 1 AND `FontItalic` IS NULL) OR (`FontItalic` = ?)) AND ((? = 1 AND `FontStrikeout` IS NULL) OR (`FontStrikeout` = ?)) AND ((? = 1 AND `FontUnderline` IS NULL) OR (`FontUnderline` = ?)) AND ((? = 1 AND `Visible` IS NULL) OR (`Visible` = ?)) AND ((? = 1 AND `ShowImage` IS NULL) OR (`ShowImage` = ?)) AND ((? = 1 AND `ImagePath` IS NULL) OR (`ImagePath` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LabelType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LabelText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("X", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Y", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("W", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Align", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontSize", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontBold", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontItalic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontStrikeout", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontUnderline", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Visible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShowImage", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImagePath", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FontObject", global::System.Data.OleDb.OleDbType.LongVarBinary, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontObject", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutItemKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutItemKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LayoutKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LayoutKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LabelType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LabelType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LabelText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LabelText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LabelText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_X", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_X", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "X", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Y", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Y", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Y", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_W", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_W", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "W", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Align", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Align", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Align", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontSize", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontSize", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontSize", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontBold", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontBold", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontBold", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontItalic", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontItalic", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontItalic", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontStrikeout", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontStrikeout", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontStrikeout", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FontUnderline", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FontUnderline", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FontUnderline", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Visible", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Visible", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Visible", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShowImage", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShowImage", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShowImage", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImagePath", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImagePath", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImagePath", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT         LayoutItemKey, LayoutKey, LabelType, LabelText, X, Y, W, H, Align, FontName, 
                          FontSize, FontBold, FontItalic, FontStrikeout, FontUnderline, Visible, 
                          ShowImage, ImagePath, FontObject
FROM             LayoutItem
ORDER BY  LabelText DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.LayoutItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.LayoutItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.LayoutItemDataTable dataTable = new PRINTERDataSet.LayoutItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.LayoutItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LayoutItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_LayoutItemKey, 
                    global::System.Nullable<int> Original_LayoutKey, 
                    string Original_LabelType, 
                    string Original_LabelText, 
                    global::System.Nullable<short> Original_X, 
                    global::System.Nullable<short> Original_Y, 
                    global::System.Nullable<short> Original_W, 
                    global::System.Nullable<short> Original_H, 
                    string Original_Align, 
                    string Original_FontName, 
                    global::System.Nullable<float> Original_FontSize, 
                    bool Original_FontBold, 
                    bool Original_FontItalic, 
                    bool Original_FontStrikeout, 
                    bool Original_FontUnderline, 
                    bool Original_Visible, 
                    bool Original_ShowImage, 
                    string Original_ImagePath) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LayoutItemKey));
            if ((Original_LayoutKey.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_LayoutKey.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_LabelType == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LabelType));
            }
            if ((Original_LabelText == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LabelText));
            }
            if ((Original_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_W.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_W.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_H.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_H.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Align == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Align));
            }
            if ((Original_FontName == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_FontName));
            }
            if ((Original_FontSize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((float)(Original_FontSize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_FontBold));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_FontItalic));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_FontStrikeout));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_FontUnderline));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_Visible));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_ShowImage));
            if ((Original_ImagePath == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ImagePath));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> LayoutKey, 
                    string LabelType, 
                    string LabelText, 
                    global::System.Nullable<short> X, 
                    global::System.Nullable<short> Y, 
                    global::System.Nullable<short> W, 
                    global::System.Nullable<short> H, 
                    string Align, 
                    string FontName, 
                    global::System.Nullable<float> FontSize, 
                    bool FontBold, 
                    bool FontItalic, 
                    bool FontStrikeout, 
                    bool FontUnderline, 
                    bool Visible, 
                    bool ShowImage, 
                    string ImagePath, 
                    byte[] FontObject) {
            if ((LayoutKey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LayoutKey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LabelType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LabelType));
            }
            if ((LabelText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LabelText));
            }
            if ((X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((W.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((short)(W.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((H.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((short)(H.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Align == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Align));
            }
            if ((FontName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FontName));
            }
            if ((FontSize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((float)(FontSize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(FontBold));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(FontItalic));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(FontStrikeout));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(FontUnderline));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(Visible));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ShowImage));
            if ((ImagePath == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ImagePath));
            }
            if ((FontObject == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((byte[])(FontObject));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> LayoutKey, 
                    string LabelType, 
                    string LabelText, 
                    global::System.Nullable<short> X, 
                    global::System.Nullable<short> Y, 
                    global::System.Nullable<short> W, 
                    global::System.Nullable<short> H, 
                    string Align, 
                    string FontName, 
                    global::System.Nullable<float> FontSize, 
                    bool FontBold, 
                    bool FontItalic, 
                    bool FontStrikeout, 
                    bool FontUnderline, 
                    bool Visible, 
                    bool ShowImage, 
                    string ImagePath, 
                    byte[] FontObject, 
                    int Original_LayoutItemKey, 
                    global::System.Nullable<int> Original_LayoutKey, 
                    string Original_LabelType, 
                    string Original_LabelText, 
                    global::System.Nullable<short> Original_X, 
                    global::System.Nullable<short> Original_Y, 
                    global::System.Nullable<short> Original_W, 
                    global::System.Nullable<short> Original_H, 
                    string Original_Align, 
                    string Original_FontName, 
                    global::System.Nullable<float> Original_FontSize, 
                    bool Original_FontBold, 
                    bool Original_FontItalic, 
                    bool Original_FontStrikeout, 
                    bool Original_FontUnderline, 
                    bool Original_Visible, 
                    bool Original_ShowImage, 
                    string Original_ImagePath) {
            if ((LayoutKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LayoutKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LabelType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LabelType));
            }
            if ((LabelText == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LabelText));
            }
            if ((X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((W.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(W.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((H.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(H.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Align == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Align));
            }
            if ((FontName == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FontName));
            }
            if ((FontSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(FontSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(FontBold));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(FontItalic));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(FontStrikeout));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(FontUnderline));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Visible));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ShowImage));
            if ((ImagePath == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ImagePath));
            }
            if ((FontObject == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte[])(FontObject));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_LayoutItemKey));
            if ((Original_LayoutKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_LayoutKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_LabelType == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_LabelType));
            }
            if ((Original_LabelText == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_LabelText));
            }
            if ((Original_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(Original_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(Original_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_W.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(Original_W.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_H.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(Original_H.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Align == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Align));
            }
            if ((Original_FontName == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_FontName));
            }
            if ((Original_FontSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((float)(Original_FontSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Original_FontBold));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Original_FontItalic));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_FontStrikeout));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Original_FontUnderline));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(Original_Visible));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(Original_ShowImage));
            if ((Original_ImagePath == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ImagePath));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DrugTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DrugTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Drug";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PriceID", "PriceID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Stock", "Stock");
            tableMapping.ColumnMappings.Add("SafeStock", "SafeStock");
            tableMapping.ColumnMappings.Add("Box1", "Box1");
            tableMapping.ColumnMappings.Add("Box2", "Box2");
            tableMapping.ColumnMappings.Add("Box3", "Box3");
            tableMapping.ColumnMappings.Add("Box4", "Box4");
            tableMapping.ColumnMappings.Add("Box5", "Box5");
            tableMapping.ColumnMappings.Add("MaxQy", "MaxQy");
            tableMapping.ColumnMappings.Add("Package", "Package");
            tableMapping.ColumnMappings.Add("Prepare", "Prepare");
            tableMapping.ColumnMappings.Add("Expensive", "Expensive");
            tableMapping.ColumnMappings.Add("DrugType", "DrugType");
            tableMapping.ColumnMappings.Add("Limited", "Limited");
            tableMapping.ColumnMappings.Add("Ingredient", "Ingredient");
            tableMapping.ColumnMappings.Add("Affect", "Affect");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Drug` WHERE ((`ID` = ?) AND ((? = 1 AND `PriceID` IS NULL) OR (`PriceID` = ?)) AND ((? = 1 AND `Name` IS NULL) OR (`Name` = ?)) AND ((? = 1 AND `Stock` IS NULL) OR (`Stock` = ?)) AND ((? = 1 AND `SafeStock` IS NULL) OR (`SafeStock` = ?)) AND ((? = 1 AND `Box1` IS NULL) OR (`Box1` = ?)) AND ((? = 1 AND `Box2` IS NULL) OR (`Box2` = ?)) AND ((? = 1 AND `Box3` IS NULL) OR (`Box3` = ?)) AND ((? = 1 AND `Box4` IS NULL) OR (`Box4` = ?)) AND ((? = 1 AND `Box5` IS NULL) OR (`Box5` = ?)) AND ((? = 1 AND `MaxQy` IS NULL) OR (`MaxQy` = ?)) AND ((? = 1 AND `Package` IS NULL) OR (`Package` = ?)) AND ((? = 1 AND `Prepare` IS NULL) OR (`Prepare` = ?)) AND ((? = 1 AND `Expensive` IS NULL) OR (`Expensive` = ?)) AND ((? = 1 AND `DrugType` IS NULL) OR (`DrugType` = ?)) AND ((? = 1 AND `Limited` IS NULL) OR (`Limited` = ?)) AND ((? = 1 AND `Ingredient` IS NULL) OR (`Ingredient` = ?)) AND ((? = 1 AND `Affect` IS NULL) OR (`Affect` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PriceID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PriceID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Name", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Name", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Stock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Stock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SafeStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SafeStock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box1", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box2", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box3", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box4", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box5", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box5", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MaxQy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MaxQy", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Package", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Package", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Prepare", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Prepare", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Expensive", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Expensive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Limited", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Limited", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Ingredient", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ingredient", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Affect", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Affect", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `Drug` (`ID`, `PriceID`, `Name`, `Stock`, `SafeStock`, `Box1`, `Box2`, `Box3`, `Box4`, `Box5`, `MaxQy`, `Package`, `Prepare`, `Expensive`, `DrugType`, `Limited`, `Ingredient`, `Affect`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PriceID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Name", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SafeStock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box1", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box2", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box3", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box4", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box5", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MaxQy", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Package", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Prepare", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Expensive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Limited", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Ingredient", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Affect", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Drug` SET `ID` = ?, `PriceID` = ?, `Name` = ?, `Stock` = ?, `SafeStock` = ?, `Box1` = ?, `Box2` = ?, `Box3` = ?, `Box4` = ?, `Box5` = ?, `MaxQy` = ?, `Package` = ?, `Prepare` = ?, `Expensive` = ?, `DrugType` = ?, `Limited` = ?, `Ingredient` = ?, `Affect` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `PriceID` IS NULL) OR (`PriceID` = ?)) AND ((? = 1 AND `Name` IS NULL) OR (`Name` = ?)) AND ((? = 1 AND `Stock` IS NULL) OR (`Stock` = ?)) AND ((? = 1 AND `SafeStock` IS NULL) OR (`SafeStock` = ?)) AND ((? = 1 AND `Box1` IS NULL) OR (`Box1` = ?)) AND ((? = 1 AND `Box2` IS NULL) OR (`Box2` = ?)) AND ((? = 1 AND `Box3` IS NULL) OR (`Box3` = ?)) AND ((? = 1 AND `Box4` IS NULL) OR (`Box4` = ?)) AND ((? = 1 AND `Box5` IS NULL) OR (`Box5` = ?)) AND ((? = 1 AND `MaxQy` IS NULL) OR (`MaxQy` = ?)) AND ((? = 1 AND `Package` IS NULL) OR (`Package` = ?)) AND ((? = 1 AND `Prepare` IS NULL) OR (`Prepare` = ?)) AND ((? = 1 AND `Expensive` IS NULL) OR (`Expensive` = ?)) AND ((? = 1 AND `DrugType` IS NULL) OR (`DrugType` = ?)) AND ((? = 1 AND `Limited` IS NULL) OR (`Limited` = ?)) AND ((? = 1 AND `Ingredient` IS NULL) OR (`Ingredient` = ?)) AND ((? = 1 AND `Affect` IS NULL) OR (`Affect` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PriceID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Name", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Stock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SafeStock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box1", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box2", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box3", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box4", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Box5", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MaxQy", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Package", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Prepare", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Expensive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Limited", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Ingredient", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Affect", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PriceID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PriceID", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PriceID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Name", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Name", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Stock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Stock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Stock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SafeStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SafeStock", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SafeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box1", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box2", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box3", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box4", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Box5", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Box5", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Box5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MaxQy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MaxQy", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaxQy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Package", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Package", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Package", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Prepare", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Prepare", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prepare", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Expensive", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Expensive", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Expensive", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Limited", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Limited", global::System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Limited", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Ingredient", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ingredient", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ingredient", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Affect", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Affect", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Affect", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT         Drug.*\r\nFROM             Drug";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.DrugDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.DrugDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.DrugDataTable dataTable = new PRINTERDataSet.DrugDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.DrugDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Drug");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ID, 
                    string Original_PriceID, 
                    string Original_Name, 
                    global::System.Nullable<short> Original_Stock, 
                    global::System.Nullable<short> Original_SafeStock, 
                    global::System.Nullable<short> Original_Box1, 
                    global::System.Nullable<short> Original_Box2, 
                    global::System.Nullable<short> Original_Box3, 
                    global::System.Nullable<short> Original_Box4, 
                    global::System.Nullable<short> Original_Box5, 
                    global::System.Nullable<byte> Original_MaxQy, 
                    bool Original_Package, 
                    global::System.Nullable<byte> Original_Prepare, 
                    bool Original_Expensive, 
                    string Original_DrugType, 
                    global::System.Nullable<byte> Original_Limited, 
                    string Original_Ingredient, 
                    string Original_Affect) {
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID));
            }
            if ((Original_PriceID == null)) {
                throw new global::System.ArgumentNullException("Original_PriceID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PriceID));
            }
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Name));
            }
            if ((Original_Stock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_Stock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SafeStock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_SafeStock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Box1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_Box1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Box2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_Box2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Box3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_Box3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Box4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_Box4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Box5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((short)(Original_Box5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxQy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((byte)(Original_MaxQy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_Package));
            if ((Original_Prepare.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((byte)(Original_Prepare.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_Expensive));
            if ((Original_DrugType == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_DrugType));
            }
            if ((Original_Limited.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_Limited.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Ingredient == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Ingredient));
            }
            if ((Original_Affect == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Affect));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ID, 
                    string PriceID, 
                    string Name, 
                    global::System.Nullable<short> Stock, 
                    global::System.Nullable<short> SafeStock, 
                    global::System.Nullable<short> Box1, 
                    global::System.Nullable<short> Box2, 
                    global::System.Nullable<short> Box3, 
                    global::System.Nullable<short> Box4, 
                    global::System.Nullable<short> Box5, 
                    global::System.Nullable<byte> MaxQy, 
                    bool Package, 
                    global::System.Nullable<byte> Prepare, 
                    bool Expensive, 
                    string DrugType, 
                    global::System.Nullable<byte> Limited, 
                    string Ingredient, 
                    string Affect) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((PriceID == null)) {
                throw new global::System.ArgumentNullException("PriceID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PriceID));
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Stock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(Stock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SafeStock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(SafeStock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Box1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((short)(Box1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Box2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((short)(Box2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Box3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((short)(Box3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Box4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((short)(Box4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Box5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((short)(Box5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MaxQy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((byte)(MaxQy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Package));
            if ((Prepare.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(Prepare.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(Expensive));
            if ((DrugType == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(DrugType));
            }
            if ((Limited.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(Limited.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Ingredient == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Ingredient));
            }
            if ((Affect == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Affect));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID, 
                    string PriceID, 
                    string Name, 
                    global::System.Nullable<short> Stock, 
                    global::System.Nullable<short> SafeStock, 
                    global::System.Nullable<short> Box1, 
                    global::System.Nullable<short> Box2, 
                    global::System.Nullable<short> Box3, 
                    global::System.Nullable<short> Box4, 
                    global::System.Nullable<short> Box5, 
                    global::System.Nullable<byte> MaxQy, 
                    bool Package, 
                    global::System.Nullable<byte> Prepare, 
                    bool Expensive, 
                    string DrugType, 
                    global::System.Nullable<byte> Limited, 
                    string Ingredient, 
                    string Affect, 
                    string Original_ID, 
                    string Original_PriceID, 
                    string Original_Name, 
                    global::System.Nullable<short> Original_Stock, 
                    global::System.Nullable<short> Original_SafeStock, 
                    global::System.Nullable<short> Original_Box1, 
                    global::System.Nullable<short> Original_Box2, 
                    global::System.Nullable<short> Original_Box3, 
                    global::System.Nullable<short> Original_Box4, 
                    global::System.Nullable<short> Original_Box5, 
                    global::System.Nullable<byte> Original_MaxQy, 
                    bool Original_Package, 
                    global::System.Nullable<byte> Original_Prepare, 
                    bool Original_Expensive, 
                    string Original_DrugType, 
                    global::System.Nullable<byte> Original_Limited, 
                    string Original_Ingredient, 
                    string Original_Affect) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((PriceID == null)) {
                throw new global::System.ArgumentNullException("PriceID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PriceID));
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Stock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(Stock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SafeStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(SafeStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Box1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Box1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Box2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Box2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Box3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(Box3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Box4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Box4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Box5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Box5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MaxQy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(MaxQy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Package));
            if ((Prepare.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Prepare.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Expensive));
            if ((DrugType == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(DrugType));
            }
            if ((Limited.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(Limited.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Ingredient == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Ingredient));
            }
            if ((Affect == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Affect));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ID));
            }
            if ((Original_PriceID == null)) {
                throw new global::System.ArgumentNullException("Original_PriceID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_PriceID));
            }
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Name));
            }
            if ((Original_Stock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(Original_Stock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_SafeStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(Original_SafeStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Box1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(Original_Box1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Box2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(Original_Box2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Box3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(Original_Box3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Box4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((short)(Original_Box4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Box5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((short)(Original_Box5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxQy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((byte)(Original_MaxQy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Original_Package));
            if ((Original_Prepare.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((byte)(Original_Prepare.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_Expensive));
            if ((Original_DrugType == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_DrugType));
            }
            if ((Original_Limited.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((byte)(Original_Limited.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Ingredient == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_Ingredient));
            }
            if ((Original_Affect == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Affect));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PriceID, 
                    string Name, 
                    global::System.Nullable<short> Stock, 
                    global::System.Nullable<short> SafeStock, 
                    global::System.Nullable<short> Box1, 
                    global::System.Nullable<short> Box2, 
                    global::System.Nullable<short> Box3, 
                    global::System.Nullable<short> Box4, 
                    global::System.Nullable<short> Box5, 
                    global::System.Nullable<byte> MaxQy, 
                    bool Package, 
                    global::System.Nullable<byte> Prepare, 
                    bool Expensive, 
                    string DrugType, 
                    global::System.Nullable<byte> Limited, 
                    string Ingredient, 
                    string Affect, 
                    string Original_ID, 
                    string Original_PriceID, 
                    string Original_Name, 
                    global::System.Nullable<short> Original_Stock, 
                    global::System.Nullable<short> Original_SafeStock, 
                    global::System.Nullable<short> Original_Box1, 
                    global::System.Nullable<short> Original_Box2, 
                    global::System.Nullable<short> Original_Box3, 
                    global::System.Nullable<short> Original_Box4, 
                    global::System.Nullable<short> Original_Box5, 
                    global::System.Nullable<byte> Original_MaxQy, 
                    bool Original_Package, 
                    global::System.Nullable<byte> Original_Prepare, 
                    bool Original_Expensive, 
                    string Original_DrugType, 
                    global::System.Nullable<byte> Original_Limited, 
                    string Original_Ingredient, 
                    string Original_Affect) {
            return this.Update(Original_ID, PriceID, Name, Stock, SafeStock, Box1, Box2, Box3, Box4, Box5, MaxQy, Package, Prepare, Expensive, DrugType, Limited, Ingredient, Affect, Original_ID, Original_PriceID, Original_Name, Original_Stock, Original_SafeStock, Original_Box1, Original_Box2, Original_Box3, Original_Box4, Original_Box5, Original_MaxQy, Original_Package, Original_Prepare, Original_Expensive, Original_DrugType, Original_Limited, Original_Ingredient, Original_Affect);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TTPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TTPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TTP";
            tableMapping.ColumnMappings.Add("Customer", "Customer");
            tableMapping.ColumnMappings.Add("H00", "H00");
            tableMapping.ColumnMappings.Add("H01", "H01");
            tableMapping.ColumnMappings.Add("H02", "H02");
            tableMapping.ColumnMappings.Add("H03", "H03");
            tableMapping.ColumnMappings.Add("H04", "H04");
            tableMapping.ColumnMappings.Add("H05", "H05");
            tableMapping.ColumnMappings.Add("H06", "H06");
            tableMapping.ColumnMappings.Add("H07", "H07");
            tableMapping.ColumnMappings.Add("H08", "H08");
            tableMapping.ColumnMappings.Add("H09", "H09");
            tableMapping.ColumnMappings.Add("H10", "H10");
            tableMapping.ColumnMappings.Add("H11", "H11");
            tableMapping.ColumnMappings.Add("H12", "H12");
            tableMapping.ColumnMappings.Add("H13", "H13");
            tableMapping.ColumnMappings.Add("H14", "H14");
            tableMapping.ColumnMappings.Add("H15", "H15");
            tableMapping.ColumnMappings.Add("H16", "H16");
            tableMapping.ColumnMappings.Add("H17", "H17");
            tableMapping.ColumnMappings.Add("H18", "H18");
            tableMapping.ColumnMappings.Add("H19", "H19");
            tableMapping.ColumnMappings.Add("H20", "H20");
            tableMapping.ColumnMappings.Add("H21", "H21");
            tableMapping.ColumnMappings.Add("H22", "H22");
            tableMapping.ColumnMappings.Add("H23", "H23");
            tableMapping.ColumnMappings.Add("TTP", "TTP");
            tableMapping.ColumnMappings.Add("TTPText", "TTPText");
            tableMapping.ColumnMappings.Add("Days", "Days");
            tableMapping.ColumnMappings.Add("Times", "Times");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `TTP` WHERE ((`TTP` = ?) AND ((? = 1 AND `TTPText` IS NULL) OR (`TTPText` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1 AND `Times` IS NULL) OR (`Times` = ?)) AND ((? = 1 AND `Customer` IS NULL) OR (`Customer` = ?)) AND ((? = 1 AND `H00` IS NULL) OR (`H00` = ?)) AND ((? = 1 AND `H01` IS NULL) OR (`H01` = ?)) AND ((? = 1 AND `H02` IS NULL) OR (`H02` = ?)) AND ((? = 1 AND `H03` IS NULL) OR (`H03` = ?)) AND ((? = 1 AND `H04` IS NULL) OR (`H04` = ?)) AND ((? = 1 AND `H05` IS NULL) OR (`H05` = ?)) AND ((? = 1 AND `H06` IS NULL) OR (`H06` = ?)) AND ((? = 1 AND `H07` IS NULL) OR (`H07` = ?)) AND ((? = 1 AND `H08` IS NULL) OR (`H08` = ?)) AND ((? = 1 AND `H09` IS NULL) OR (`H09` = ?)) AND ((? = 1 AND `H10` IS NULL) OR (`H10` = ?)) AND ((? = 1 AND `H11` IS NULL) OR (`H11` = ?)) AND ((? = 1 AND `H12` IS NULL) OR (`H12` = ?)) AND ((? = 1 AND `H13` IS NULL) OR (`H13` = ?)) AND ((? = 1 AND `H14` IS NULL) OR (`H14` = ?)) AND ((? = 1 AND `H15` IS NULL) OR (`H15` = ?)) AND ((? = 1 AND `H16` IS NULL) OR (`H16` = ?)) AND ((? = 1 AND `H17` IS NULL) OR (`H17` = ?)) AND ((? = 1 AND `H18` IS NULL) OR (`H18` = ?)) AND ((? = 1 AND `H19` IS NULL) OR (`H19` = ?)) AND ((? = 1 AND `H20` IS NULL) OR (`H20` = ?)) AND ((? = 1 AND `H21` IS NULL) OR (`H21` = ?)) AND ((? = 1 AND `H22` IS NULL) OR (`H22` = ?)) AND ((? = 1 AND `H23` IS NULL) OR (`H23` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTPText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTPText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Times", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Times", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Customer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Customer", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H00", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H00", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H01", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H02", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H03", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H04", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H05", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H06", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H07", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H08", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H09", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H10", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H11", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H12", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H13", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H14", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H15", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H16", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H17", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H18", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H19", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H20", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H21", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H22", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H23", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `TTP` (`TTP`, `TTPText`, `Days`, `Times`, `Customer`, `H00`, `H01`, `H02`, `H03`, `H04`, `H05`, `H06`, `H07`, `H08`, `H09`, `H10`, `H11`, `H12`, `H13`, `H14`, `H15`, `H16`, `H17`, `H18`, `H19`, `H20`, `H21`, `H22`, `H23`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTPText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Times", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Customer", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H00", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `TTP` SET `TTP` = ?, `TTPText` = ?, `Days` = ?, `Times` = ?, `Customer` = " +
                "?, `H00` = ?, `H01` = ?, `H02` = ?, `H03` = ?, `H04` = ?, `H05` = ?, `H06` = ?, " +
                "`H07` = ?, `H08` = ?, `H09` = ?, `H10` = ?, `H11` = ?, `H12` = ?, `H13` = ?, `H1" +
                "4` = ?, `H15` = ?, `H16` = ?, `H17` = ?, `H18` = ?, `H19` = ?, `H20` = ?, `H21` " +
                "= ?, `H22` = ?, `H23` = ? WHERE ((`TTP` = ?) AND ((? = 1 AND `TTPText` IS NULL) " +
                "OR (`TTPText` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1" +
                " AND `Times` IS NULL) OR (`Times` = ?)) AND ((? = 1 AND `Customer` IS NULL) OR (" +
                "`Customer` = ?)) AND ((? = 1 AND `H00` IS NULL) OR (`H00` = ?)) AND ((? = 1 AND " +
                "`H01` IS NULL) OR (`H01` = ?)) AND ((? = 1 AND `H02` IS NULL) OR (`H02` = ?)) AN" +
                "D ((? = 1 AND `H03` IS NULL) OR (`H03` = ?)) AND ((? = 1 AND `H04` IS NULL) OR (" +
                "`H04` = ?)) AND ((? = 1 AND `H05` IS NULL) OR (`H05` = ?)) AND ((? = 1 AND `H06`" +
                " IS NULL) OR (`H06` = ?)) AND ((? = 1 AND `H07` IS NULL) OR (`H07` = ?)) AND ((?" +
                " = 1 AND `H08` IS NULL) OR (`H08` = ?)) AND ((? = 1 AND `H09` IS NULL) OR (`H09`" +
                " = ?)) AND ((? = 1 AND `H10` IS NULL) OR (`H10` = ?)) AND ((? = 1 AND `H11` IS N" +
                "ULL) OR (`H11` = ?)) AND ((? = 1 AND `H12` IS NULL) OR (`H12` = ?)) AND ((? = 1 " +
                "AND `H13` IS NULL) OR (`H13` = ?)) AND ((? = 1 AND `H14` IS NULL) OR (`H14` = ?)" +
                ") AND ((? = 1 AND `H15` IS NULL) OR (`H15` = ?)) AND ((? = 1 AND `H16` IS NULL) " +
                "OR (`H16` = ?)) AND ((? = 1 AND `H17` IS NULL) OR (`H17` = ?)) AND ((? = 1 AND `" +
                "H18` IS NULL) OR (`H18` = ?)) AND ((? = 1 AND `H19` IS NULL) OR (`H19` = ?)) AND" +
                " ((? = 1 AND `H20` IS NULL) OR (`H20` = ?)) AND ((? = 1 AND `H21` IS NULL) OR (`" +
                "H21` = ?)) AND ((? = 1 AND `H22` IS NULL) OR (`H22` = ?)) AND ((? = 1 AND `H23` " +
                "IS NULL) OR (`H23` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTPText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Times", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Customer", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H00", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("H23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTPText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTPText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTPText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Times", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Times", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Times", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Customer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Customer", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Customer", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H00", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H00", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H00", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H01", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H01", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H02", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H02", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H03", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H03", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H04", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H04", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H05", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H05", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H06", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H06", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H07", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H07", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H08", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H08", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H09", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H09", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H10", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H10", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H11", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H11", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H12", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H12", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H13", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H13", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H14", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H14", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H15", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H15", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H16", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H16", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H17", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H17", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H18", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H18", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H19", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H19", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H20", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H20", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H21", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H21", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H22", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H22", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_H23", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_H23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "H23", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT         TTP, TTPText, Days, Times, Customer, H00, H01, H02, H03, H04, H05, H06, 
                          H07, H08, H09, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, 
                          H22, H23
FROM             TTP
ORDER BY  Days, Times";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.TTPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.TTPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.TTPDataTable dataTable = new PRINTERDataSet.TTPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.TTPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TTP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_TTP, 
                    string Original_TTPText, 
                    string Original_Days, 
                    string Original_Times, 
                    string Original_Customer, 
                    bool Original_H00, 
                    bool Original_H01, 
                    bool Original_H02, 
                    bool Original_H03, 
                    bool Original_H04, 
                    bool Original_H05, 
                    bool Original_H06, 
                    bool Original_H07, 
                    bool Original_H08, 
                    bool Original_H09, 
                    bool Original_H10, 
                    bool Original_H11, 
                    bool Original_H12, 
                    bool Original_H13, 
                    bool Original_H14, 
                    bool Original_H15, 
                    bool Original_H16, 
                    bool Original_H17, 
                    bool Original_H18, 
                    bool Original_H19, 
                    bool Original_H20, 
                    bool Original_H21, 
                    bool Original_H22, 
                    bool Original_H23) {
            if ((Original_TTP == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TTP));
            }
            if ((Original_TTPText == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TTPText));
            }
            if ((Original_Days == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Days));
            }
            if ((Original_Times == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Times));
            }
            if ((Original_Customer == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Customer));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_H00));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_H01));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_H02));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_H03));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_H04));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_H05));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_H06));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_H07));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_H08));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_H09));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_H10));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_H11));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_H12));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_H13));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_H14));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_H15));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_H16));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_H17));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_H18));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((bool)(Original_H19));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_H20));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((bool)(Original_H21));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_H22));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((bool)(Original_H23));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string TTP, 
                    string TTPText, 
                    string Days, 
                    string Times, 
                    string Customer, 
                    bool H00, 
                    bool H01, 
                    bool H02, 
                    bool H03, 
                    bool H04, 
                    bool H05, 
                    bool H06, 
                    bool H07, 
                    bool H08, 
                    bool H09, 
                    bool H10, 
                    bool H11, 
                    bool H12, 
                    bool H13, 
                    bool H14, 
                    bool H15, 
                    bool H16, 
                    bool H17, 
                    bool H18, 
                    bool H19, 
                    bool H20, 
                    bool H21, 
                    bool H22, 
                    bool H23) {
            if ((TTP == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TTP));
            }
            if ((TTPText == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TTPText));
            }
            if ((Days == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Days));
            }
            if ((Times == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Times));
            }
            if ((Customer == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Customer));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(H00));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(H01));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(H02));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(H03));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(H04));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(H05));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(H06));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(H07));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(H08));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(H09));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(H10));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(H11));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(H12));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(H13));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(H14));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(H15));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(H16));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(H17));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(H18));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(H19));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(H20));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(H21));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(H22));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(H23));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TTP, 
                    string TTPText, 
                    string Days, 
                    string Times, 
                    string Customer, 
                    bool H00, 
                    bool H01, 
                    bool H02, 
                    bool H03, 
                    bool H04, 
                    bool H05, 
                    bool H06, 
                    bool H07, 
                    bool H08, 
                    bool H09, 
                    bool H10, 
                    bool H11, 
                    bool H12, 
                    bool H13, 
                    bool H14, 
                    bool H15, 
                    bool H16, 
                    bool H17, 
                    bool H18, 
                    bool H19, 
                    bool H20, 
                    bool H21, 
                    bool H22, 
                    bool H23, 
                    string Original_TTP, 
                    string Original_TTPText, 
                    string Original_Days, 
                    string Original_Times, 
                    string Original_Customer, 
                    bool Original_H00, 
                    bool Original_H01, 
                    bool Original_H02, 
                    bool Original_H03, 
                    bool Original_H04, 
                    bool Original_H05, 
                    bool Original_H06, 
                    bool Original_H07, 
                    bool Original_H08, 
                    bool Original_H09, 
                    bool Original_H10, 
                    bool Original_H11, 
                    bool Original_H12, 
                    bool Original_H13, 
                    bool Original_H14, 
                    bool Original_H15, 
                    bool Original_H16, 
                    bool Original_H17, 
                    bool Original_H18, 
                    bool Original_H19, 
                    bool Original_H20, 
                    bool Original_H21, 
                    bool Original_H22, 
                    bool Original_H23) {
            if ((TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TTP));
            }
            if ((TTPText == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TTPText));
            }
            if ((Days == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Days));
            }
            if ((Times == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Times));
            }
            if ((Customer == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Customer));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(H00));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(H01));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(H02));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(H03));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(H04));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(H05));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(H06));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(H07));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(H08));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(H09));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(H10));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(H11));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(H12));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(H13));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(H14));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(H15));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(H16));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(H17));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(H18));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(H19));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(H20));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(H21));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(H22));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(H23));
            if ((Original_TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_TTP));
            }
            if ((Original_TTPText == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_TTPText));
            }
            if ((Original_Days == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Days));
            }
            if ((Original_Times == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Times));
            }
            if ((Original_Customer == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Customer));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_H00));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_H01));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(Original_H02));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(Original_H03));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_H04));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_H05));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_H06));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_H07));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_H08));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_H09));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_H10));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_H11));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_H12));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_H13));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_H14));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_H15));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_H16));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_H17));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_H18));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_H19));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_H20));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_H21));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_H22));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(Original_H23));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TTPText, 
                    string Days, 
                    string Times, 
                    string Customer, 
                    bool H00, 
                    bool H01, 
                    bool H02, 
                    bool H03, 
                    bool H04, 
                    bool H05, 
                    bool H06, 
                    bool H07, 
                    bool H08, 
                    bool H09, 
                    bool H10, 
                    bool H11, 
                    bool H12, 
                    bool H13, 
                    bool H14, 
                    bool H15, 
                    bool H16, 
                    bool H17, 
                    bool H18, 
                    bool H19, 
                    bool H20, 
                    bool H21, 
                    bool H22, 
                    bool H23, 
                    string Original_TTP, 
                    string Original_TTPText, 
                    string Original_Days, 
                    string Original_Times, 
                    string Original_Customer, 
                    bool Original_H00, 
                    bool Original_H01, 
                    bool Original_H02, 
                    bool Original_H03, 
                    bool Original_H04, 
                    bool Original_H05, 
                    bool Original_H06, 
                    bool Original_H07, 
                    bool Original_H08, 
                    bool Original_H09, 
                    bool Original_H10, 
                    bool Original_H11, 
                    bool Original_H12, 
                    bool Original_H13, 
                    bool Original_H14, 
                    bool Original_H15, 
                    bool Original_H16, 
                    bool Original_H17, 
                    bool Original_H18, 
                    bool Original_H19, 
                    bool Original_H20, 
                    bool Original_H21, 
                    bool Original_H22, 
                    bool Original_H23) {
            return this.Update(Original_TTP, TTPText, Days, Times, Customer, H00, H01, H02, H03, H04, H05, H06, H07, H08, H09, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, H22, H23, Original_TTP, Original_TTPText, Original_Days, Original_Times, Original_Customer, Original_H00, Original_H01, Original_H02, Original_H03, Original_H04, Original_H05, Original_H06, Original_H07, Original_H08, Original_H09, Original_H10, Original_H11, Original_H12, Original_H13, Original_H14, Original_H15, Original_H16, Original_H17, Original_H18, Original_H19, Original_H20, Original_H21, Original_H22, Original_H23);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PacketTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PacketTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Packet";
            tableMapping.ColumnMappings.Add("PacketKey", "PacketKey");
            tableMapping.ColumnMappings.Add("PrescriptionKey", "PrescriptionKey");
            tableMapping.ColumnMappings.Add("DrugName", "DrugName");
            tableMapping.ColumnMappings.Add("TTP", "TTP");
            tableMapping.ColumnMappings.Add("P01", "P01");
            tableMapping.ColumnMappings.Add("P02", "P02");
            tableMapping.ColumnMappings.Add("P03", "P03");
            tableMapping.ColumnMappings.Add("P04", "P04");
            tableMapping.ColumnMappings.Add("P05", "P05");
            tableMapping.ColumnMappings.Add("P06", "P06");
            tableMapping.ColumnMappings.Add("P07", "P07");
            tableMapping.ColumnMappings.Add("P08", "P08");
            tableMapping.ColumnMappings.Add("P09", "P09");
            tableMapping.ColumnMappings.Add("P10", "P10");
            tableMapping.ColumnMappings.Add("P11", "P11");
            tableMapping.ColumnMappings.Add("P12", "P12");
            tableMapping.ColumnMappings.Add("P13", "P13");
            tableMapping.ColumnMappings.Add("P14", "P14");
            tableMapping.ColumnMappings.Add("P15", "P15");
            tableMapping.ColumnMappings.Add("P16", "P16");
            tableMapping.ColumnMappings.Add("P17", "P17");
            tableMapping.ColumnMappings.Add("P18", "P18");
            tableMapping.ColumnMappings.Add("P19", "P19");
            tableMapping.ColumnMappings.Add("P20", "P20");
            tableMapping.ColumnMappings.Add("P21", "P21");
            tableMapping.ColumnMappings.Add("P22", "P22");
            tableMapping.ColumnMappings.Add("P23", "P23");
            tableMapping.ColumnMappings.Add("P24", "P24");
            tableMapping.ColumnMappings.Add("P25", "P25");
            tableMapping.ColumnMappings.Add("P26", "P26");
            tableMapping.ColumnMappings.Add("P27", "P27");
            tableMapping.ColumnMappings.Add("P28", "P28");
            tableMapping.ColumnMappings.Add("P29", "P29");
            tableMapping.ColumnMappings.Add("P30", "P30");
            tableMapping.ColumnMappings.Add("P31", "P31");
            tableMapping.ColumnMappings.Add("P32", "P32");
            tableMapping.ColumnMappings.Add("P33", "P33");
            tableMapping.ColumnMappings.Add("P34", "P34");
            tableMapping.ColumnMappings.Add("P35", "P35");
            tableMapping.ColumnMappings.Add("P36", "P36");
            tableMapping.ColumnMappings.Add("P37", "P37");
            tableMapping.ColumnMappings.Add("P38", "P38");
            tableMapping.ColumnMappings.Add("P39", "P39");
            tableMapping.ColumnMappings.Add("P40", "P40");
            tableMapping.ColumnMappings.Add("P41", "P41");
            tableMapping.ColumnMappings.Add("P42", "P42");
            tableMapping.ColumnMappings.Add("P43", "P43");
            tableMapping.ColumnMappings.Add("P44", "P44");
            tableMapping.ColumnMappings.Add("P45", "P45");
            tableMapping.ColumnMappings.Add("PKey", "PKey");
            tableMapping.ColumnMappings.Add("TimesQty", "TimesQty");
            tableMapping.ColumnMappings.Add("Days", "Days");
            tableMapping.ColumnMappings.Add("Total", "Total");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM Packet";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `Packet` (`PKey`, `PrescriptionKey`, `DrugName`, `TTP`, `TimesQty`, `Days`, `P01`, `P02`, `P03`, `P04`, `P05`, `P06`, `P07`, `P08`, `P09`, `P10`, `P11`, `P12`, `P13`, `P14`, `P15`, `P16`, `P17`, `P18`, `P19`, `P20`, `P21`, `P22`, `P23`, `P24`, `P25`, `P26`, `P27`, `P28`, `P29`, `P30`, `P31`, `P32`, `P33`, `P34`, `P35`, `P36`, `P37`, `P38`, `P39`, `P40`, `P41`, `P42`, `P43`, `P44`, `P45`, `Total`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P01", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P02", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P03", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P04", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P05", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P06", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P07", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P08", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P09", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P24", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P25", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P26", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P27", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P28", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P29", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P30", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P31", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P31", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P32", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P32", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P33", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P33", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P34", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P34", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P35", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P35", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P36", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P36", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P37", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P37", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P38", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P38", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P39", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P39", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P40", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P40", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P41", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P41", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P42", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P42", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P43", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P43", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P44", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P44", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P45", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P45", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `Packet` SET `PKey` = ?, `PrescriptionKey` = ?, `DrugName` = ?, `TTP` = ?," +
                " `TimesQty` = ?, `Days` = ?, `P01` = ?, `P02` = ?, `P03` = ?, `P04` = ?, `P05` =" +
                " ?, `P06` = ?, `P07` = ?, `P08` = ?, `P09` = ?, `P10` = ?, `P11` = ?, `P12` = ?," +
                " `P13` = ?, `P14` = ?, `P15` = ?, `P16` = ?, `P17` = ?, `P18` = ?, `P19` = ?, `P" +
                "20` = ?, `P21` = ?, `P22` = ?, `P23` = ?, `P24` = ?, `P25` = ?, `P26` = ?, `P27`" +
                " = ?, `P28` = ?, `P29` = ?, `P30` = ?, `P31` = ?, `P32` = ?, `P33` = ?, `P34` = " +
                "?, `P35` = ?, `P36` = ?, `P37` = ?, `P38` = ?, `P39` = ?, `P40` = ?, `P41` = ?, " +
                "`P42` = ?, `P43` = ?, `P44` = ?, `P45` = ?, `Total` = ? WHERE (((? = 1 AND `PKey" +
                "` IS NULL) OR (`PKey` = ?)) AND ((? = 1 AND `PrescriptionKey` IS NULL) OR (`Pres" +
                "criptionKey` = ?)) AND ((? = 1 AND `DrugName` IS NULL) OR (`DrugName` = ?)) AND " +
                "((? = 1 AND `TTP` IS NULL) OR (`TTP` = ?)) AND ((? = 1 AND `TimesQty` IS NULL) O" +
                "R (`TimesQty` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1" +
                " AND `P01` IS NULL) OR (`P01` = ?)) AND ((? = 1 AND `P02` IS NULL) OR (`P02` = ?" +
                ")) AND ((? = 1 AND `P03` IS NULL) OR (`P03` = ?)) AND ((? = 1 AND `P04` IS NULL)" +
                " OR (`P04` = ?)) AND ((? = 1 AND `P05` IS NULL) OR (`P05` = ?)) AND ((? = 1 AND " +
                "`P06` IS NULL) OR (`P06` = ?)) AND ((? = 1 AND `P07` IS NULL) OR (`P07` = ?)) AN" +
                "D ((? = 1 AND `P08` IS NULL) OR (`P08` = ?)) AND ((? = 1 AND `P09` IS NULL) OR (" +
                "`P09` = ?)) AND ((? = 1 AND `P10` IS NULL) OR (`P10` = ?)) AND ((? = 1 AND `P11`" +
                " IS NULL) OR (`P11` = ?)) AND ((? = 1 AND `P12` IS NULL) OR (`P12` = ?)) AND ((?" +
                " = 1 AND `P13` IS NULL) OR (`P13` = ?)) AND ((? = 1 AND `P14` IS NULL) OR (`P14`" +
                " = ?)) AND ((? = 1 AND `P15` IS NULL) OR (`P15` = ?)) AND ((? = 1 AND `P16` IS N" +
                "ULL) OR (`P16` = ?)) AND ((? = 1 AND `P17` IS NULL) OR (`P17` = ?)) AND ((? = 1 " +
                "AND `P18` IS NULL) OR (`P18` = ?)) AND ((? = 1 AND `P19` IS NULL) OR (`P19` = ?)" +
                ") AND ((? = 1 AND `P20` IS NULL) OR (`P20` = ?)) AND ((? = 1 AND `P21` IS NULL) " +
                "OR (`P21` = ?)) AND ((? = 1 AND `P22` IS NULL) OR (`P22` = ?)) AND ((? = 1 AND `" +
                "P23` IS NULL) OR (`P23` = ?)) AND ((? = 1 AND `P24` IS NULL) OR (`P24` = ?)) AND" +
                " ((? = 1 AND `P25` IS NULL) OR (`P25` = ?)) AND ((? = 1 AND `P26` IS NULL) OR (`" +
                "P26` = ?)) AND ((? = 1 AND `P27` IS NULL) OR (`P27` = ?)) AND ((? = 1 AND `P28` " +
                "IS NULL) OR (`P28` = ?)) AND ((? = 1 AND `P29` IS NULL) OR (`P29` = ?)) AND ((? " +
                "= 1 AND `P30` IS NULL) OR (`P30` = ?)) AND ((? = 1 AND `P31` IS NULL) OR (`P31` " +
                "= ?)) AND ((? = 1 AND `P32` IS NULL) OR (`P32` = ?)) AND ((? = 1 AND `P33` IS NU" +
                "LL) OR (`P33` = ?)) AND ((? = 1 AND `P34` IS NULL) OR (`P34` = ?)) AND ((? = 1 A" +
                "ND `P35` IS NULL) OR (`P35` = ?)) AND ((? = 1 AND `P36` IS NULL) OR (`P36` = ?))" +
                " AND ((? = 1 AND `P37` IS NULL) OR (`P37` = ?)) AND ((? = 1 AND `P38` IS NULL) O" +
                "R (`P38` = ?)) AND ((? = 1 AND `P39` IS NULL) OR (`P39` = ?)) AND ((? = 1 AND `P" +
                "40` IS NULL) OR (`P40` = ?)) AND ((? = 1 AND `P41` IS NULL) OR (`P41` = ?)) AND " +
                "((? = 1 AND `P42` IS NULL) OR (`P42` = ?)) AND ((? = 1 AND `P43` IS NULL) OR (`P" +
                "43` = ?)) AND ((? = 1 AND `P44` IS NULL) OR (`P44` = ?)) AND ((? = 1 AND `P45` I" +
                "S NULL) OR (`P45` = ?)) AND (`PacketKey` = ?) AND ((? = 1 AND `Total` IS NULL) O" +
                "R (`Total` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P01", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P02", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P03", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P04", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P05", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P06", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P07", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P08", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P09", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P24", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P25", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P26", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P27", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P28", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P29", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P30", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P31", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P31", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P32", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P32", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P33", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P33", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P34", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P34", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P35", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P35", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P36", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P36", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P37", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P37", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P38", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P38", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P39", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P39", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P40", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P40", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P41", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P41", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P42", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P42", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P43", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P43", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P44", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P44", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("P45", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P45", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PrescriptionKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrescriptionKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TimesQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P01", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P01", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P01", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P01", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P02", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P02", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P02", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P02", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P03", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P03", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P03", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P03", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P04", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P04", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P04", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P04", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P05", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P05", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P05", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P05", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P06", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P06", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P06", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P06", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P07", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P07", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P07", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P07", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P08", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P08", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P08", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P08", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P09", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P09", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P09", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P09", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P10", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P10", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P10", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P10", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P11", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P11", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P11", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P11", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P12", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P12", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P12", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P12", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P13", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P13", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P13", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P13", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P14", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P14", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P14", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P14", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P15", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P15", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P15", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P15", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P16", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P16", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P16", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P16", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P17", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P17", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P17", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P17", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P18", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P18", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P18", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P18", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P19", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P19", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P19", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P19", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P20", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P20", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P20", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P20", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P21", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P21", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P21", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P21", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P22", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P22", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P22", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P22", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P23", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P23", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P23", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P23", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P24", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P24", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P24", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P24", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P25", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P25", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P25", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P25", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P26", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P26", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P26", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P26", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P27", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P27", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P27", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P27", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P28", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P28", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P28", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P28", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P29", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P29", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P29", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P29", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P30", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P30", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P30", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P30", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P31", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P31", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P31", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P31", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P32", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P32", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P32", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P32", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P33", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P33", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P33", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P33", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P34", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P34", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P34", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P34", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P35", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P35", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P35", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P35", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P36", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P36", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P36", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P36", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P37", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P37", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P37", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P37", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P38", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P38", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P38", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P38", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P39", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P39", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P39", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P39", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P40", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P40", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P40", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P40", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P41", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P41", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P41", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P41", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P42", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P42", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P42", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P42", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P43", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P43", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P43", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P43", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P44", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P44", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P44", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P44", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_P45", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P45", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_P45", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "P45", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PacketKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Total", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT         PKey, PrescriptionKey, DrugName, TTP, TimesQty, Days, P01, P02, P03, P04, 
                          P05, P06, P07, P08, P09, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, 
                          P20, P21, P22, P23, P24, P25, P26, P27, P28, P29, P30, P31, P32, P33, P34, 
                          P35, P36, P37, P38, P39, P40, P41, P42, P43, P44, P45, PacketKey, Total
FROM             Packet";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.PacketDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.PacketDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.PacketDataTable dataTable = new PRINTERDataSet.PacketDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.PacketDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Packet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete() {
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PKey, 
                    global::System.Nullable<int> PrescriptionKey, 
                    string DrugName, 
                    string TTP, 
                    global::System.Nullable<float> TimesQty, 
                    global::System.Nullable<int> Days, 
                    bool P01, 
                    bool P02, 
                    bool P03, 
                    bool P04, 
                    bool P05, 
                    bool P06, 
                    bool P07, 
                    bool P08, 
                    bool P09, 
                    bool P10, 
                    bool P11, 
                    bool P12, 
                    bool P13, 
                    bool P14, 
                    bool P15, 
                    bool P16, 
                    bool P17, 
                    bool P18, 
                    bool P19, 
                    bool P20, 
                    bool P21, 
                    bool P22, 
                    bool P23, 
                    bool P24, 
                    bool P25, 
                    bool P26, 
                    bool P27, 
                    bool P28, 
                    bool P29, 
                    bool P30, 
                    bool P31, 
                    bool P32, 
                    bool P33, 
                    bool P34, 
                    bool P35, 
                    bool P36, 
                    bool P37, 
                    bool P38, 
                    bool P39, 
                    bool P40, 
                    bool P41, 
                    bool P42, 
                    bool P43, 
                    bool P44, 
                    bool P45, 
                    global::System.Nullable<float> Total) {
            if ((PKey == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((PrescriptionKey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PrescriptionKey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DrugName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Days.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(P01));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(P02));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(P03));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(P04));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(P05));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(P06));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(P07));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(P08));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(P09));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(P10));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(P11));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(P12));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(P13));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(P14));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(P15));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(P16));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(P17));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(P18));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(P19));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(P20));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(P21));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(P22));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(P23));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(P24));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(P25));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(P26));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(P27));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(P28));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(P29));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(P30));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(P31));
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(P32));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(P33));
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(P34));
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(P35));
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(P36));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(P37));
            this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(P38));
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(P39));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(P40));
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(P41));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(P42));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(P43));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(P44));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(P45));
            if ((Total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PKey, 
                    global::System.Nullable<int> PrescriptionKey, 
                    string DrugName, 
                    string TTP, 
                    global::System.Nullable<float> TimesQty, 
                    global::System.Nullable<int> Days, 
                    bool P01, 
                    bool P02, 
                    bool P03, 
                    bool P04, 
                    bool P05, 
                    bool P06, 
                    bool P07, 
                    bool P08, 
                    bool P09, 
                    bool P10, 
                    bool P11, 
                    bool P12, 
                    bool P13, 
                    bool P14, 
                    bool P15, 
                    bool P16, 
                    bool P17, 
                    bool P18, 
                    bool P19, 
                    bool P20, 
                    bool P21, 
                    bool P22, 
                    bool P23, 
                    bool P24, 
                    bool P25, 
                    bool P26, 
                    bool P27, 
                    bool P28, 
                    bool P29, 
                    bool P30, 
                    bool P31, 
                    bool P32, 
                    bool P33, 
                    bool P34, 
                    bool P35, 
                    bool P36, 
                    bool P37, 
                    bool P38, 
                    bool P39, 
                    bool P40, 
                    bool P41, 
                    bool P42, 
                    bool P43, 
                    bool P44, 
                    bool P45, 
                    global::System.Nullable<float> Total, 
                    string Original_PKey, 
                    global::System.Nullable<int> Original_PrescriptionKey, 
                    string Original_DrugName, 
                    string Original_TTP, 
                    global::System.Nullable<float> Original_TimesQty, 
                    global::System.Nullable<int> Original_Days, 
                    bool Original_P01, 
                    bool Original_P02, 
                    bool Original_P03, 
                    bool Original_P04, 
                    bool Original_P05, 
                    bool Original_P06, 
                    bool Original_P07, 
                    bool Original_P08, 
                    bool Original_P09, 
                    bool Original_P10, 
                    bool Original_P11, 
                    bool Original_P12, 
                    bool Original_P13, 
                    bool Original_P14, 
                    bool Original_P15, 
                    bool Original_P16, 
                    bool Original_P17, 
                    bool Original_P18, 
                    bool Original_P19, 
                    bool Original_P20, 
                    bool Original_P21, 
                    bool Original_P22, 
                    bool Original_P23, 
                    bool Original_P24, 
                    bool Original_P25, 
                    bool Original_P26, 
                    bool Original_P27, 
                    bool Original_P28, 
                    bool Original_P29, 
                    bool Original_P30, 
                    bool Original_P31, 
                    bool Original_P32, 
                    bool Original_P33, 
                    bool Original_P34, 
                    bool Original_P35, 
                    bool Original_P36, 
                    bool Original_P37, 
                    bool Original_P38, 
                    bool Original_P39, 
                    bool Original_P40, 
                    bool Original_P41, 
                    bool Original_P42, 
                    bool Original_P43, 
                    bool Original_P44, 
                    bool Original_P45, 
                    int Original_PacketKey, 
                    global::System.Nullable<float> Original_Total) {
            if ((PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((PrescriptionKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PrescriptionKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(P01));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(P02));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(P03));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(P04));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(P05));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(P06));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(P07));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(P08));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(P09));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(P10));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(P11));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(P12));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(P13));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(P14));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(P15));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(P16));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(P17));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(P18));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(P19));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(P20));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(P21));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(P22));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(P23));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(P24));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(P25));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(P26));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(P27));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(P28));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(P29));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(P30));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(P31));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(P32));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(P33));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(P34));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(P35));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(P36));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(P37));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(P38));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(P39));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(P40));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(P41));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(P42));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(P43));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(P44));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(P45));
            if ((Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_PKey));
            }
            if ((Original_PrescriptionKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_PrescriptionKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_DrugName));
            }
            if ((Original_TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_TTP));
            }
            if ((Original_TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((float)(Original_TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_P01));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_P02));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_P03));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_P04));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_P05));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_P06));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_P07));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_P08));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_P09));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_P10));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(Original_P11));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(Original_P12));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_P13));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(Original_P14));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(Original_P15));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((bool)(Original_P16));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(Original_P17));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((bool)(Original_P18));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((bool)(Original_P19));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((bool)(Original_P20));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((bool)(Original_P21));
            this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[107].Value = ((bool)(Original_P22));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(Original_P23));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(Original_P24));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((bool)(Original_P25));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(Original_P26));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(Original_P27));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_P28));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((bool)(Original_P29));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((bool)(Original_P30));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[125].Value = ((bool)(Original_P31));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(Original_P32));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((bool)(Original_P33));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((bool)(Original_P34));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((bool)(Original_P35));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(Original_P36));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(Original_P37));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Original_P38));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((bool)(Original_P39));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[143].Value = ((bool)(Original_P40));
            this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[145].Value = ((bool)(Original_P41));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[147].Value = ((bool)(Original_P42));
            this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[149].Value = ((bool)(Original_P43));
            this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[151].Value = ((bool)(Original_P44));
            this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[153].Value = ((bool)(Original_P45));
            this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_PacketKey));
            if ((Original_Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((float)(Original_Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PacketItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PacketItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PacketItem";
            tableMapping.ColumnMappings.Add("PacketItemKey", "PacketItemKey");
            tableMapping.ColumnMappings.Add("PKey", "PKey");
            tableMapping.ColumnMappings.Add("DrugName", "DrugName");
            tableMapping.ColumnMappings.Add("TTP", "TTP");
            tableMapping.ColumnMappings.Add("TimesQty", "TimesQty");
            tableMapping.ColumnMappings.Add("Days", "Days");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("PacketNumber", "PacketNumber");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM PacketItem";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PacketItem` (`PKey`, `DrugName`, `TTP`, `TimesQty`, `Days`, `Total`," +
                " `PacketNumber`) VALUES (?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PacketNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PacketItem` SET `PKey` = ?, `DrugName` = ?, `TTP` = ?, `TimesQty` = ?, `Days` = ?, `Total` = ?, `PacketNumber` = ? WHERE ((`PacketItemKey` = ?) AND ((? = 1 AND `PKey` IS NULL) OR (`PKey` = ?)) AND ((? = 1 AND `DrugName` IS NULL) OR (`DrugName` = ?)) AND ((? = 1 AND `TTP` IS NULL) OR (`TTP` = ?)) AND ((? = 1 AND `TimesQty` IS NULL) OR (`TimesQty` = ?)) AND ((? = 1 AND `Days` IS NULL) OR (`Days` = ?)) AND ((? = 1 AND `Total` IS NULL) OR (`Total` = ?)) AND ((? = 1 AND `PacketNumber` IS NULL) OR (`PacketNumber` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PacketNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PacketItemKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketItemKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PKey", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DrugName", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DrugName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DrugName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TTP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TTP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TTP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TimesQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TimesQty", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimesQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Days", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Days", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Days", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Total", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Total", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Total", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PacketNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PacketNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PacketNumber", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT         PacketItemKey, PKey, DrugName, TTP, TimesQty, Days, Total, \r\n     " +
                "                     PacketNumber\r\nFROM             PacketItem\r\nORDER BY  Packet" +
                "Number";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.PacketItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.PacketItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.PacketItemDataTable dataTable = new PRINTERDataSet.PacketItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.PacketItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PacketItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete() {
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PKey, string DrugName, string TTP, global::System.Nullable<float> TimesQty, global::System.Nullable<short> Days, global::System.Nullable<float> Total, global::System.Nullable<int> PacketNumber) {
            if ((PKey == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((DrugName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(Days.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PacketNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PacketNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PKey, string DrugName, string TTP, global::System.Nullable<float> TimesQty, global::System.Nullable<short> Days, global::System.Nullable<float> Total, global::System.Nullable<int> PacketNumber, int Original_PacketItemKey, string Original_PKey, string Original_DrugName, string Original_TTP, global::System.Nullable<float> Original_TimesQty, global::System.Nullable<short> Original_Days, global::System.Nullable<float> Original_Total, global::System.Nullable<int> Original_PacketNumber) {
            if ((PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PKey));
            }
            if ((DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DrugName));
            }
            if ((TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TTP));
            }
            if ((TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((float)(Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PacketNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PacketNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PacketItemKey));
            if ((Original_PKey == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PKey));
            }
            if ((Original_DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DrugName));
            }
            if ((Original_TTP == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TTP));
            }
            if ((Original_TimesQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(Original_TimesQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(Original_Days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(Original_Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_PacketNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_PacketNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ParameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ParameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Parameter";
            tableMapping.ColumnMappings.Add("ParameterKey", "ParameterKey");
            tableMapping.ColumnMappings.Add("ParameterType", "ParameterType");
            tableMapping.ColumnMappings.Add("Parameter", "Parameter");
            tableMapping.ColumnMappings.Add("ParameterText", "ParameterText");
            tableMapping.ColumnMappings.Add("ParameterDefValue", "ParameterDefValue");
            tableMapping.ColumnMappings.Add("ParameterValue", "ParameterValue");
            tableMapping.ColumnMappings.Add("seq", "seq");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Parameter` WHERE ((`ParameterKey` = ?) AND ((? = 1 AND `ParameterType` IS NULL) OR (`ParameterType` = ?)) AND ((? = 1 AND `Parameter` IS NULL) OR (`Parameter` = ?)) AND ((? = 1 AND `ParameterText` IS NULL) OR (`ParameterText` = ?)) AND ((? = 1 AND `ParameterDefValue` IS NULL) OR (`ParameterDefValue` = ?)) AND ((? = 1 AND `ParameterValue` IS NULL) OR (`ParameterValue` = ?)) AND ((? = 1 AND `seq` IS NULL) OR (`seq` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Parameter", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Parameter", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterDefValue", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterDefValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterValue", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Parameter` (`ParameterType`, `Parameter`, `ParameterText`, `Paramete" +
                "rDefValue`, `ParameterValue`, `seq`) VALUES (?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Parameter", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterDefValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Parameter` SET `ParameterType` = ?, `Parameter` = ?, `ParameterText` = ?, `ParameterDefValue` = ?, `ParameterValue` = ?, `seq` = ? WHERE ((`ParameterKey` = ?) AND ((? = 1 AND `ParameterType` IS NULL) OR (`ParameterType` = ?)) AND ((? = 1 AND `Parameter` IS NULL) OR (`Parameter` = ?)) AND ((? = 1 AND `ParameterText` IS NULL) OR (`ParameterText` = ?)) AND ((? = 1 AND `ParameterDefValue` IS NULL) OR (`ParameterDefValue` = ?)) AND ((? = 1 AND `ParameterValue` IS NULL) OR (`ParameterValue` = ?)) AND ((? = 1 AND `seq` IS NULL) OR (`seq` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Parameter", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterDefValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ParameterValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterKey", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterKey", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Parameter", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Parameter", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Parameter", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterText", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterText", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterText", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterDefValue", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterDefValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterDefValue", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ParameterValue", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ParameterValue", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ParameterValue", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_seq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "seq", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::VP.Properties.Settings.Default.PRINTERConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT         ParameterKey, ParameterType, Parameter, ParameterText, ParameterDe" +
                "fValue, \r\n                          ParameterValue, seq\r\nFROM             Parame" +
                "ter\r\nORDER BY  seq";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRINTERDataSet.ParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRINTERDataSet.ParameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRINTERDataSet.ParameterDataTable dataTable = new PRINTERDataSet.ParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet.ParameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRINTERDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Parameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ParameterKey, string Original_ParameterType, string Original_Parameter, string Original_ParameterText, global::System.Nullable<short> Original_ParameterDefValue, global::System.Nullable<short> Original_ParameterValue, global::System.Nullable<int> Original_seq) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ParameterKey));
            if ((Original_ParameterType == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ParameterType));
            }
            if ((Original_Parameter == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Parameter));
            }
            if ((Original_ParameterText == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ParameterText));
            }
            if ((Original_ParameterDefValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_ParameterDefValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ParameterValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_ParameterValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_seq.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_seq.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ParameterType, string Parameter, string ParameterText, global::System.Nullable<short> ParameterDefValue, global::System.Nullable<short> ParameterValue, global::System.Nullable<int> seq) {
            if ((ParameterType == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ParameterType));
            }
            if ((Parameter == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Parameter));
            }
            if ((ParameterText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ParameterText));
            }
            if ((ParameterDefValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(ParameterDefValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ParameterValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(ParameterValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((seq.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(seq.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ParameterType, string Parameter, string ParameterText, global::System.Nullable<short> ParameterDefValue, global::System.Nullable<short> ParameterValue, global::System.Nullable<int> seq, int Original_ParameterKey, string Original_ParameterType, string Original_Parameter, string Original_ParameterText, global::System.Nullable<short> Original_ParameterDefValue, global::System.Nullable<short> Original_ParameterValue, global::System.Nullable<int> Original_seq) {
            if ((ParameterType == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ParameterType));
            }
            if ((Parameter == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Parameter));
            }
            if ((ParameterText == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ParameterText));
            }
            if ((ParameterDefValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(ParameterDefValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ParameterValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(ParameterValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((seq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(seq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ParameterKey));
            if ((Original_ParameterType == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ParameterType));
            }
            if ((Original_Parameter == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Parameter));
            }
            if ((Original_ParameterText == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ParameterText));
            }
            if ((Original_ParameterDefValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(Original_ParameterDefValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ParameterValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(Original_ParameterValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_seq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_seq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PrescriptionTableAdapter _prescriptionTableAdapter;
        
        private PrescriptionItemTableAdapter _prescriptionItemTableAdapter;
        
        private LayoutTableAdapter _layoutTableAdapter;
        
        private LayoutItemTableAdapter _layoutItemTableAdapter;
        
        private DrugTableAdapter _drugTableAdapter;
        
        private TTPTableAdapter _tTPTableAdapter;
        
        private PacketTableAdapter _packetTableAdapter;
        
        private PacketItemTableAdapter _packetItemTableAdapter;
        
        private ParameterTableAdapter _parameterTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PrescriptionTableAdapter PrescriptionTableAdapter {
            get {
                return this._prescriptionTableAdapter;
            }
            set {
                if (((this._prescriptionTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._prescriptionTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._prescriptionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PrescriptionItemTableAdapter PrescriptionItemTableAdapter {
            get {
                return this._prescriptionItemTableAdapter;
            }
            set {
                if (((this._prescriptionItemTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._prescriptionItemTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._prescriptionItemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LayoutTableAdapter LayoutTableAdapter {
            get {
                return this._layoutTableAdapter;
            }
            set {
                if (((this._layoutTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._layoutTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._layoutTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LayoutItemTableAdapter LayoutItemTableAdapter {
            get {
                return this._layoutItemTableAdapter;
            }
            set {
                if (((this._layoutItemTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._layoutItemTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._layoutItemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DrugTableAdapter DrugTableAdapter {
            get {
                return this._drugTableAdapter;
            }
            set {
                if (((this._drugTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._drugTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._drugTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TTPTableAdapter TTPTableAdapter {
            get {
                return this._tTPTableAdapter;
            }
            set {
                if (((this._tTPTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tTPTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._tTPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PacketTableAdapter PacketTableAdapter {
            get {
                return this._packetTableAdapter;
            }
            set {
                if (((this._packetTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._packetTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._packetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PacketItemTableAdapter PacketItemTableAdapter {
            get {
                return this._packetItemTableAdapter;
            }
            set {
                if (((this._packetItemTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._packetItemTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._packetItemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ParameterTableAdapter ParameterTableAdapter {
            get {
                return this._parameterTableAdapter;
            }
            set {
                if (((this._parameterTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._parameterTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
                }
                this._parameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._prescriptionTableAdapter != null) 
                            && (this._prescriptionTableAdapter.Connection != null))) {
                    return this._prescriptionTableAdapter.Connection;
                }
                if (((this._prescriptionItemTableAdapter != null) 
                            && (this._prescriptionItemTableAdapter.Connection != null))) {
                    return this._prescriptionItemTableAdapter.Connection;
                }
                if (((this._layoutTableAdapter != null) 
                            && (this._layoutTableAdapter.Connection != null))) {
                    return this._layoutTableAdapter.Connection;
                }
                if (((this._layoutItemTableAdapter != null) 
                            && (this._layoutItemTableAdapter.Connection != null))) {
                    return this._layoutItemTableAdapter.Connection;
                }
                if (((this._drugTableAdapter != null) 
                            && (this._drugTableAdapter.Connection != null))) {
                    return this._drugTableAdapter.Connection;
                }
                if (((this._tTPTableAdapter != null) 
                            && (this._tTPTableAdapter.Connection != null))) {
                    return this._tTPTableAdapter.Connection;
                }
                if (((this._packetTableAdapter != null) 
                            && (this._packetTableAdapter.Connection != null))) {
                    return this._packetTableAdapter.Connection;
                }
                if (((this._packetItemTableAdapter != null) 
                            && (this._packetItemTableAdapter.Connection != null))) {
                    return this._packetItemTableAdapter.Connection;
                }
                if (((this._parameterTableAdapter != null) 
                            && (this._parameterTableAdapter.Connection != null))) {
                    return this._parameterTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._prescriptionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._prescriptionItemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._layoutTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._layoutItemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._drugTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tTPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._packetTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._packetItemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._parameterTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(PRINTERDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._layoutTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Layout.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._layoutTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._prescriptionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Prescription.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._prescriptionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._packetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Packet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._packetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._packetItemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PacketItem.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._packetItemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tTPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TTP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tTPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._prescriptionItemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PrescriptionItem.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._prescriptionItemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._layoutItemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LayoutItem.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._layoutItemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._drugTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Drug.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._drugTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(PRINTERDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._layoutTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Layout.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._layoutTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._prescriptionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Prescription.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._prescriptionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._packetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Packet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._packetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._packetItemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PacketItem.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._packetItemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tTPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TTP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tTPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._prescriptionItemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PrescriptionItem.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._prescriptionItemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._layoutItemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LayoutItem.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._layoutItemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._drugTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Drug.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._drugTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(PRINTERDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._drugTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Drug.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._drugTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._layoutItemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LayoutItem.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._layoutItemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._prescriptionItemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PrescriptionItem.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._prescriptionItemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tTPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TTP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tTPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._packetItemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PacketItem.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._packetItemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._packetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Packet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._packetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._prescriptionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Prescription.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._prescriptionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._layoutTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Layout.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._layoutTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(PRINTERDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Closed) 
                        == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._prescriptionTableAdapter != null)) {
                    revertConnections.Add(this._prescriptionTableAdapter, this._prescriptionTableAdapter.Connection);
                    this._prescriptionTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._prescriptionTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._prescriptionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._prescriptionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._prescriptionTableAdapter.Adapter);
                    }
                }
                if ((this._prescriptionItemTableAdapter != null)) {
                    revertConnections.Add(this._prescriptionItemTableAdapter, this._prescriptionItemTableAdapter.Connection);
                    this._prescriptionItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._prescriptionItemTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._prescriptionItemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._prescriptionItemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._prescriptionItemTableAdapter.Adapter);
                    }
                }
                if ((this._layoutTableAdapter != null)) {
                    revertConnections.Add(this._layoutTableAdapter, this._layoutTableAdapter.Connection);
                    this._layoutTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._layoutTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._layoutTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._layoutTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._layoutTableAdapter.Adapter);
                    }
                }
                if ((this._layoutItemTableAdapter != null)) {
                    revertConnections.Add(this._layoutItemTableAdapter, this._layoutItemTableAdapter.Connection);
                    this._layoutItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._layoutItemTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._layoutItemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._layoutItemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._layoutItemTableAdapter.Adapter);
                    }
                }
                if ((this._drugTableAdapter != null)) {
                    revertConnections.Add(this._drugTableAdapter, this._drugTableAdapter.Connection);
                    this._drugTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._drugTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._drugTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._drugTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._drugTableAdapter.Adapter);
                    }
                }
                if ((this._tTPTableAdapter != null)) {
                    revertConnections.Add(this._tTPTableAdapter, this._tTPTableAdapter.Connection);
                    this._tTPTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._tTPTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._tTPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tTPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tTPTableAdapter.Adapter);
                    }
                }
                if ((this._packetTableAdapter != null)) {
                    revertConnections.Add(this._packetTableAdapter, this._packetTableAdapter.Connection);
                    this._packetTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._packetTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._packetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._packetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._packetTableAdapter.Adapter);
                    }
                }
                if ((this._packetItemTableAdapter != null)) {
                    revertConnections.Add(this._packetItemTableAdapter, this._packetItemTableAdapter.Connection);
                    this._packetItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._packetItemTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._packetItemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._packetItemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._packetItemTableAdapter.Adapter);
                    }
                }
                if ((this._parameterTableAdapter != null)) {
                    revertConnections.Add(this._parameterTableAdapter, this._parameterTableAdapter.Connection);
                    this._parameterTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._parameterTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._parameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._parameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._parameterTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._prescriptionTableAdapter != null)) {
                    this._prescriptionTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._prescriptionTableAdapter]));
                    this._prescriptionTableAdapter.Transaction = null;
                }
                if ((this._prescriptionItemTableAdapter != null)) {
                    this._prescriptionItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._prescriptionItemTableAdapter]));
                    this._prescriptionItemTableAdapter.Transaction = null;
                }
                if ((this._layoutTableAdapter != null)) {
                    this._layoutTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._layoutTableAdapter]));
                    this._layoutTableAdapter.Transaction = null;
                }
                if ((this._layoutItemTableAdapter != null)) {
                    this._layoutItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._layoutItemTableAdapter]));
                    this._layoutItemTableAdapter.Transaction = null;
                }
                if ((this._drugTableAdapter != null)) {
                    this._drugTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._drugTableAdapter]));
                    this._drugTableAdapter.Transaction = null;
                }
                if ((this._tTPTableAdapter != null)) {
                    this._tTPTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._tTPTableAdapter]));
                    this._tTPTableAdapter.Transaction = null;
                }
                if ((this._packetTableAdapter != null)) {
                    this._packetTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._packetTableAdapter]));
                    this._packetTableAdapter.Transaction = null;
                }
                if ((this._packetItemTableAdapter != null)) {
                    this._packetItemTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._packetItemTableAdapter]));
                    this._packetItemTableAdapter.Transaction = null;
                }
                if ((this._parameterTableAdapter != null)) {
                    this._parameterTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._parameterTableAdapter]));
                    this._parameterTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591